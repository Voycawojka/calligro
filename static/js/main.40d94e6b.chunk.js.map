{"version":3,"sources":["ui/generation/generationCharacterList/generationCharacterList.module.scss","ui/generation/navbar/navbar.module.scss","ui/generation/cookieNotice/cookieNotice.module.scss","ui/generation/generationView/generationView.module.scss","ui/generation/footer/footer.module.scss","ui/generation/header/header.module.scss","ui/generation/dropzone/dropzone.module.scss","ui/generation/author/author.module.scss","ui/generation/fontCreationView/fontCreationView.module.scss","ui/generation/policy/policy.module.scss","utils/canvasHelpers.ts","generation/fs/image.ts","generation/packing/imagePacking.ts","generation/template/parse.ts","generation/template/slotDrawing.ts","utils/decorators.ts","generation/template/Template.ts","generation/font/Font.ts","generation/font/txtSaver.ts","generation/fs/zip.ts","generation/font/download.ts","ui/generation/dropzone/Dropzone.tsx","ui/generation/fa/Fa.tsx","ui/generation/fontCreationView/FontCreationView.tsx","ui/generation/generationCharacterList/GenerationCharacterList.tsx","generation/template/download.ts","ui/generation/generationView/GenerationView.tsx","ui/generation/navbar/Navbar.tsx","ui/generation/header/Header.tsx","ui/generation/author/Author.tsx","ui/generation/footer/Footer.tsx","ui/generation/policy/Policy.tsx","ui/generation/cookieNotice/CookieNotice.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","wrapText","ctx","text","maxWidth","split","map","paragraph","flatMap","words","lines","forEach","word","currentLine","length","measureText","join","width","push","createCanvas","height","color","canvas","document","createElement","getContext","Error","fillStyle","fillRect","convertToBlob","Promise","resolve","reject","toBlob","blob","blobToCanvas","dataUrl","URL","createObjectURL","image","onload","drawImage","remove","revokeObjectURL","src","packFromSheet","source","rects","data","packedRects","nextX","nextY","furthestSoFar","lowestSoFar","sort","a","b","h","rect","w","packed","x","y","sourceRect","pack","parseTemplateCode","code","json","atob","codePayload","JSON","parse","version","Number","isInteger","base","Array","isArray","slots","incorrectSlot","find","slot","value","stringify","drawInfo","textAlign","options","size","maxHeight","trySize","font","line","i","fillText","drawWrappedText","memoize","_target","_propertyKey","descriptor","targetFunction","get","Function","descriptorProp","cache","Map","args","key","cachedResult","result","apply","this","set","Template","slotDim","index","Math","floor","getSlotPosition","vertMargin","strokeStyle","strokeRect","charRectX","charRectY","beginPath","moveTo","lineTo","stroke","clearRect","character","drawSlot","hMargin","payload","charCodeAt","btoa","ceil","sqrt","maxW","max","maxH","slotH","generateFont","templateImg","templateCode","fontConfig","tempConfig","unicode","String","fromCharCode","template","sourceRects","packedTexture","packedBlob","specification","info","face","stretchH","aa","padding","up","right","down","left","spacing","horizontal","horizontalSpacing","vertical","verticalSpacing","outline","common","lineHeight","scaleW","scaleH","pages","id","file","chars","xoffset","yoffset","xadvance","page","chnl","tag","name","properties","joinedProps","prop","toString","fontSpecToTxt","infoTag","commonTag","pageTags","charTags","char","downloadBlob","link","href","download","click","downloadArchive","files","archive","downloadZip","downloadBmf","fntFile","input","Dropzone","props","templateInput","React","createRef","type","dataType","handleDropzoneInput","stateTarget","current","handleFileInput","event","preventDefault","dataTransfer","renderUploadedFileName","templateName","className","styles","fileName","container","onDrop","handleDrop","onDragOver","dragOver","onDragEnter","dragEnter","onDragLeave","dragLeave","label","inputName","inputContainer","ref","onChange","handleInput","accept","acceptedInputType","title","Component","bind","Fa","icon","FontCreationView","state","horizontalMargin","verticalMargin","setState","prevState","isCodeInputValid","parseInt","target","fontSpec","dropzones","option","optionsLabel","optionsInput","handleNumericalInput","times","questionMark","onClick","downloadFont","downloadButton","disabled","isInputsValid","heading","instructionList","instructionListItem","featureList","feature","goodbye","GenerationCharacterList","charList","charSet","defaultWidth","defaultHeight","characterContainer","inputInvalid","handleDimensionChange","buttonContainer","resetCharacterDimensions","button","undoButton","generateImageBlob","generateTemplateCode","GenerationView","setInitialState","storedData","window","localStorage","getItem","parsedData","createCharArray","prevProps","setItem","from","newCharArray","filter","isUniqueCharSet","Set","newCharSet","oldChar","slotArray","every","valueName","newValue","dimension","workSlot","downloadTemplate","charactersTextArea","handleCharSetInput","charString","parameters","commonParameters","commonLabel","commonInput","handleDefaultValueChange","isBaseValid","commonInputIvalid","isSlotArrayValid","perCharacterParameters","to","Navbar","exact","navLink","navLinkLeft","activeClassName","navLinkActive","linkBig","linkSmall","navLinkRight","Header","alt","logo","sourceNoticeContainer","sourceNoticeLine1","sourceNoticeLine2","githubCorner","bannerColor","octoColor","Author","renderSocial","socialLinks","social","socialLink","url","socialContainer","Footer","policy","authors","linkContainer","Policy","policyContainer","menuLink","CookieNotice","acknowledged","Cookies","updateAnalytics","expires","analyticsStatus","gtag","analytics_storage","content","details","list","listItem","handleExit","App","path","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40d94e6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"generationCharacterList_container__3GuOi\",\"character\":\"generationCharacterList_character__2rExn\",\"input\":\"generationCharacterList_input__39dSd\",\"inputInvalid\":\"generationCharacterList_inputInvalid__1jHOk\",\"times\":\"generationCharacterList_times___04Ni\",\"undoButton\":\"generationCharacterList_undoButton__3rwB-\",\"characterContainer\":\"generationCharacterList_characterContainer__27T8l\",\"button\":\"generationCharacterList_button__1GLlC\",\"buttonContainer\":\"generationCharacterList_buttonContainer__3-ogl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"navbar_container__37WB4\",\"linkBig\":\"navbar_linkBig__zmIT9\",\"linkSmall\":\"navbar_linkSmall__2Brh4\",\"navLink\":\"navbar_navLink__3NK4p\",\"navLinkLeft\":\"navbar_navLinkLeft__UA8H7\",\"navLinkRight\":\"navbar_navLinkRight__3BYWT\",\"navLinkActive\":\"navbar_navLinkActive__JHOaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cookieNotice_container__1Q5aW\",\"heading\":\"cookieNotice_heading__1ppIL\",\"image\":\"cookieNotice_image__2AQFE\",\"content\":\"cookieNotice_content__1KUj1\",\"list\":\"cookieNotice_list__8kV6w\",\"listItem\":\"cookieNotice_listItem___Gqxs\",\"link\":\"cookieNotice_link__1Dyak\",\"details\":\"cookieNotice_details__1oDuP\",\"linkContainer\":\"cookieNotice_linkContainer__SXyNB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"generationView_container__3Fgnr\",\"parameters\":\"generationView_parameters__29X54\",\"commonParameters\":\"generationView_commonParameters__YXtC-\",\"perCharacterParameters\":\"generationView_perCharacterParameters__S0O5E\",\"charactersTextArea\":\"generationView_charactersTextArea__1PFxl\",\"instructionList\":\"generationView_instructionList__SFUDy\",\"instructionListItem\":\"generationView_instructionListItem__2OGuO\",\"label\":\"generationView_label__3Iy_E\",\"commonLabel\":\"generationView_commonLabel__2vnxY\",\"commonInput\":\"generationView_commonInput__2dbDD\",\"commonInputIvalid\":\"generationView_commonInputIvalid__20XvO\",\"heading\":\"generationView_heading__3uRe_\",\"paragraph\":\"generationView_paragraph__3w3_W\",\"downloadButton\":\"generationView_downloadButton__U1Nsf\",\"times\":\"generationView_times__1kN51\",\"questionMark\":\"generationView_questionMark__P_5Tb\",\"commonContainer\":\"generationView_commonContainer__137NA\",\"link\":\"generationView_link__3yZP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__3_wfr\",\"policy\":\"footer_policy__JXBvy\",\"link\":\"footer_link__3MEnl\",\"authors\":\"footer_authors__NS734\",\"linkContainer\":\"footer_linkContainer__UVDcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__3kiaD\",\"sourceNoticeContainer\":\"header_sourceNoticeContainer__2AvyN\",\"sourceNoticeLine1\":\"header_sourceNoticeLine1__21f5Z\",\"sourceNoticeLine2\":\"header_sourceNoticeLine2__NmScR\",\"logo\":\"header_logo__1GKSW\",\"githubCorner\":\"header_githubCorner__o0nSv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dropzone_container__3YvRs\",\"inputContainer\":\"dropzone_inputContainer__OD9Y7\",\"label\":\"dropzone_label__xsqTw\",\"fileName\":\"dropzone_fileName__CjjRG\",\"input\":\"dropzone_input__3YtRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"author_container__pl8h1\",\"socialLink\":\"author_socialLink__SgCuK\",\"name\":\"author_name__2Hjyj\",\"socialContainer\":\"author_socialContainer__LVnRs\",\"icon\":\"author_icon__5pj1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fontCreationView_container__1ZXJX\",\"instructionList\":\"fontCreationView_instructionList__FwOFE\",\"instructionListItem\":\"fontCreationView_instructionListItem__vUBPN\",\"heading\":\"fontCreationView_heading__1GFxr\",\"feature\":\"fontCreationView_feature__2jP9S\",\"goodbye\":\"fontCreationView_goodbye__2ZSns\",\"featureList\":\"fontCreationView_featureList__3Ri7d\",\"dropzones\":\"fontCreationView_dropzones__3zbhE\",\"options\":\"fontCreationView_options__gw4BI\",\"label\":\"fontCreationView_label__10O7T\",\"optionsLabel\":\"fontCreationView_optionsLabel__2o_9q\",\"optionsInput\":\"fontCreationView_optionsInput__4n2s9\",\"times\":\"fontCreationView_times__3Lh99\",\"questionMark\":\"fontCreationView_questionMark__1BQzJ\",\"option\":\"fontCreationView_option__3bbJO\",\"downloadButton\":\"fontCreationView_downloadButton__3Z-bI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"policyContainer\":\"policy_policyContainer__1jTRp\",\"menuLink\":\"policy_menuLink__2JM1P\"};","function wrapText(ctx: CanvasRenderingContext2D, text: string, maxWidth: number): string[] {\n    return text\n        .split('\\n')\n        .map(paragraph => paragraph.split(' '))\n        .flatMap(words => {\n            const lines: string[][] = [[]]\n\n            words.forEach(word => {\n                const currentLine = lines[lines.length-1]\n                const width = ctx.measureText(`${currentLine.join(' ')} ${word}`).width\n\n                if (width < maxWidth) {\n                    currentLine.push(word)\n                } else {\n                    lines.push([word])\n                }\n            })\n\n            return lines.map(words => words.join(' '))\n        })\n}\n\nexport function createCanvas(width: number, height: number, color?: string): [HTMLCanvasElement, CanvasRenderingContext2D] {\n    const canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n\n    const ctx = canvas.getContext('2d')\n\n    if (!ctx) {\n        throw new Error('Your browser doesn\\'t support 2d canvas context. Use a modern browser, please.')\n    }\n\n    if (color) {\n        ctx.fillStyle = color\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n    }\n\n    return [canvas, ctx]\n}\n\ntype DrawWrappedTextOptions = {\n    x: number,\n    y: number,\n    size: number,\n    maxWidth: number,\n    maxHeight?: number\n}\n\nexport function drawWrappedText(ctx: CanvasRenderingContext2D, text: string, options: DrawWrappedTextOptions): void {\n    const { x, y, size, maxWidth, maxHeight } = options\n    let trySize = size\n\n    ctx.font = `${trySize}px serif`\n    let lines = wrapText(ctx, text, maxWidth)\n\n    if (maxHeight) {\n        while (lines.length * trySize >= maxHeight) {\n            trySize --\n\n            ctx.font = `${trySize}px serif`\n            lines = wrapText(ctx, text, maxWidth)\n        }\n    }\n\n    lines.forEach((line, i) => ctx.fillText(line, x, y + i * trySize, maxWidth))\n}\n\nexport function convertToBlob(canvas: HTMLCanvasElement): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n        canvas.toBlob(blob => !!blob ? resolve(blob) : reject())\n    })\n}\n","import { createCanvas } from \"../../utils/canvasHelpers\"\n\nexport function blobToCanvas(blob: Blob): Promise<[HTMLCanvasElement, CanvasRenderingContext2D]> {\n    return new Promise(resolve => {\n        const dataUrl = URL.createObjectURL(blob)\n        const image = document.createElement('img')\n\n        image.onload = () => {\n            const [canvas, ctx] = createCanvas(image.width, image.height)\n\n            ctx.drawImage(image, 0, 0)\n\n            image.remove()\n            URL.revokeObjectURL(dataUrl)\n\n            resolve([canvas, ctx])\n        }\n\n        image.src = dataUrl\n    })\n}\n","import { createCanvas } from '../../utils/canvasHelpers'\nimport { Slot } from '../template/types'\n\nexport interface SourceRect {\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    slot: Slot\n}\n\nexport interface PackedRect {\n    x: number,\n    y: number,\n    sourceRect: SourceRect\n}\n\ninterface PackedData {\n    packedRects: PackedRect[],\n    width: number,\n    height: number\n}\n\nfunction pack(rects: SourceRect[], width: number): PackedData {\n    const data: PackedData = {\n        packedRects: [],\n        width: 0,\n        height: 0\n    }\n    \n    let nextX = 0\n    let nextY = 0\n    let furthestSoFar = 0\n    let lowestSoFar = 0\n\n    data.packedRects = rects\n        .sort((a, b) => b.h - a.h)\n        .map(rect => {\n            if (nextX + rect.w > width) {\n                nextX = 0\n                nextY = lowestSoFar\n            }\n\n            if (nextX + rect.w > furthestSoFar) {\n                furthestSoFar = nextX + rect.w\n            }\n\n            if (nextY + rect.h > lowestSoFar) {\n                lowestSoFar = nextY + rect.h\n            }\n\n            const packed = {\n                x: nextX,\n                y: nextY,\n                sourceRect: rect\n            }\n\n            nextX += rect.w\n\n            return packed\n        })\n    \n    data.width = furthestSoFar\n    data.height = lowestSoFar\n\n    return data\n}\n\nexport function packFromSheet(source: HTMLCanvasElement, rects: SourceRect[]): [HTMLCanvasElement, PackedRect[]] {\n    const { width, height, packedRects } = pack(rects, source.width)\n    const [canvas, ctx] = createCanvas(width, height)\n\n    packedRects.forEach(({ x, y, sourceRect }) => {\n        const { w, h } = sourceRect\n        ctx.drawImage(source, sourceRect.x, sourceRect.y, w, h, x, y, w, h)\n    })\n\n    return [canvas, packedRects]\n}\n","import { CodePayload } from './types'\n\nexport function parseTemplateCode(code: string): CodePayload {\n    const json = atob(code)\n    const codePayload: CodePayload = JSON.parse(json)\n\n    if (codePayload.version !== 0) {\n        throw new Error(`Only templates version '0' are supported, instead got version '${codePayload.version}'`)\n    }\n\n    if (!Number.isInteger(codePayload.base)) {\n        throw new Error(`Property 'base' must be an integer, instead got: ${typeof codePayload.base} '${codePayload.base}'`)\n    }\n\n    if (!Array.isArray(codePayload.slots)) {\n        throw new Error(`Property 'slots' must be an array, instead got: ${codePayload.slots} '${codePayload.slots}'`)\n    }\n\n    const incorrectSlot = codePayload.slots.find(slot => !Array.isArray(slot) || slot.length !== 3 || slot.find(value => !Number.isInteger(value)))\n    if (incorrectSlot) {\n        throw new Error(`Each slot must be a three element array (integers only). Instead found: ${JSON.stringify(incorrectSlot)}`)\n    }\n\n    return codePayload\n}\n","import { drawWrappedText } from '../../utils/canvasHelpers'\nimport { Slot } from './types'\n\ntype DrawSlotOptions = {\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    base: number,\n    vertMargin: number\n}\n\nexport function drawSlot(ctx: CanvasRenderingContext2D, slot: Slot, options: DrawSlotOptions): void {\n    const { x, y, w, h, base, vertMargin } = options\n\n    ctx.strokeStyle = 'black'\n    ctx.strokeRect(x, y, w, h)\n\n    const charRectX = x + w / 2 - slot.width / 2\n    const charRectY = y + h / 2 - slot.height / 2\n\n    ctx.strokeStyle = 'green'\n    ctx.beginPath()\n    ctx.moveTo(x, charRectY + base)\n    ctx.lineTo(x + w, charRectY + base)\n    ctx.stroke()\n\n    ctx.strokeStyle = 'red'\n    ctx.clearRect(charRectX, charRectY, slot.width, slot.height)\n    ctx.strokeRect(charRectX, charRectY, slot.width, slot.height)\n\n    ctx.fillStyle = 'black'\n    ctx.font = `${vertMargin * 0.8}px serif`\n    ctx.textAlign = 'center'\n    ctx.fillText(slot.character, x + w / 2, y + h - vertMargin / 4, w)\n}\n\nexport function drawInfo(ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number): void {\n    const info = `1) Draw characters inside the red boundaries*.\n\n2) Upload this file back to Calligro\n\n3) Paste the template code and you got yourself a font\n\n*Green lines signify the letter base.`\n\n    ctx.fillStyle = 'black'\n    ctx.textAlign = 'left'\n    drawWrappedText(ctx, info, {\n        x: x + w * 0.05,\n        y: y + h * 0.1,\n        maxWidth: w * 0.9,\n        maxHeight: h * 0.8,\n        size: h / 5\n    })\n}\n","export function memoize(_target: Object, _propertyKey: string, descriptor: PropertyDescriptor): void {\n    const targetFunction = descriptor.value ?? descriptor.get\n\n    if (!targetFunction || !(targetFunction instanceof Function)) {\n        throw Error('Memoize only supports non-setter functions.')\n    }\n\n    const descriptorProp = !!descriptor.value ? 'value' : 'get'\n    const cache = new Map<String, any>();\n\n    descriptor[descriptorProp] = function (...args: any[]) {\n        const key = JSON.stringify(args)\n        const cachedResult = cache.get(key)\n        const result = !!cachedResult ? cachedResult : targetFunction.apply(this, args)\n\n        cache.set(key, result)\n\n        return result\n    }\n}\n","import { convertToBlob, createCanvas } from '../../utils/canvasHelpers'\nimport { CodePayload, Slot } from './types'\nimport { drawInfo, drawSlot } from './slotDrawing'\nimport { memoize } from '../../utils/decorators'\n\nexport default class Template {\n    private readonly canvas: HTMLCanvasElement\n    private readonly ctx: CanvasRenderingContext2D\n\n    constructor(private readonly slots: Slot[], private readonly base: number) {\n        [this.canvas, this.ctx] = createCanvas(this.w * this.slotDim.w, this.h * this.slotDim.h, 'white')\n    }\n\n    @memoize\n    private get w(): number {\n        return Math.ceil(Math.sqrt(this.slots.length + 1))\n    }\n\n    @memoize\n    private get h(): number {\n        return Math.ceil(Math.sqrt(this.slots.length + 1))\n    }\n\n    @memoize\n    public get slotDim(): { w: number, h: number, hMargin: number } {\n        const maxW = Math.max.apply(null, this.slots.map(slot => slot.width))\n        const maxH = Math.max.apply(null, this.slots.map(slot => slot.height))\n\n        const slotW = maxW * 1.3\n        const slotH = maxH * 1.3\n        const vertMargin = (slotH - maxH) / 2\n\n        return { w: slotW, h: slotH, hMargin: vertMargin }\n    }\n\n    public getSlotPosition(index: number): { x: number, y: number } {\n        return {\n            x: (index % this.w) * this.slotDim.w,\n            y: Math.floor(index / this.w) * this.slotDim.h\n        }\n    }\n\n    @memoize\n    public generateImageBlob(): Promise<Blob> {\n        drawInfo(this.ctx, 0, 0, this.slotDim.w, this.slotDim.h)\n    \n        this.slots.forEach((slot, index) => {\n            const { x, y } = this.getSlotPosition(index + 1)\n\n            drawSlot(this.ctx, slot, {\n                x,\n                y,\n                w: this.slotDim.w,\n                h: this.slotDim.h,\n                base: this.base,\n                vertMargin: this.slotDim.hMargin\n            })\n        })\n\n        return convertToBlob(this.canvas)\n    }\n    \n    @memoize\n    public generateTemplateCode(): string {\n        const payload: CodePayload = {\n            version: 0,\n            slots: this.slots.map(slot => ([slot.character.charCodeAt(0), slot.width, slot.height])),\n            base: this.base\n        }\n\n        return btoa(JSON.stringify(payload))\n    }\n}\n","import { convertToBlob } from '../../utils/canvasHelpers';\nimport { blobToCanvas } from '../fs/image';\nimport { packFromSheet, SourceRect } from '../packing/imagePacking';\nimport { parseTemplateCode } from '../template/parse';\nimport Template from '../template/Template';\n\nexport interface FontSpec {\n    info: {\n        face: string\n        size: number\n        stretchH: number\n        aa: number\n        padding: {\n            up: number\n            right: number\n            down: number\n            left: number\n        }\n        spacing: {\n            horizontal: number\n            vertical: number\n        }\n        outline: number\n    }\n    common: {\n        lineHeight: number\n        base: number\n        scaleW: number\n        scaleH: number\n        pages: number\n    }\n    pages: {\n        id: number\n        file: string\n    }[]\n    chars: {\n        id: number\n        x: number\n        y: number\n        width: number\n        height: number\n        xoffset: number\n        yoffset: number\n        xadvance: number\n        page: number\n        chnl: 1 | 2 | 4 | 8 | 15\n    }[]\n}\n\nexport interface FontConfig {\n    horizontalSpacing: number\n    verticalSpacing: number\n    lineHeight: number\n}\n\nexport async function generateFont(templateImg: Blob, templateCode: string, fontConfig: FontConfig): Promise<[FontSpec, Blob[]]> {\n    const tempConfig = parseTemplateCode(templateCode)\n    const slots = tempConfig.slots.map(([ unicode, width, height ]) => ({ character: String.fromCharCode(unicode), width, height }))\n    const template = new Template(slots, tempConfig.base)\n\n    const [canvas] = await blobToCanvas(templateImg)\n\n    const sourceRects: SourceRect[] = slots.map((slot, index) => ({\n        slot,\n        x: template.getSlotPosition(index + 1).x + template.slotDim.w / 2 - (slot.width - 2) / 2,\n        y: template.getSlotPosition(index + 1).y + template.slotDim.h / 2 - (slot.height - 2) / 2,\n        w: slot.width - 2,\n        h: slot.height - 2\n    }))\n\n    const [packedTexture, packedRects] = packFromSheet(canvas, sourceRects)\n    const packedBlob = await convertToBlob(packedTexture)\n\n    const specification: FontSpec = {\n        info: {\n            face: 'calligro-custom',\n            size: 12,\n            stretchH: 100,\n            aa: 1,\n            padding: {\n                up: 0,\n                right: 0,\n                down: 0,\n                left: 0\n            },\n            spacing: {\n                horizontal: fontConfig.horizontalSpacing,\n                vertical: fontConfig.verticalSpacing\n            },\n            outline: 0\n        },\n        common: {\n            lineHeight: fontConfig.lineHeight,\n            base: tempConfig.base,\n            scaleW: canvas.width,\n            scaleH: canvas.height,\n            pages: 1\n        },\n        pages: [\n            {\n                id: 0,\n                file: 'calligro-page-0.png'\n            }\n        ],\n        chars: packedRects.map(rect => ({\n            id: rect.sourceRect.slot.character.charCodeAt(0),\n            x: rect.x,\n            y: rect.y,\n            width: rect.sourceRect.w,\n            height: rect.sourceRect.h,\n            xoffset: 0,\n            yoffset: 0,\n            xadvance: rect.sourceRect.w,\n            page: 0,\n            chnl: 15\n        }))\n    }\n\n    return [specification, [packedBlob]]\n}\n","import { FontSpec } from \"./Font\";\n\nfunction tag(name: string, properties: [string, string | number][]) {\n    const joinedProps = properties.map(([ prop, value ]) => `${prop}=${value.toString()}`).join(' ')\n    return `${name} ${joinedProps}`\n}\n\nexport function fontSpecToTxt(specification: FontSpec) {\n    const info = specification.info\n    const infoTag = tag('info', [\n        ['face', info.face],\n        ['size', info.size],\n        ['unicode', '1'],\n        ['stretchH', info.stretchH],\n        ['aa', info.stretchH],\n        ['padding', `${info.padding.up},${info.padding.right},${info.padding.down},${info.padding.left}`],\n        ['spacing', `${info.spacing.horizontal},${info.spacing.vertical}`]\n    ])\n\n    const common = specification.common\n    const commonTag = tag('common', [\n        ['lineHeight', common.lineHeight],\n        ['base', common.base],\n        ['scaleW', common.scaleW],\n        ['scaleH', common.scaleH],\n        ['pages', common.pages]\n    ])\n\n    const pageTags = specification.pages.map(page => tag('page', [\n        ['id', page.id],\n        ['file', page.file]\n    ]))\n\n    const charTags = specification.chars.map(char => tag('char', [\n        ['id', char.id],\n        ['x', char.x],\n        ['y', char.y],\n        ['width', char.width],\n        ['height', char.height],\n        ['xoffset', char.xoffset],\n        ['yoffset', char.yoffset],\n        ['xadvance', char.xadvance],\n        ['page', char.page],\n        ['chnl', char.chnl]\n    ]))\n\n    return [\n        infoTag,\n        commonTag,\n        ...pageTags,\n        ...charTags\n    ].join('\\n')\n}\n","import { downloadZip } from 'client-zip'\n\nfunction downloadBlob(name: string, blob: Blob): void {\n    const link = document.createElement('a')\n    link.href = URL.createObjectURL(blob)\n    link.download = name\n    link.click()\n\n    URL.revokeObjectURL(link.href)\n    link.remove()\n}\n\nexport interface ZippedFile {\n    name: string\n    input: string | Blob\n}\n\nexport async function downloadArchive(name: string, files: ZippedFile[]): Promise<void> {\n    const archive = downloadZip(files)\n    const blob = await archive.blob()\n\n    downloadBlob(`${name}.zip`, blob)\n}\n","import { downloadArchive, ZippedFile } from \"../fs/zip\";\n\nexport async function downloadBmf(fntFile: string, pages: Blob[]): Promise<void> {\n    const files: ZippedFile[] = [\n        {\n            name: 'calligro-font.fnt',\n            input: fntFile\n        },\n        ...pages.map((page, i) => ({\n            name: `calligro-page-${i}.png`,\n            input: page\n        }))\n    ]\n\n    return downloadArchive('calligro-font', files)\n}\n","import { bind } from 'helpful-decorators'\nimport React, { Component } from 'react'\nimport styles from './dropzone.module.scss'\n\ninterface DropzoneProps {\n    handleDropzoneInput: (stateTarget: 'template' | 'templateCode', data: Blob) => void\n    templateName?: string\n    acceptedInputType: string\n    dataType: string\n    inputName: string\n    stateTarget: 'template' | 'templateCode'\n}\n\nclass Dropzone extends Component<DropzoneProps, {}> {\n    private templateInput: React.RefObject<HTMLInputElement>\n\n    constructor(props: DropzoneProps) {\n        super(props)\n\n        this.templateInput = React.createRef()\n    }\n\n    handleFileInput(data?: File) {\n        if (data && data.type === this.props.dataType) {\n            this.props.handleDropzoneInput(this.props.stateTarget, data)\n        }\n    }\n\n    @bind\n    handleInput() {\n        const data = this.templateInput.current?.files?.[0]\n       \n        this.handleFileInput(data)\n    }\n\n    @bind\n    handleDrop(event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n        const data = event.dataTransfer.files[0]\n\n        this.handleFileInput(data)\n    }\n\n    dragOver (event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n    }\n    \n    @bind\n    dragEnter (event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n    }\n    \n    @bind\n    dragLeave (event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n    }\n\n    render() {\n        const renderUploadedFileName = this.props.templateName\n            ? <p className={styles.fileName}>Uploaded {this.props.templateName}</p>\n            : null\n\n        return (\n            <div\n                className={styles.container}\n                onDrop={this.handleDrop}\n                onDragOver={this.dragOver}\n                onDragEnter={this.dragEnter}\n                onDragLeave={this.dragLeave}\n            >\n                <label className={styles.label}>Drag&drop the {this.props.inputName}</label>\n                <div className={styles.inputContainer}>\n                    <input\n                        className={styles.input}\n                        type='file' ref={this.templateInput}\n                        onChange={this.handleInput}\n                        accept={this.props.acceptedInputType}\n                        title=\" \"\n                    />\n                </div>\n                {renderUploadedFileName}\n            </div>\n        )\n    }\n}\n\nexport default Dropzone\n","import React from 'react'\n\ninterface FaProps {\n    className?: string\n    icon: string\n    title? : string\n}\n\nfunction Fa(props: FaProps) {\n    const className: string = props.className ?? ''\n\n    return (\n        <i className={`${props.icon} ${className}`} title={props.title}></i>\n    )\n}\n\nexport default Fa\n","import { bind } from 'helpful-decorators'\nimport React, { Component } from 'react'\nimport { generateFont } from '../../../generation/font/Font'\nimport { fontSpecToTxt } from '../../../generation/font/txtSaver'\nimport { downloadBmf } from '../../../generation/font/download'\nimport styles from './fontCreationView.module.scss'\nimport Dropzone from '../dropzone/Dropzone'\nimport Fa from '../fa/Fa'\n\ninterface FontCreationViewState {\n    horizontalMargin: number\n    verticalMargin: number\n    lineHeight: number\n    template?: File\n    templateCode?: File\n}\n\nclass FontCreationView extends Component<{}, FontCreationViewState> {\n    constructor(props: {}) {\n        super(props)\n\n        this.state = {\n            horizontalMargin: 0,\n            verticalMargin: 0,\n            lineHeight: 0\n        }\n    }\n\n    @bind\n    handleDropzoneInput(stateTarget: 'template' | 'templateCode', data: Blob) {\n        this.setState(prevState => ({\n            ...prevState,\n            [stateTarget] : data\n        }))\n    }\n\n    @bind\n    isInputsValid(): boolean {\n        const isCodeInputValid = !!this.state.templateCode && this.state.templateCode.type === 'text/plain'\n        const isTemplateInputValid = !!this.state.template && this.state.template.type === 'image/png'\n    \n        return isTemplateInputValid && isCodeInputValid\n    }\n    \n    @bind\n    handleNumericalInput(event: React.ChangeEvent<HTMLInputElement>, name: 'horizontalMargin' | 'verticalMargin' | 'lineHeight') {\n        const value = parseInt(event.target.value, 10)\n\n        if (value >= 0) {\n            this.setState(prevState => ({\n                ...prevState,\n                [name]: value\n            }))\n        }\n    }\n\n    @bind\n    async downloadFont() {\n        if (!this.state.template || !this.state.templateCode) {\n            return\n        }\n\n        const templateImg = this.state.template\n        const templateCode = await this.state.templateCode.text()\n\n        const [fontSpec, pages] = await generateFont(templateImg, templateCode, {\n            horizontalSpacing: this.state.horizontalMargin,\n            verticalSpacing: this.state.verticalMargin,\n            lineHeight: this.state.lineHeight\n        })\n\n        const fntFile = fontSpecToTxt(fontSpec)\n\n        downloadBmf(fntFile, pages)\n    }\n\n    render() {\n        return(\n            <div className={styles.container}>\n                <div>\n                    <div className={styles.dropzones}>\n                        <Dropzone\n                            inputName='image'\n                            acceptedInputType='.png'\n                            dataType='image/png'\n                            stateTarget='template'\n                            handleDropzoneInput={this.handleDropzoneInput}\n                            templateName={this.state.template?.name}\n                        />\n\n                        <Dropzone\n                            inputName='code file'\n                            acceptedInputType='.txt'\n                            dataType='text/plain'\n                            stateTarget='templateCode'\n                            handleDropzoneInput={this.handleDropzoneInput}\n                            templateName={this.state.templateCode?.name}\n                        />\n                    </div>\n\n                    <div className={styles.options}>\n                        <label className={styles.label}>Font options</label>\n                        <div className={styles.option}>\n                            <label className={styles.optionsLabel}>Margin</label>\n                            <input\n                                className={styles.optionsInput}\n                                type='number'\n                                onChange={(event) => this.handleNumericalInput(event, 'horizontalMargin')}\n                                value={this.state.horizontalMargin}\n                            />\n                            <Fa icon='fas fa-times' className={styles.times} />\n                            <input\n                                className={styles.optionsInput}\n                                type='number'\n                                onChange={(event) => this.handleNumericalInput(event, 'verticalMargin')}\n                                value={this.state.verticalMargin}\n                            />\n                            <Fa icon='fas fa-question' className={styles.questionMark} title='Horizontal and vertical distance between characters in pixels'/>\n                        </div>\n                        \n                        <div className={styles.option}>\n                            <label className={styles.optionsLabel}>Line height</label>\n                            <input\n                                className={styles.optionsInput}\n                                type='number'\n                                onChange={(event) => this.handleNumericalInput(event, 'lineHeight')}\n                                value={this.state.lineHeight}\n                            />\n                            <Fa icon='fas fa-question' className={styles.questionMark} title='Distance from the bottom of a line to the top of the next one in pixels'/>\n                        </div>\n\n                        <button onClick={this.downloadFont} className={styles.downloadButton} disabled={!this.isInputsValid()} >generate font</button>\n                    </div>\n                </div>\n\n                <div>\n                    <div>\n                        <h2 className={styles.heading}>Step 2 - Generate your font</h2>\n                        \n                        <ol className={styles.instructionList}>\n                            <li className={styles.instructionListItem}>Upload the template image with your characters drawn on it. Nothing is sent to a server, everything stays in your browser.</li>\n                            <li className={styles.instructionListItem}>Upload the txt file downloaded togheter with the template image earlier (it contains template metadata).</li>\n                            <li className={styles.instructionListItem}>Specify the horizontal and vertical margins for characters.</li>\n                            <li className={styles.instructionListItem}>Specify the font line height (distance from the top of one line to the top of the next one).</li>\n                            <li className={styles.instructionListItem}>Generate and download your BMFont.</li>\n                        </ol>\n                    </div>\n\n                    <div >\n                        <h2 className={styles.heading}>Coming soon</h2>\n\n                        <ul className={styles.featureList}>\n                            <li className={styles.feature}>Kerning pairs support (that is: non-monospace fonts)</li>\n                            <li className={styles.feature}>XML export (some engines require it)</li>\n                            <li className={styles.feature}>Font preview</li>\n                        </ul>\n\n                        <p className={styles.goodbye}>Stay tuned ;)</p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FontCreationView\n","import React from 'react'\nimport { WorkSlot } from '../../../generation/template/types'\nimport Fa from '../fa/Fa'\nimport styles from './generationCharacterList.module.scss'\n\ninterface GenerationCharacterListProps {\n    charSet: WorkSlot[]\n    handleDimensionChange: (event: React.ChangeEvent<HTMLInputElement>, dimension: 'width' | 'height', char: WorkSlot) => void\n    resetCharacterDimensions: (char: WorkSlot) => void\n    defaultWidth: number\n    defaultHeight: number\n}\n\nfunction GenerationCharacterList (props: GenerationCharacterListProps) {\n    const charList = props.charSet.map(char => {\n        const width = char.width ?? props.defaultWidth\n        const height = char.height ?? props.defaultHeight\n\n        return (\n            <div key={char.character} className={styles.characterContainer}>\n                <p className={styles.character}>{char.character}</p>\n                <input\n                    className={`${styles.input} ${width <= 0 ? styles.inputInvalid : ''}`}\n                    type='number'\n                    value={width}\n                    onChange={(event) => props.handleDimensionChange(event, 'width', char)}\n                />\n                <Fa icon='fas fa-times' className={styles.times} />\n                <input\n                    className={`${styles.input} ${height <= 0 ? styles.inputInvalid : ''}`}\n                    type='number'\n                    value={height}\n                    onChange={(event) => props.handleDimensionChange(event, 'height', char)}\n                />\n\n                {\n                    (!!char.height || !!char.width) || (width <= 0 || height <= 0)\n                    ? <span className={styles.buttonContainer}>\n                        <button onClick={() => props.resetCharacterDimensions(char)} className={styles.button}>\n                            <Fa icon='fas fa-undo' className={styles.undoButton} />\n                        </button>\n                    </span >\n                    : null\n                }\n            </div>\n        )\n    })\n\n    return (\n        <div className={styles.container}>\n            {charList}\n        </div>\n    )\n}\n\nexport default GenerationCharacterList\n","import { downloadArchive, ZippedFile } from '../fs/zip'\nimport Template from './Template'\n\nexport async function downloadTemplate(template: Template): Promise<void> {\n    const files: ZippedFile[] = [\n        {\n            name: 'template.png',\n            input: await template.generateImageBlob()\n        },\n        {\n            name: 'template code.txt',\n            input: template.generateTemplateCode()\n        }\n    ]\n\n    return downloadArchive('calligro-template', files)\n}\n","import React, { Component } from 'react'\nimport { bind } from 'helpful-decorators'\nimport GenerationCharacterList from '../generationCharacterList/GenerationCharacterList'\nimport { WorkSlot, Slot } from '../../../generation/template/types'\nimport Template from '../../../generation/template/Template'\nimport { downloadTemplate } from '../../../generation/template/download'\nimport styles from './generationView.module.scss'\nimport Fa from '../fa/Fa'\nimport { Link } from 'react-router-dom'\n\ninterface GenerationViewState {\n    charSet: WorkSlot[]\n    defaultWidth: number\n    defaultHeight: number\n    base: number\n}\n\nconst defaultCharacters = 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz.?!,:'\n\nclass GenerationView extends Component<{}, GenerationViewState> {\n    constructor(props: {}) {\n        super(props)\n\n        this.state = this.setInitialState()\n    }\n\n    setInitialState(): GenerationViewState {\n        const storedData = window.localStorage.getItem('settings')\n        const parsedData: GenerationViewState = storedData ? JSON.parse(storedData) : null\n\n        return ({\n            charSet: parsedData?.charSet ?? this.createCharArray(),\n            defaultWidth: parsedData?.defaultWidth ?? 20,\n            defaultHeight: parsedData?.defaultHeight ?? 20,\n            base: parsedData?.base ?? 10\n        })\n    }\n\n    componentDidUpdate(prevProps: {}, prevState: GenerationViewState) {\n        if (prevState !== this.state) {\n            window.localStorage.setItem('settings', JSON.stringify(this.state))\n        }\n    }\n\n    createCharArray(): WorkSlot[] {\n        return Array.from(defaultCharacters, (character: string) => ({ character }))\n    }\n\n    @bind\n    handleCharSetInput(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        const newCharArray = event.target.value.split(\"\").filter(char => char !== \" \")\n        const isUniqueCharSet = new Set(newCharArray).size === newCharArray.length\n\n        event.preventDefault()\n\n        if (isUniqueCharSet) {\n            const newCharSet: WorkSlot[] = newCharArray.map(character => {\n                return this.state.charSet.find(oldChar => oldChar.character === character) ?? { character }\n            })\n\n            this.setState({\n                charSet: newCharSet\n            })\n        }\n    }\n\n    get slotArray(): Slot[] {\n        return this.state.charSet.map(workSlot => ({\n            character: workSlot.character,\n            width: workSlot.width ?? this.state.defaultWidth,\n            height: workSlot.height ?? this.state.defaultHeight\n        }))\n    }\n\n    get charString(): string {\n        return this.state.charSet.map(char => char.character).join(\"\")\n    }\n\n    @bind\n    isSlotArrayValid(): boolean {\n        return this.slotArray.every(slot => slot.height > 0 && slot.width > 0)\n    }\n\n    @bind\n    isBaseValid(): boolean {\n        return this.state.base <= this.state.defaultHeight && this.state.base >= 0\n    }\n\n    @bind\n    handleDefaultValueChange(event: React.ChangeEvent<HTMLInputElement>, valueName: 'defaultWidth' | 'defaultHeight' | 'base') {\n        const newValue = event.target.value ? parseInt(event.target.value, 10) : 0\n\n        this.setState(prevState => ({\n            ...prevState,\n            [valueName]: newValue\n        }))\n    }\n  \n    @bind\n    handleDimensionChange(event: React.ChangeEvent<HTMLInputElement>, dimension: 'width' | 'height', char: WorkSlot) {\n        const newValue = event.target.value ? parseInt(event.target.value, 10) : 0\n        const newCharSet: WorkSlot[] = this.state.charSet.map(character => character === char\n            ? {\n                ...character,\n                [dimension] : newValue\n            }\n            : character\n        )\n\n        this.setState({\n            charSet: newCharSet\n        })\n        \n    }\n\n    @bind\n    resetCharacterDimensions(char: WorkSlot) {\n        const newCharSet =  this.state.charSet.map(workSlot => char === workSlot ? { character: workSlot.character } : workSlot)\n\n        this.setState({\n            charSet: newCharSet\n        })\n    }\n\n    @bind\n    downloadTemplate() {\n        const template = new Template(this.slotArray, this.state.base)\n\n        downloadTemplate(template)\n    }\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <div>\n                    <div>\n                        <h2 className={styles.heading}>Generate bitmap fonts in the <a href='http://www.angelcode.com/products/bmfont/doc/file_format.html' className={styles.link}>BMFont</a> format.</h2>\n                        <p className={styles.paragraph}>Calligro lets you generate custom fonts from images created in graphics software like Gimp, Photoshop, Aseprite and others.</p>\n                        <p className={styles.paragraph}>\n                            If you’re looking to convert a truetype font into a BMFont, try tools like the\n                            original <a href='http://www.angelcode.com/products/bmfont/' className={styles.link}>BMFont</a> or <a href='https://github.com/libgdx/libgdx/wiki/Hiero' className={styles.link}>Hiero</a> instead.\n                        </p>\n                    </div>\n\n                    <div>\n                        <label className={styles.label}>\n                            Characters\n                            <Fa\n                                icon='fas fa-question'\n                                className={styles.questionMark}\n                                title='Characters you want to be included in the final font (all unicode characters should work)'\n                            />\n                        </label>\n                        <textarea\n                            className={styles.charactersTextArea}\n                            onChange={this.handleCharSetInput}\n                            value={this.charString}\n                        />\n                    </div>\n\n                    <div className={styles.parameters}>\n                        <div className={styles.commonParameters}>\n                            <div>\n                                <label className={styles.label}>Common</label>\n                                <label className={styles.commonLabel}>Size</label>\n                                <input\n                                    className={styles.commonInput}\n                                    type='number'\n                                    onChange={event => this.handleDefaultValueChange(event, 'defaultWidth')}\n                                    value={this.state.defaultWidth}\n                                />\n                                <Fa icon='fas fa-times' className={styles.times}/>\n                                <input\n                                    className={styles.commonInput}\n                                    type='number'\n                                    onChange={event => this.handleDefaultValueChange(event, 'defaultHeight')}\n                                    value={this.state.defaultHeight}\n                                />\n                                <Fa icon='fas fa-question' className={styles.questionMark} title='Default size of one character in pixels'/>\n                            </div>\n                            \n                            <div>\n                                <label className={styles.commonLabel}>Base</label>\n                                <input\n                                    className={`${styles.commonInput} ${this.isBaseValid() ? \"\" : styles.commonInputIvalid}`}\n                                    type='number'\n                                    onChange={event => this.handleDefaultValueChange(event, 'base')}\n                                    value={this.state.base}\n                                />\n                                <Fa\n                                    icon='fas fa-question'\n                                    className={styles.questionMark}\n                                    title='Distance from the top of the letter to the line base in pixels (character parts below this will stick out like in \"g\" or \"j\")'\n                                />\n                            </div>\n\n                            <button\n                                onClick={this.downloadTemplate}\n                                className={styles.downloadButton}\n                                disabled={!this.isSlotArrayValid() || !this.isBaseValid()}\n                            >\n                                download template\n                            </button>\n                        </div>\n\n                        <div className={styles.perCharacterParameters} >\n                            <label className={styles.label}>\n                                Per character\n                                <Fa\n                                    icon='fas fa-question'\n                                    className={styles.questionMark}\n                                    title='Override default size per character'\n                                />\n                            </label>\n\n                            <GenerationCharacterList\n                                charSet={this.state.charSet}\n                                defaultHeight={this.state.defaultHeight}\n                                defaultWidth={this.state.defaultWidth}\n                                handleDimensionChange={this.handleDimensionChange}\n                                resetCharacterDimensions={this.resetCharacterDimensions}\n                            />\n                        </div>\n                    </div>\n                </div>\n                \n\n                <div>\n                    <h2 className={styles.heading}>Step 1 - Create a template</h2>\n                    <ol className={styles.instructionList}>\n                        <li className={styles.instructionListItem}> Specify what characters you want included in the final font. </li>\n                        <li className={styles.instructionListItem}>Choose the character size and base.</li>\n                        <li className={styles.instructionListItem}>Optionally override the size per character if you want some to be smaller or bigger than the rest.</li>\n                        <li className={styles.instructionListItem}>Download the generated template. It’s a zip archive containing two files: png and txt. Open the png in your graphics editor of choice and draw characters inside the red boundaries.</li>\n                        <li className={styles.instructionListItem}>Go to <Link to='/step2' className={styles.link}>Step 2</Link> to upload the template and generate your font.</li>\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GenerationView\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from './navbar.module.scss'\n\nfunction Navbar() {\n    return (\n        <nav className={styles.container}>\n            <NavLink exact to='/' className={`${styles.navLink} ${styles.navLinkLeft}`} activeClassName={styles.navLinkActive}>\n                <p className={styles.linkBig}>Step 1</p>\n                <p className={styles.linkSmall}>create a template</p>\n            </NavLink>\n            <NavLink to='/step2' className={`${styles.navLink} ${styles.navLinkRight}`} activeClassName={styles.navLinkActive}>\n                <p className={styles.linkBig}>Step 2</p>\n                <p className={styles.linkSmall}>generate your font</p>\n            </NavLink>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Navbar from '../navbar/Navbar'\nimport styles from './header.module.scss'\nimport GithubCorner from 'react-github-corner'\n\nfunction Header() {\n    return (\n        <div className={styles.container}>\n            <img src='logo.svg' alt='logo' className={styles.logo} />\n            <Navbar />\n            <div className={styles.sourceNoticeContainer}>\n                <p className={styles.sourceNoticeLine1}>We're open source!</p>\n                <p className={styles.sourceNoticeLine2}>Feel free to contribute :D</p>\n            </div>\n            <GithubCorner className={styles.githubCorner} href='https://github.com/Voycawojka/calligro' size='110' bannerColor='#707070' octoColor='#202020' />\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport styles from './author.module.scss'\nimport Fa from '../fa/Fa'\n\ninterface Social {\n    icon: string\n    url: string\n}\n\ninterface AuthorProps {\n    name: string\n    socialLinks: Social[]\n}\n\nfunction Author(props: AuthorProps) {\n    const renderSocial = props.socialLinks.map(social =>\n        <a className={styles.socialLink} href={social.url} key={social.url}>\n            <Fa icon={social.icon} className={styles.icon} />\n        </a>\n    )\n\n    return (\n        <div className={styles.container}>\n            <h3 className={styles.name}>{props.name}</h3>\n            <div className={styles.socialContainer}>\n                {renderSocial}\n            </div>\n        </div>\n    )\n}\n\nexport default Author\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Author from '../author/Author'\nimport styles from './footer.module.scss'\n\nfunction Footer() {\n    return (\n        <footer className={styles.container}>\n            <Link to='/policy' className={`${styles.policy} ${styles.link}`}>Privacy policy</Link>\n            <div className={styles.authors}>\n                <Author\n                    name='Filip A. Kowalski'\n                    socialLinks={[\n                        {\n                            url: 'http://ideasalmanac.com',\n                            icon: 'fa fa-globe-africa'\n                        },\n                        {\n                            url: 'https://twitter.com/IdeasAlmanac',\n                            icon: 'fab fa-twitter'\n                        },\n                        {\n                            url: 'https://github.com/Voycawojka',\n                            icon: 'fab fa-github'\n                        }\n                    ]}\n                />\n                <Author\n                    name='Dominik Józefiak'\n                    socialLinks={[\n                        {\n                            url: 'https://github.com/domlj',\n                            icon: 'fab fa-github'\n                        }\n                    ]}\n                />\n            </div>\n            \n            <div className={styles.linkContainer}>\n                <a href='https://github.com/Voycawojka/calligro/issues' className={styles.link}>Found a bug?</a>\n                <a href='https://github.com/Voycawojka/calligro/issues' className={styles.link}>Have a feature request?</a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './policy.module.scss'\n\nfunction Policy() {\n    return (\n        <div className={styles.policyContainer}>\n            <h1>Calligro Privacy Policy</h1>\n            <p>\n                Calligro is an open source tool served on a static web server (Github Pages).\n                We don't ask for nor collect any personal data.\n                All information provided (and all files uploaded) by the user stay inside the user's browser.\n            </p>\n            \n            <h2>Cookies and local storage</h2>\n            <p>\n                We use cookies and local storage (small files and pieces of data stored on the user's device) for two pursposes:\n            </p>\n                <ul>\n                    <li>user's convenience (e.g. to rememeber last chosen settings),</li>\n                    <li>analytics (more in the Analytics section below)</li>\n                </ul>\n            <p>\n                Browsers allow users to view, remove or even entirely block cookies.\n                Check your browser's manual to access those options.\n            </p>\n            \n            <h2>Analytics</h2>\n            <p>\n                We use Google Analytics for analytics purposes.\n                Therefore, all analytics data is stored on Google's servers.\n            </p>\n            <p>\n                By default, we don't allow Google Analytics to use analytics or ad related tracking cookies.\n                If you consent by clicking Accept on our cookie popup, we use analytics related cookies for better insight.\n                We don't use ad related cookies regardless of consent.\n            </p>\n            \n            <h2>About this policy</h2>\n            <p>\n                Please note we can change this privacy policy without notice.\n            </p>\n\n\n            <Link to='/' className={styles.menuLink}>Back to Calligro</Link>\n        </div>\n    )\n}\n\nexport default Policy\n","import React, { Component } from 'react'\nimport Cookies from 'js-cookie'\nimport styles from './cookieNotice.module.scss'\nimport { Link } from 'react-router-dom'\nimport { bind } from 'helpful-decorators'\n\ninterface CookieNoticeState {\n    acknowledged: boolean\n}\n\nclass CookieNotice extends Component<{}, CookieNoticeState> {\n    constructor(props: {}) {\n        super(props)\n        this.state = {\n            acknowledged: false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            acknowledged: Cookies.get('cookies-acknowledged') === 'true'\n        }, this.updateAnalytics)\n    }\n\n    @bind\n    handleExit() {\n        Cookies.set('cookies-acknowledged', 'true', { expires: 1000 })\n\n        this.setState({\n            acknowledged: true\n        }, this.updateAnalytics)\n    }\n\n    @bind\n    updateAnalytics() {\n        const analyticsStatus = this.state.acknowledged ? 'granted' : 'denied'\n\n        window.gtag('consent', 'update', {\n            analytics_storage: analyticsStatus\n        });\n    }\n\n    render () {\n        if (!this.state.acknowledged) {\n            return (\n                <div className={styles.container}>\n                    <h2 className={styles.heading}>We use cookies</h2>\n                    <div className={styles.content}>\n                        <img className={styles.image} src='cookie.svg' alt='cookie'/>\n                        <div className={styles.details}>\n                            <ul className={styles.list}>\n                                <li className={styles.listItem}>for your convienience</li>\n                                <li className={styles.listItem}>for analytics</li>\n                            </ul>\n\n                            <div className={styles.linkContainer}>\n                                <Link to='/policy' className={styles.link}>Learn more</Link>\n                                <button onClick={this.handleExit} className={styles.link} >Accept</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nexport default CookieNotice\n","import React from 'react'\nimport FontCreationView from './ui/generation/fontCreationView/FontCreationView'\nimport GenerationView from './ui/generation/generationView/GenerationView'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport Header from './ui/generation/header/Header'\nimport Footer from './ui/generation/footer/Footer'\nimport Policy from './ui/generation/policy/Policy'\nimport CookieNotice from './ui/generation/cookieNotice/CookieNotice'\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path='/policy'>\n                    <Policy />\n                </Route>\n\n                <Route>\n                    <Header/>\n\n                    <Route exact path='/'>\n                        <GenerationView />\n                    </Route>\n\n                    <Route exact path='/step2'>\n                        <FontCreationView />\n                    </Route>\n\n                    <Footer />\n\n                    <CookieNotice />\n                </Route>\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}