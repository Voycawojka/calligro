{"version":3,"sources":["ui/generation/step2/step2.module.scss","ui/generation/dropzone/dropzone.module.scss","ui/generation/step2KerningPairsList/step2KerningPairsList.module.scss","ui/generation/fontPreview/fontPreview.module.scss","generation/fs/image.ts","generation/packing/imagePacking.ts","generation/font/Font.ts","generation/font/specSaver.ts","generation/font/download.ts","ui/generation/dropzone/Dropzone.tsx","ui/generation/step2KerningPairsList/Step2KerningPairsList.tsx","preview/preview.ts","ui/generation/fontPreview/FontPreview.tsx","ui/generation/step2/Step2.tsx"],"names":["module","exports","blobToCanvas","blob","Promise","resolve","dataUrl","URL","createObjectURL","image","document","createElement","onload","createCanvas","width","height","canvas","ctx","drawImage","remove","revokeObjectURL","src","packFromSheet","source","rects","data","packedRects","nextX","nextY","furthestSoFar","lowestSoFar","sort","a","b","h","map","rect","w","packed","x","y","sourceRect","pack","forEach","generateFont","templateImg","tempConfig","fontConfig","slots","unicode","character","String","fromCharCode","template","Template","base","presetName","sourceRects","slot","index","getSlotPosition","enclosingDim","packedTexture","convertToBlob","packedBlob","specification","info","face","size","stretchH","aa","padding","up","right","down","left","spacing","horizontal","horizontalSpacing","vertical","verticalSpacing","outline","common","lineHeight","scaleW","scaleH","pages","id","file","chars","charCodeAt","xoffset","yoffset","xadvance","page","chnl","kernings","txtTag","name","properties","joinedProps","prop","value","toString","join","xmlTag","fontSpecToTextFile","format","tag","infoTag","commonTag","pageTags","charTags","char","kerningTags","kerning","first","second","amount","font","length","downloadBmf","fntFile","files","input","i","downloadArchive","Dropzone","props","templateInput","state","dragCounter","React","createRef","type","this","dataType","handleDropzoneInput","current","handleFileInput","event","preventDefault","dataTransfer","setState","prevState","renderUploadedFileName","fileName","className","styles","renderError","error","container","containerDragOver","onDrop","handleDrop","onDragOver","dragOver","onDragEnter","dragEnter","onDragLeave","dragLeave","label","inputName","inputContainer","ref","onChange","handleInput","accept","acceptedInputType","title","Component","bind","Step2KerningPairsList","pairsContainerRef","pairs","UICodeCharList","prevProps","templateCode","parsedCode","flatMap","isAllPairsValid","changeKernings","handleKerningsValidity","scrollToBottom","scrollTop","scrollHeight","newPairs","splice","target","undefined","charToUnicode","charAt","parseInt","includes","pair","filter","workPair","isFirstCharLegal","isCharLegal","isSecondCharLegal","isWorkPairLegal","isPairUnrepeated","some","isPairValid","renderPairs","inputInvalid","unicodeToChar","changeChar","changeAmount","button","onClick","deletePair","Fa","icon","questionMark","pairsContainer","pairsKey","addPair","disabled","warning","isAnyPairWithLegalCharsRepeated","warningOff","blobsToTextures","blobs","textures","img","Image","push","getKerningAmount","text","charIndex","spec","charCode1","charCode2","find","drawPreview","scale","cursor","clearRect","strokeStyle","c","charSpec","placeholder","kerningAmount","texture","pos","strokeRect","FontPreview","canvasContainer","getContext","draw","newColor","style","setProperty","controls","previewInput","step","min","parseFloat","isNaN","scaleInput","colorInput","defaultValue","handleBgColorChange","previewContainer","maxHeight","ipcRenderer","window","require","Step2","horizontalMargin","verticalMargin","kerningPairs","isKerningsValid","isTemplateFileValid","templateError","templateCodeError","isCodeFileValid","parseTemplateCode","code","templateCodeName","console","warn","getFontConfig","fontSpec","isElectron","pagesBufferArray","arrayBuffer","buffer","send","standardizeNumericalInput","valid","desktop","Head","dropzones","handleTemplateDropzoneInput","handleCodeDropzoneInput","options","option","optionsLabel","optionsInput","handleNumericalInput","times","download","buttonsContainerLabel","buttons","downloadFont","formButton","areDropzonesValid","samplesParagraph","href","samplesLink","rel","heading","instructionList","instructionListItem"],"mappings":"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","file":"static/js/3.e1d0686f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"step2_container__mP1Lb\",\"desktop\":\"step2_desktop__2F80Z\",\"instructionList\":\"step2_instructionList__A_Js5\",\"instructionListItem\":\"step2_instructionListItem__24XyX\",\"heading\":\"step2_heading__284k2\",\"dropzones\":\"step2_dropzones__2utFp\",\"options\":\"step2_options__3tola\",\"label\":\"step2_label__3qcY3\",\"optionsLabel\":\"step2_optionsLabel__2tyAP\",\"buttonsContainerLabel\":\"step2_buttonsContainerLabel__3VAjD\",\"optionsInput\":\"step2_optionsInput__2ZWmB\",\"times\":\"step2_times__263gt\",\"questionMark\":\"step2_questionMark__3yZuf\",\"option\":\"step2_option__2yRFz\",\"formButton\":\"step2_formButton__1NFQq\",\"download\":\"step2_download__1hxQw\",\"buttons\":\"step2_buttons__1G7PN\",\"samplesParagraph\":\"step2_samplesParagraph__12U9D\",\"samplesLink\":\"step2_samplesLink__3X2DM\",\"previewContainer\":\"step2_previewContainer__M4HZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dropzone_container__3YvRs\",\"containerDragOver\":\"dropzone_containerDragOver__2HKb-\",\"inputContainer\":\"dropzone_inputContainer__OD9Y7\",\"label\":\"dropzone_label__xsqTw\",\"fileName\":\"dropzone_fileName__CjjRG\",\"error\":\"dropzone_error__2gMT-\",\"input\":\"dropzone_input__3YtRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"step2KerningPairsList_container__2Re1A\",\"pairsContainer\":\"step2KerningPairsList_pairsContainer__2Qy3n\",\"pairsKey\":\"step2KerningPairsList_pairsKey__3OuXe\",\"button\":\"step2KerningPairsList_button__2e3T4\",\"label\":\"step2KerningPairsList_label__1YYti\",\"questionMark\":\"step2KerningPairsList_questionMark__2cusH\",\"input\":\"step2KerningPairsList_input__1pUjE\",\"inputInvalid\":\"step2KerningPairsList_inputInvalid__1-_2u\",\"warning\":\"step2KerningPairsList_warning__l57EV\",\"warningOff\":\"step2KerningPairsList_warningOff__2InZl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewContainer\":\"fontPreview_previewContainer__3f5kC\",\"container\":\"fontPreview_container__2c9m2\",\"controls\":\"fontPreview_controls__2e1CJ\",\"label\":\"fontPreview_label__1d7EU\",\"previewInput\":\"fontPreview_previewInput__VY5-O\",\"scaleInput\":\"fontPreview_scaleInput__1m6rL\",\"colorInput\":\"fontPreview_colorInput__V_kQ1\"};","import { createCanvas } from \"../../utils/canvasHelpers\"\n\nexport function blobToCanvas(blob: Blob): Promise<[HTMLCanvasElement, CanvasRenderingContext2D]> {\n    return new Promise(resolve => {\n        const dataUrl = URL.createObjectURL(blob)\n        const image = document.createElement('img')\n\n        image.onload = () => {\n            const [canvas, ctx] = createCanvas(image.width, image.height)\n\n            ctx.drawImage(image, 0, 0)\n\n            image.remove()\n            URL.revokeObjectURL(dataUrl)\n\n            resolve([canvas, ctx])\n        }\n\n        image.src = dataUrl\n    })\n}\n","import { createCanvas } from '../../utils/canvasHelpers'\nimport { Slot } from '../template/types'\n\nexport interface SourceRect {\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    slot: Slot\n}\n\nexport interface PackedRect {\n    x: number,\n    y: number,\n    sourceRect: SourceRect\n}\n\ninterface PackedData {\n    packedRects: PackedRect[],\n    width: number,\n    height: number\n}\n\nfunction pack(rects: SourceRect[], width: number): PackedData {\n    const data: PackedData = {\n        packedRects: [],\n        width: 0,\n        height: 0\n    }\n    \n    let nextX = 0\n    let nextY = 0\n    let furthestSoFar = 0\n    let lowestSoFar = 0\n\n    data.packedRects = rects\n        .sort((a, b) => b.h - a.h)\n        .map(rect => {\n            if (nextX + rect.w > width) {\n                nextX = 0\n                nextY = lowestSoFar\n            }\n\n            if (nextX + rect.w > furthestSoFar) {\n                furthestSoFar = nextX + rect.w\n            }\n\n            if (nextY + rect.h > lowestSoFar) {\n                lowestSoFar = nextY + rect.h\n            }\n\n            const packed = {\n                x: nextX,\n                y: nextY,\n                sourceRect: rect\n            }\n\n            nextX += rect.w\n\n            return packed\n        })\n    \n    data.width = furthestSoFar\n    data.height = lowestSoFar\n\n    return data\n}\n\nexport function packFromSheet(source: HTMLCanvasElement, rects: SourceRect[]): [HTMLCanvasElement, PackedRect[]] {\n    const { width, height, packedRects } = pack(rects, source.width)\n    const [canvas, ctx] = createCanvas(width, height)\n\n    packedRects.forEach(({ x, y, sourceRect }) => {\n        const { w, h } = sourceRect\n        ctx.drawImage(source, sourceRect.x, sourceRect.y, w, h, x, y, w, h)\n    })\n\n    return [canvas, packedRects]\n}\n","import { convertToBlob } from '../../utils/canvasHelpers'\nimport { blobToCanvas } from '../fs/image'\nimport { packFromSheet, SourceRect } from '../packing/imagePacking'\nimport Template from '../template/Template'\nimport { CodePayload } from '../template/types'\n\nexport interface FontSpec {\n    info: {\n        face: string\n        size: number\n        stretchH: number\n        aa: number\n        padding: {\n            up: number\n            right: number\n            down: number\n            left: number\n        }\n        spacing: {\n            horizontal: number\n            vertical: number\n        }\n        outline: number\n    }\n    common: {\n        lineHeight: number\n        base: number\n        scaleW: number\n        scaleH: number\n        pages: number\n    }\n    pages: {\n        id: number\n        file: string\n    }[]\n    chars: {\n        id: number\n        x: number\n        y: number\n        width: number\n        height: number\n        xoffset: number\n        yoffset: number\n        xadvance: number\n        page: number\n        chnl: 1 | 2 | 4 | 8 | 15\n    }[]\n    kernings: {\n        first: number\n        second: number\n        amount: number\n    }[]\n}\n\nexport interface KerningPair {\n    first: number\n    second: number\n    amount: number\n}\n\nexport interface FontConfig {\n    horizontalSpacing: number\n    verticalSpacing: number\n    lineHeight: number\n    kernings: KerningPair[]\n}\n\nexport async function generateFont(templateImg: Blob, tempConfig: CodePayload, fontConfig: FontConfig): Promise<[FontSpec, Blob[]]> {\n    const slots = tempConfig.slots.map(([ unicode, width, height ]) => ({ character: String.fromCharCode(unicode), width, height }))\n    const template = new Template(slots, tempConfig.base, tempConfig.presetName, null)\n\n    const [canvas] = await blobToCanvas(templateImg)\n\n    const sourceRects: SourceRect[] = slots.map((slot, index) => ({\n        slot,\n        x: template.getSlotPosition(index + 1).x + template.enclosingDim.w / 2 - (slot.width - 2) / 2,\n        y: template.getSlotPosition(index + 1).y + template.enclosingDim.h / 2 - (slot.height - 2) / 2,\n        w: slot.width - 2,\n        h: slot.height - 2\n    }))\n\n    const [packedTexture, packedRects] = packFromSheet(canvas, sourceRects)\n    const packedBlob = await convertToBlob(packedTexture)\n\n    const specification: FontSpec = {\n        info: {\n            face: 'calligro-custom',\n            size: 12,\n            stretchH: 100,\n            aa: 1,\n            padding: {\n                up: 0,\n                right: 0,\n                down: 0,\n                left: 0\n            },\n            spacing: {\n                horizontal: fontConfig.horizontalSpacing,\n                vertical: fontConfig.verticalSpacing\n            },\n            outline: 0\n        },\n        common: {\n            lineHeight: fontConfig.lineHeight,\n            base: tempConfig.base,\n            scaleW: canvas.width,\n            scaleH: canvas.height,\n            pages: 1\n        },\n        pages: [\n            {\n                id: 0,\n                file: 'calligro-page-0.png'\n            }\n        ],\n        chars: packedRects.map(rect => ({\n            id: rect.sourceRect.slot.character.charCodeAt(0),\n            x: rect.x,\n            y: rect.y,\n            width: rect.sourceRect.w,\n            height: rect.sourceRect.h,\n            xoffset: 0,\n            yoffset: 0,\n            xadvance: rect.sourceRect.w,\n            page: 0,\n            chnl: 15\n        })),\n        kernings: fontConfig.kernings\n    }\n\n    return [specification, [packedBlob]]\n}\n","import { FontSpec } from \"./Font\";\n\ntype tagProp = [string, string | number]\n\nfunction txtTag(name: string, properties: tagProp[]) {\n    const joinedProps = properties.map(([ prop, value ]) => `${prop}=${value.toString()}`).join(' ')\n    return `${name} ${joinedProps}`\n}\n\nfunction xmlTag(name: string, properties: tagProp[]) {\n    const joinedProps = properties.map(([ prop, value ]) => `${prop}=\"${value.toString()}\"`).join(' ')\n    return `<${name} ${joinedProps} />`\n}\n\nexport function fontSpecToTextFile(specification: FontSpec, format: 'txt' | 'xml') {\n    const tag = format === 'txt' ? txtTag : xmlTag\n\n    const info = specification.info\n    const infoTag = tag('info', [\n        ['face', info.face],\n        ['size', info.size],\n        ['unicode', '1'],\n        ['bold', '0'],\n        ['italic', '0'],\n        ['stretchH', info.stretchH],\n        ['aa', info.stretchH],\n        ['padding', `${info.padding.up},${info.padding.right},${info.padding.down},${info.padding.left}`],\n        ['spacing', `${info.spacing.horizontal},${info.spacing.vertical}`]\n    ])\n\n    const common = specification.common\n    const commonTag = tag('common', [\n        ['lineHeight', common.lineHeight],\n        ['base', common.base],\n        ['scaleW', common.scaleW],\n        ['scaleH', common.scaleH],\n        ['pages', common.pages]\n    ])\n\n    const pageTags = specification.pages.map(page => tag('page', [\n        ['id', page.id],\n        ['file', page.file]\n    ]))\n\n    const charTags = specification.chars.map(char => tag('char', [\n        ['id', char.id],\n        ['x', char.x],\n        ['y', char.y],\n        ['width', char.width],\n        ['height', char.height],\n        ['xoffset', char.xoffset],\n        ['yoffset', char.yoffset],\n        ['xadvance', char.xadvance],\n        ['page', char.page],\n        ['chnl', char.chnl]\n    ]))\n\n    const kerningTags = specification.kernings.map(kerning => tag('kerning', [\n        ['first', kerning.first],\n        ['second', kerning.second],\n        ['amount', kerning.amount]\n    ]))\n\n    switch(format) {\n        case 'txt':\n            return [\n                infoTag,\n                commonTag,\n                ...pageTags,\n                ...charTags,\n                ...kerningTags\n            ].join('\\n')\n        \n        case 'xml':\n            const font = [\n                infoTag,\n                commonTag,\n                '<pages>',\n                ...pageTags.map(tag => `\\t${tag}`),\n                '</pages>',\n                `<chars count=\"${charTags.length}\">`,\n                ...charTags.map(tag => `\\t${tag}`),\n                '</chars>',\n                `<kernings count=\"${kerningTags.length}\">`,\n                ...kerningTags.map(tag => `\\t${tag}`),\n                '</kernings>'\n            ].join('\\n\\t')\n\n            return [\n                '<?xml version=\"1.0\"?>',\n                '<font>',\n                '\\t' + font,\n                '</font>'\n            ].join('\\n')\n    }\n}\n","import { downloadArchive, ZippedFile } from '../fs/zip'\n\nexport async function downloadBmf(fntFile: string, pages: Blob[]): Promise<void> {\n    const files: ZippedFile[] = [\n        {\n            name: 'calligro-font.fnt',\n            input: fntFile\n        },\n        ...pages.map((page, i) => ({\n            name: `calligro-page-${i}.png`,\n            input: page\n        }))\n    ]\n\n    return downloadArchive('calligro-font', files)\n}\n","import { bind } from 'helpful-decorators'\nimport React, { Component } from 'react'\nimport styles from './dropzone.module.scss'\n\ninterface DropzoneProps {\n    handleDropzoneInput: (data: File) => void\n    fileName?: string\n    acceptedInputType: string\n    dataType: string\n    inputName: string\n    error?: string\n}\n\ninterface DropzoneState {\n    dragCounter: number\n}\n\nclass Dropzone extends Component<DropzoneProps, DropzoneState> {\n    private templateInput: React.RefObject<HTMLInputElement>\n\n    constructor(props: DropzoneProps) {\n        super(props)\n\n        this.state = {\n            dragCounter: 0\n        }\n\n        this.templateInput = React.createRef()\n    }\n\n    handleFileInput(data?: File) {\n        if (data && data.type === this.props.dataType) {\n            this.props.handleDropzoneInput(data)\n        }\n    }\n\n    @bind\n    handleInput() {\n        const data = this.templateInput.current?.files?.[0]\n       \n        this.handleFileInput(data)\n    }\n\n    @bind\n    handleDrop(event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n        const data = event.dataTransfer.files[0]\n\n        this.handleFileInput(data)\n        this.setState({\n            dragCounter: 0\n        })\n    }\n\n    dragOver (event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n    }\n    \n    @bind\n    dragEnter (event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n\n        this.setState(prevState => ({\n            dragCounter: prevState.dragCounter + 1\n        }))\n    }\n    \n    @bind\n    dragLeave (event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n\n        this.setState(prevState => ({\n            dragCounter: prevState.dragCounter - 1\n        }))\n    }\n\n    render() {\n        const renderUploadedFileName = this.props.fileName\n            ? <p className={styles.fileName}>Uploaded {this.props.fileName}</p>\n            : null\n        \n        const renderError = this.props.error\n            ? <p className={styles.error}>{this.props.error}</p>\n            : null\n\n        return (\n            <div\n                className={`${styles.container} ${this.state.dragCounter ? styles.containerDragOver : ''}`}\n                onDrop={this.handleDrop}\n                onDragOver={this.dragOver}\n                onDragEnter={this.dragEnter}\n                onDragLeave={this.dragLeave}\n            >\n                <label className={styles.label}>Drag&amp;drop the {this.props.inputName}</label>\n                <div className={styles.inputContainer}>\n                    <input\n                        aria-label={`${this.props.inputName} input`}\n                        className={styles.input}\n                        type='file' ref={this.templateInput}\n                        onChange={this.handleInput}\n                        accept={this.props.acceptedInputType}\n                        title=\" \"\n                    />\n                </div>\n                {renderUploadedFileName}\n                {renderError}\n            </div>\n        )\n    }\n}\n\nexport default Dropzone\n","import React, { Component, Fragment } from 'react'\nimport styles from './step2KerningPairsList.module.scss'\nimport { KerningPair } from '../../../generation/font/Font'\nimport { bind } from 'helpful-decorators'\nimport { unicodeToChar, charToUnicode } from '../../../utils/char'\nimport Fa from '../../misc/fa/Fa';\nimport { CodePayload } from '../../../generation/template/types'\n\ninterface WorkKerningPair {\n    first?: number,\n    second?: number,\n    amount?: number\n}\n\ninterface Step2KerningPairsListProps {\n    changeKernings: (kernings: KerningPair[]) => void\n    handleKerningsValidity: (valid: boolean) => void\n    templateCode?: CodePayload\n}\n\ninterface Step2KerningPairsListState {\n    pairs: WorkKerningPair[]\n    UICodeCharList: number[]\n}\n\nclass Step2KerningPairsList extends Component<Step2KerningPairsListProps, Step2KerningPairsListState> {\n    private pairsContainerRef: React.RefObject<HTMLDivElement>\n\n    constructor(props: Step2KerningPairsListProps) {\n        super(props)\n        this.state = {\n            pairs: [],\n            UICodeCharList: []\n        }\n        this.pairsContainerRef = React.createRef<HTMLDivElement>()\n    }\n\n    componentDidUpdate(prevProps: Step2KerningPairsListProps, prevState: Step2KerningPairsListState) {\n        if (prevProps.templateCode !== this.props.templateCode) {\n            this.setState({\n                pairs: []\n            })\n\n            if (this.props.templateCode) {\n                const parsedCode = this.props.templateCode?.slots.flatMap(char => char[0])\n\n                if (parsedCode) {\n                    this.setState({\n                        UICodeCharList: parsedCode\n                    })\n                }\n            }\n        }\n\n        if (prevState.pairs !== this.state.pairs) {\n            if (this.isAllPairsValid) {\n                this.props.changeKernings(this.state.pairs as KerningPair[])\n            }\n\n            this.props.handleKerningsValidity(this.isAllPairsValid)\n        }\n    }\n\n    @bind\n    addPair() {\n        this.setState(prevState => ({\n            pairs: [...prevState.pairs, {\n                amount: 1\n            }]\n        }), () => this.scrollToBottom())\n    }\n\n    scrollToBottom() {\n        if (this.pairsContainerRef.current) {\n            this.pairsContainerRef.current.scrollTop = this.pairsContainerRef.current.scrollHeight\n        }\n    }\n\n    @bind\n    deletePair(index: number) {\n        const newPairs = [...this.state.pairs]\n        newPairs.splice(index, 1)\n\n        this.setState({\n            pairs: newPairs\n        })\n    }\n\n    @bind\n    changeChar(event: React.ChangeEvent<HTMLInputElement>, index: number, char: 'first' | 'second') {\n         const value = event.target.value === '' ? undefined : charToUnicode(event.target.value.charAt(0))\n         const newPairs = [...this.state.pairs]\n\n         newPairs[index][char] = value\n\n         this.setState({\n            pairs: newPairs\n         })\n    }\n\n    @bind\n    changeAmount(event: React.ChangeEvent<HTMLInputElement>, index: number) {\n        const value = event.target.value === '' ? undefined : parseInt(event.target.value, 10)\n        const newPairs = [...this.state.pairs]\n\n        newPairs[index].amount = value\n\n        this.setState({\n            pairs: newPairs\n        })\n    }\n\n    @bind\n    isCharLegal(char?: number): boolean {\n        return char !== undefined ? this.state.UICodeCharList.includes(char) : false\n    }\n\n    \n    isPairUnrepeated(pair: WorkKerningPair) {\n        return this.state.pairs.filter(workPair => pair.first === workPair.first && pair.second === workPair.second).length < 2\n    }\n\n    isWorkPairLegal(pair: WorkKerningPair) {\n        const {first, second, amount} = pair\n\n        const isFirstCharLegal = this.isCharLegal(first)\n        const isSecondCharLegal = this.isCharLegal(second)\n        const isAmountLegal = !!amount\n\n        return isFirstCharLegal && isSecondCharLegal && isAmountLegal\n    }\n\n    @bind\n    isPairValid(pair: WorkKerningPair): boolean {\n        return this.isWorkPairLegal(pair) && this.isPairUnrepeated(pair)\n    }\n\n    get isAllPairsValid(): boolean {\n        return !this.state.pairs.some(pair => !this.isPairValid(pair))\n    }\n\n    get isAnyPairWithLegalCharsRepeated() {\n        return this.state.pairs.some(pair => !this.isPairUnrepeated(pair) && this.isCharLegal(pair.first) && this.isCharLegal(pair.second))\n    }\n\n    render () {\n        const renderPairs = this.state.pairs.map(( pair, index ) =>\n            <Fragment key={index} >\n                <input\n                    aria-label='first letter input'\n                    className={`${styles.input} ${this.isCharLegal(pair.first) && this.isPairUnrepeated(pair) ? '' : styles.inputInvalid}`}\n                    value={pair.first ? unicodeToChar(pair.first) : ''}\n                    onChange={(event) => this.changeChar(event, index, 'first')}\n                    type='text'\n                />\n\n                <input\n                    aria-label='second letter input'\n                    className={`${styles.input} ${this.isCharLegal(pair.second) && this.isPairUnrepeated(pair) ? '' : styles.inputInvalid}`}\n                    value={pair.second ? unicodeToChar(pair.second) : ''}\n                    onChange={(event) => this.changeChar(event, index, 'second')}\n                    type='text'\n                />\n\n                <input\n                    aria-label='distance input'\n                    className={`${styles.input} ${!!pair.amount ? '' : styles.inputInvalid}`}\n                    value={pair.amount ?? ''}\n                    onChange={(event) => this.changeAmount(event, index)}\n                    type='number'\n                />\n\n                <button className={styles.button} onClick={() => this.deletePair(index)} title='Delete kerning pair'>\n                    <Fa icon='fas fa-minus' />\n                </button>\n            </Fragment>\n        )\n\n        return (\n            <div className={styles.container}>\n                <label className={styles.label}>Kerning pairs\n                    <Fa\n                        icon='fas fa-question'\n                        className={styles.questionMark}\n                        title='Pairs of characters with non-default distance from each other. Only supported by some engines'\n                    />\n                </label>\n                <div className={styles.pairsContainer} ref={this.pairsContainerRef}>\n                    <label className={styles.pairsKey}>character 1</label>\n                    <label className={styles.pairsKey}>character 2</label>\n                    <label className={styles.pairsKey}>distance\n                        <Fa\n                            icon='fas fa-question'\n                            className={styles.questionMark}\n                            title=' This value is added to the default character distance when character 2 immediately follows character 1. Can be negative.'\n                        />\n                    </label>\n                    <p className={styles.pairsKey}>\n                        <button\n                            className={styles.button}\n                            onClick={this.addPair}\n                            disabled={this.state.UICodeCharList.length === 0}\n                            title='Add kerning pair'\n                        >\n                            <Fa icon='fas fa-plus' />\n                        </button>\n                    </p>\n                    {renderPairs}\n                </div>\n                <p className={`${styles.warning} ${this.isAnyPairWithLegalCharsRepeated ? '' : styles.warningOff}`}>Some pairs are defined multiple times!</p>\n            </div>\n        )\n    }\n}\n\nexport default Step2KerningPairsList\n","import { FontSpec } from '../generation/font/Font'\n\nfunction blobsToTextures(blobs: Blob[]): Promise<HTMLImageElement[]> {\n    const textures: HTMLImageElement[] = []\n\n    return new Promise(resolve => blobs.forEach(blob => {\n        const img = new Image()\n\n        img.onload = () => {\n            textures.push(img)\n            if (textures.length === blobs.length) {\n                resolve(textures)\n            }\n        }\n\n        img.src = URL.createObjectURL(blob)\n    }))\n}\n\nfunction getKerningAmount(text: string, charIndex: number, spec: FontSpec): number {\n    if (charIndex <= 0 || charIndex >= text.length) {\n        return 0\n    }\n\n    const charCode1 = text.charCodeAt(charIndex - 1)\n    const charCode2 = text.charCodeAt(charIndex)\n    const kerning = spec.kernings.find(({ first, second }) => first === charCode1 && second === charCode2)\n\n    return kerning?.amount ?? 0\n}\n\nexport async function drawPreview(text:string, spec: FontSpec, pages: Blob[], scale: number, ctx: CanvasRenderingContext2D): Promise<void> {\n    const textures = await blobsToTextures(pages)\n    const cursor = {\n        x: spec.info.padding.left,\n        y: spec.info.padding.up\n    }\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    ctx.strokeStyle = 'black'\n\n    ;[...text].forEach((c, i) => {\n        if (c === '\\n') {\n            cursor.x = 0\n            cursor.y += spec.info.spacing.vertical + spec.common.lineHeight\n            return\n        }\n\n        let charSpec = spec.chars.find(char => char.id === c.charCodeAt(0))\n        let placeholder = false\n\n        if (!charSpec) {\n           charSpec = spec.chars[0]\n           placeholder = true\n        }\n\n        const kerningAmount = placeholder ? 0 : getKerningAmount(text, i, spec)\n        const texture = textures[charSpec.page]\n\n        const pos = {\n            x: cursor.x + charSpec.xoffset + kerningAmount,\n            y: cursor.y + charSpec.yoffset\n        }\n\n        if ((pos.x + charSpec.width) * scale >= ctx.canvas.width) {\n            cursor.x = 0\n            cursor.y += spec.info.spacing.vertical + spec.common.lineHeight\n\n            pos.x = cursor.x + charSpec.xoffset + kerningAmount\n            pos.y = cursor.y + charSpec.yoffset\n        }\n\n        if (placeholder) {\n            const x = pos.x + charSpec.width / 4\n            const y = pos.y + charSpec.height / 4\n            const w = charSpec.width * 2/4\n            const h = charSpec.height * 2/4\n\n            ctx.strokeRect(x * scale, y * scale, w * scale, h * scale)\n        } else {\n            ctx.drawImage(texture, charSpec.x, charSpec.y, charSpec.width, charSpec.height, pos.x * scale, pos.y * scale, charSpec.width * scale, charSpec.height * scale)\n        }\n\n        cursor.x += charSpec.xadvance + spec.info.spacing.horizontal + kerningAmount\n    })\n}\n","import React, { Component } from 'react'\nimport { FontConfig, generateFont } from '../../../generation/font/Font'\nimport { CodePayload } from '../../../generation/template/types'\nimport { drawPreview } from '../../../preview/preview'\nimport styles from  './fontPreview.module.scss'\n\ninterface FontPreviewProps {\n    width: number\n    height: number\n    templateCode?: CodePayload\n    templateImg?: Blob\n    fontConfig: FontConfig\n}\n\ninterface FontPreviewState {\n    text: string\n    scale: number\n}\n\nclass FontPreview extends Component<FontPreviewProps, FontPreviewState> {\n    private canvas: React.RefObject<HTMLCanvasElement>\n    private canvasContainer: React.RefObject<HTMLDivElement>\n\n    constructor(props: FontPreviewProps) {\n        super(props)\n\n        this.state = {\n            text: '',\n            scale: 1\n        }\n\n        this.canvas = React.createRef()\n        this.canvasContainer = React.createRef()\n    }\n\n    async draw() {\n        if (this.canvas.current && this.props.templateImg && this.props.templateCode) {\n            const ctx = this.canvas.current.getContext('2d')\n            const spec = await generateFont(this.props.templateImg, this.props.templateCode, this.props.fontConfig)\n\n            ctx && drawPreview(this.state.text, spec[0], spec[1], this.state.scale, ctx)\n        }\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n\n    componentDidUpdate() {\n        this.draw()\n    }\n\n    handleBgColorChange(newColor: string) {\n        this.canvasContainer.current?.style.setProperty('--bgColor', newColor)\n    }\n\n    render() {\n        return <div className={styles.container}>\n            <div className={styles.controls}>\n                <textarea\n                    aria-label='preview text input'\n                    onChange={event => this.setState({ text: event.target.value })}\n                    value={this.state.text}\n                    className={styles.previewInput}\n                    placeholder='Type to preview the font' />\n                <div>\n                    <label className={styles.label}>Scale</label>\n                    <input\n                        aria-label='preview scale input'\n                        type='number'\n                        step={0.01}\n                        min={0.01}\n                        onChange={event => this.setState({ scale: parseFloat(event.target.value) })}\n                        value={isNaN(this.state.scale) ? '' : this.state.scale}\n                        className={styles.scaleInput} />\n                </div>\n                <div>\n                    <label className={styles.label}>Background</label>\n                    <input\n                        aria-label='preview color input'\n                        type='color'\n                        className={styles.colorInput}\n                        defaultValue='#ffffff'\n                        onChange={event => this.handleBgColorChange(event.target.value)} />\n                </div>\n            </div>\n            <div\n                className={styles.previewContainer}\n                ref={this.canvasContainer}\n                style={{ width: this.props.width, maxHeight: this.props.height }}>\n                <canvas\n                    width={this.props.width}\n                    height={this.props.height}\n                    ref={this.canvas} />\n            </div>\n        </div>\n    }\n}\n\nexport default FontPreview\n","import { bind } from 'helpful-decorators'\nimport React, { Component } from 'react'\nimport { FontConfig, generateFont, KerningPair } from '../../../generation/font/Font'\nimport { fontSpecToTextFile } from '../../../generation/font/specSaver'\nimport { downloadBmf } from '../../../generation/font/download'\nimport styles from './step2.module.scss'\nimport Dropzone from '../dropzone/Dropzone'\nimport Fa from '../../misc/fa/Fa'\nimport { NumInputValue, standardizeNumericalInput } from '../../../utils/input'\nimport Step2KerningPairsList from '../step2KerningPairsList/Step2KerningPairsList'\nimport { isElectron } from '../../../electron/electronInterop'\nimport { parseTemplateCode } from '../../../generation/template/parse'\nimport FontPreview from '../fontPreview/FontPreview'\nimport { CodePayload } from '../../../generation/template/types'\nimport Head from '../../Head/Head'\n\nconst ipcRenderer = !!window.require ? window.require('electron').ipcRenderer : null\n\ninterface Step2State {\n    horizontalMargin: NumInputValue\n    verticalMargin: NumInputValue\n    lineHeight: NumInputValue\n    kerningPairs: KerningPair[]\n    isKerningsValid: boolean\n    template?: File\n    templateCode?: CodePayload\n    templateCodeName?: string\n    templateError?: string\n    templateCodeError?: string\n}\n\nclass Step2 extends Component<{}, Step2State> {\n    constructor(props: {}) {\n        super(props)\n\n        this.state = {\n            horizontalMargin: 0,\n            verticalMargin: 0,\n            lineHeight: 0,\n            kerningPairs: [],\n            isKerningsValid: true\n        }\n    }\n\n    @bind\n    async handleTemplateDropzoneInput(data: File) {\n        if (!this.isTemplateFileValid(data)) {\n            this.setState(prevState => ({\n                ...prevState,\n                templateError: 'Uploaded file isn\\'t a valid template.',\n                template: undefined\n            }))\n            return\n        }\n\n        this.setState(prevState => ({\n            ...prevState,\n            templateError: undefined,\n            templateCodeError: undefined,\n            template: data\n        }))\n    }\n\n    @bind\n    async handleCodeDropzoneInput(data: File) {\n        if (!(await this.isCodeFileValid(data))) {\n            this.setState(prevState => ({\n                ...prevState,\n                templateCodeError: 'Uploaded file isn\\'t valid.',\n                templateCode: undefined\n            }))\n            return\n        }\n\n        const code = parseTemplateCode(await data.text())\n\n        if (!code) {\n            this.setState(prevState => ({\n                ...prevState,\n                templateCodeError: 'Uploaded code isn\\'t valid.',\n                templateCode: undefined\n            }))\n            return\n        }\n\n        this.setState(prevState => ({\n            ...prevState,\n            templateError: undefined,\n            templateCodeError: undefined,\n            templateCode: code,\n            templateCodeName: data.name,\n            lineHeight: code.slots[0]?.[2] ?? 0\n        }))\n    }\n\n    async isCodeFileValid(file?: Blob): Promise<boolean> {\n        return !!file && file.type === 'text/plain'\n    }\n\n    isTemplateFileValid(file?: Blob): boolean {\n        return !!file && file.type === 'image/png'\n    }\n\n    @bind\n    areDropzonesValid(): boolean {\n        return !this.state.templateError\n            && !this.state.templateCodeError\n            && !!this.state.template\n            && !!this.state.templateCode\n            && this.state.isKerningsValid\n    }\n    \n    @bind\n    handleNumericalInput(event: React.ChangeEvent<HTMLInputElement>, name: 'horizontalMargin' | 'verticalMargin' | 'lineHeight') {\n        const value = event.target.value === '' ? '' : parseInt(event.target.value, 10)\n\n        if (value === '' || value >= 0) {\n            this.setState(prevState => ({\n                ...prevState,\n                [name]: value\n            }))\n        }\n    }\n\n    @bind\n    async downloadFont(format: 'txt' | 'xml') {\n        if (!this.state.template || !this.state.templateCode) {\n            return\n        }\n\n        const templateImg = this.state.template\n\n        if (!this.state.templateCode) {\n            console.warn('Cannot generate a font in the current app state.')\n            return\n        }\n\n        const [fontSpec, pages] = await generateFont(templateImg, this.state.templateCode, this.getFontConfig())\n\n        const fntFile = fontSpecToTextFile(fontSpec, format)\n\n        if (isElectron()) {\n            let pagesBufferArray: ArrayBuffer[] = []\n\n            for (let i = 0; i < pages.length; i++) {\n                const buffer = await pages[i].arrayBuffer()\n                pagesBufferArray.push(buffer)\n            }\n\n            ipcRenderer?.send('save-font', fntFile, pagesBufferArray)\n        } else {\n            downloadBmf(fntFile, pages)\n        }\n    }\n\n    getFontConfig(): FontConfig {\n        return {\n            horizontalSpacing: standardizeNumericalInput(this.state.horizontalMargin) ,\n            verticalSpacing: standardizeNumericalInput(this.state.verticalMargin),\n            lineHeight: standardizeNumericalInput(this.state.lineHeight),\n            kernings: this.state.kerningPairs\n        }\n    }\n\n    @bind\n    changeKernings(kernings: KerningPair[]) {\n        this.setState({\n            kerningPairs: kernings\n        })\n    }\n\n    @bind\n    handleKerningsValidity(valid: boolean) {\n        this.setState({\n            isKerningsValid: valid\n        })\n    }\n\n    render() {\n        return(\n            <div className={`${styles.container} ${isElectron() ? styles.desktop : ''}`}>\n                <Head title={'Font Generation | Calligro'}/>\n                <div>\n                    <div className={`${styles.dropzones} ${isElectron() ? styles.desktop : ''}`}>\n                        <Dropzone\n                            inputName='image'\n                            acceptedInputType='.png'\n                            dataType='image/png'\n                            handleDropzoneInput={this.handleTemplateDropzoneInput}\n                            fileName={this.state.template?.name}\n                            error={this.state.templateError}\n                        />\n\n                        <Dropzone\n                            inputName='code file'\n                            acceptedInputType='.calligro'\n                            dataType='text/plain'\n                            handleDropzoneInput={this.handleCodeDropzoneInput}\n                            fileName={this.state.templateCodeName}\n                            error={this.state.templateCodeError}\n                        />\n                    </div>\n\n                    <div className={styles.options}>\n                        <label className={styles.label}>Font options</label>\n                        <div className={styles.option}>\n                            <label className={styles.optionsLabel}>Margin</label>\n                            <input\n                                aria-label='horizontal margin input'\n                                className={styles.optionsInput}\n                                type='number'\n                                onChange={(event) => this.handleNumericalInput(event, 'horizontalMargin')}\n                                value={this.state.horizontalMargin}\n                            />\n                            <Fa icon='fas fa-times' className={styles.times} />\n                            <input\n                                aria-label='vertical margin input'\n                                className={styles.optionsInput}\n                                type='number'\n                                onChange={(event) => this.handleNumericalInput(event, 'verticalMargin')}\n                                value={this.state.verticalMargin}\n                            />\n                            <Fa icon='fas fa-question' className={styles.questionMark} title='Horizontal and vertical distance between characters in pixels'/>\n                        </div>\n                        \n                        <div className={styles.option}>\n                            <label className={styles.optionsLabel}>Line height</label>\n                            <input\n                                aria-label='line height input'\n                                className={styles.optionsInput}\n                                type='number'\n                                onChange={(event) => this.handleNumericalInput(event, 'lineHeight')}\n                                value={this.state.lineHeight}\n                            />\n                            <Fa icon='fas fa-question' className={styles.questionMark} title='Distance from the top of a line to the top of the next one in pixels'/>\n                        </div>\n\n                        <Step2KerningPairsList\n                            templateCode={this.state.templateCode}\n                            changeKernings={this.changeKernings}\n                            handleKerningsValidity={this.handleKerningsValidity}\n                        />\n\n                        <div className={styles.download}>\n                            <label className={styles.buttonsContainerLabel}>\n                                {`${isElectron() ? 'save' : 'download'} font`}\n                            </label>\n\n                            <div className={styles.buttons}>\n                                <div>\n                                    <button onClick={() => this.downloadFont('txt')} className={styles.formButton} disabled={!this.areDropzonesValid()} >txt format</button>\n                                    <Fa icon='fas fa-question' className={styles.questionMark} title='Supported by Godot, LibGDX, LÖVE, Heaps.io and possibly others.'/>\n                                </div>\n\n                                <div>\n                                    <button onClick={() => this.downloadFont('xml')} className={styles.formButton} disabled={!this.areDropzonesValid()} >xml format</button>\n                                    <Fa icon='fas fa-question' className={styles.questionMark} title='Supported by Phaser, HaxeFlixel and possibly others.'/>\n                                </div>\n                            </div>\n                            \n                            <p className={styles.samplesParagraph}>\n                                Check\n                                <a\n                                    href='https://github.com/Voycawojka/calligro/tree/main/samples'\n                                    className={styles.samplesLink}\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    our samples\n                                </a>\n                                to see how to use it\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={`${styles.previewContainer} ${isElectron() ? styles.desktop : ''}`}>\n                        <FontPreview\n                            width={400}\n                            height={250}\n                            templateCode={this.state.templateCode}\n                            templateImg={this.state.template}\n                            fontConfig={this.getFontConfig()} />\n                    </div>\n\n                    <div>\n                        <h2 className={styles.heading}>Step 2 - Generate your font</h2>\n                        \n                        <ol className={styles.instructionList}>\n                            <li className={styles.instructionListItem}>Upload the template image with your characters drawn on it and the corresponding .calligro file (metadata).</li>\n                            <li className={styles.instructionListItem}>Specify font options</li>\n                            <li className={styles.instructionListItem}>\n                                <p>\n                                    Add kerning pairs if you want to. Characters in a pair are rendered further or closer to each other.\n                                    E.g. pair \"ab\" with distance -10 will cause \"b\" to be 10 pixels closer to \"a\". Pair \"ab\" &ne; \"ba\"!\n                                </p>\n                                <p>\n                                    Warning - not all tools support this feature. We know Godot does.\n                                </p>\n                            </li>\n                            <li className={styles.instructionListItem}>Preview changes live at any point.</li>\n                            <li className={styles.instructionListItem}>Generate and download your BMFont.</li>\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Step2\n"],"sourceRoot":""}