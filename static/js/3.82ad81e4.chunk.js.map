{"version":3,"sources":["ui/generation/step2/step2.module.scss","ui/generation/dropzone/dropzone.module.scss","ui/generation/step2KerningPairsList/step2KerningPairsList.module.scss","ui/generation/fontPreview/fontPreview.module.scss","generation/fs/image.ts","generation/packing/imagePacking.ts","generation/font/Font.ts","generation/font/specSaver.ts","generation/font/download.ts","ui/generation/dropzone/Dropzone.tsx","ui/generation/step2KerningPairsList/Step2KerningPairsList.tsx","preview/preview.ts","ui/generation/fontPreview/FontPreview.tsx","ui/generation/step2/Step2.tsx"],"names":["module","exports","blobToCanvas","blob","Promise","resolve","dataUrl","URL","createObjectURL","image","document","createElement","onload","_createCanvas","createCanvas","width","height","_createCanvas2","_slicedToArray","canvas","ctx","drawImage","remove","revokeObjectURL","src","packFromSheet","source","rects","_pack","data","packedRects","nextX","nextY","furthestSoFar","lowestSoFar","sort","a","b","h","map","rect","w","packed","x","y","sourceRect","pack","forEach","_ref","generateFont","_x","_x2","_x3","_generateFont","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","templateImg","tempConfig","fontConfig","slots","template","_yield$blobToCanvas","_yield$blobToCanvas2","sourceRects","_packFromSheet","_packFromSheet2","packedTexture","packedBlob","specification","wrap","_context","prev","next","_ref2","unicode","character","String","fromCharCode","Template","base","presetName","sent","slot","index","getSlotPosition","enclosingDim","convertToBlob","info","face","size","stretchH","aa","padding","up","right","down","left","spacing","horizontal","horizontalSpacing","vertical","verticalSpacing","outline","common","lineHeight","scaleW","scaleH","pages","id","file","chars","charCodeAt","xoffset","yoffset","xadvance","page","chnl","kernings","abrupt","stop","txtTag","name","properties","joinedProps","prop","value","concat","toString","join","xmlTag","_ref3","_ref4","fontSpecToTextFile","format","tag","infoTag","commonTag","pageTags","charTags","char","kerningTags","kerning","first","second","amount","_toConsumableArray","font","length","downloadBmf","_downloadBmf","fntFile","files","input","i","downloadArchive","Dropzone","_class","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","templateInput","state","dragCounter","React","createRef","_createClass","key","this","dataType","type","isCorrectType","handleDropzoneInput","_this$templateInput$c","_this$templateInput$c2","current","handleFileInput","event","preventDefault","dataTransfer","setState","prevState","renderUploadedFileName","fileName","_jsxs","className","styles","children","renderError","error","_jsx","container","containerDragOver","onDrop","handleDrop","onDragOver","dragOver","onDragEnter","dragEnter","onDragLeave","dragLeave","label","inputName","inputContainer","ref","onChange","handleInput","accept","acceptedInputType","title","Component","_applyDecoratedDescriptor","prototype","bind","Object","getOwnPropertyDescriptor","Step2KerningPairsList","pairsContainerRef","pairs","UICodeCharList","prevProps","templateCode","_this$props$templateC","parsedCode","flatMap","isAllPairsValid","changeKernings","handleKerningsValidity","_this2","scrollToBottom","scrollTop","scrollHeight","newPairs","splice","target","undefined","charToUnicode","charAt","parseInt","includes","pair","filter","workPair","isFirstCharLegal","isCharLegal","isSecondCharLegal","isWorkPairLegal","isPairUnrepeated","get","_this3","some","isPairValid","_this4","_this5","renderPairs","_pair$amount","Fragment","inputInvalid","unicodeToChar","changeChar","changeAmount","button","onClick","deletePair","Fa","icon","questionMark","pairsContainer","pairsKey","addPair","disabled","warning","isAnyPairWithLegalCharsRepeated","warningOff","blobsToTextures","blobs","textures","img","Image","push","getKerningAmount","text","charIndex","spec","_kerning$amount","charCode1","charCode2","find","drawPreview","_x4","_x5","_drawPreview","scale","cursor","clearRect","strokeStyle","c","charSpec","placeholder","kerningAmount","texture","pos","strokeRect","FontPreview","canvasContainer","_draw","getContext","draw","newColor","_this$canvasContainer","style","setProperty","controls","previewInput","step","min","parseFloat","isNaN","scaleInput","colorInput","defaultValue","handleBgColorChange","previewContainer","maxHeight","ipcRenderer","window","require","Step2","horizontalMargin","verticalMargin","kerningPairs","isKerningsValid","_handleTemplateDropzoneInput","isTemplateFileValid","_objectSpread","templateError","templateCodeError","_handleCodeDropzoneInput","_callee2","code","_context2","isCodeFileValid","t0","parseTemplateCode","t1","_code$slots$0$","_code$slots$","templateCodeName","nameParts","split","_defineProperty","_downloadFont","_callee3","_yield$generateFont","_yield$generateFont2","fontSpec","pagesBufferArray","buffer","_context3","console","warn","getFontConfig","isElectron","arrayBuffer","send","standardizeNumericalInput","valid","_this$state$template","desktop","Head","dropzones","handleTemplateDropzoneInput","handleCodeDropzoneInput","options","option","optionsLabel","optionsInput","handleNumericalInput","times","download","buttonsContainerLabel","buttons","downloadFont","formButton","areDropzonesValid","samplesParagraph","href","samplesLink","rel","heading","instructionList","instructionListItem"],"mappings":"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","file":"static/js/3.82ad81e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"step2_container__mP1Lb\",\"desktop\":\"step2_desktop__2F80Z\",\"instructionList\":\"step2_instructionList__A_Js5\",\"instructionListItem\":\"step2_instructionListItem__24XyX\",\"heading\":\"step2_heading__284k2\",\"dropzones\":\"step2_dropzones__2utFp\",\"options\":\"step2_options__3tola\",\"label\":\"step2_label__3qcY3\",\"optionsLabel\":\"step2_optionsLabel__2tyAP\",\"buttonsContainerLabel\":\"step2_buttonsContainerLabel__3VAjD\",\"optionsInput\":\"step2_optionsInput__2ZWmB\",\"times\":\"step2_times__263gt\",\"questionMark\":\"step2_questionMark__3yZuf\",\"option\":\"step2_option__2yRFz\",\"formButton\":\"step2_formButton__1NFQq\",\"download\":\"step2_download__1hxQw\",\"buttons\":\"step2_buttons__1G7PN\",\"samplesParagraph\":\"step2_samplesParagraph__12U9D\",\"samplesLink\":\"step2_samplesLink__3X2DM\",\"previewContainer\":\"step2_previewContainer__M4HZf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"dropzone_container__3YvRs\",\"containerDragOver\":\"dropzone_containerDragOver__2HKb-\",\"inputContainer\":\"dropzone_inputContainer__OD9Y7\",\"label\":\"dropzone_label__xsqTw\",\"fileName\":\"dropzone_fileName__CjjRG\",\"error\":\"dropzone_error__2gMT-\",\"input\":\"dropzone_input__3YtRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"step2KerningPairsList_container__2Re1A\",\"pairsContainer\":\"step2KerningPairsList_pairsContainer__2Qy3n\",\"pairsKey\":\"step2KerningPairsList_pairsKey__3OuXe\",\"button\":\"step2KerningPairsList_button__2e3T4\",\"label\":\"step2KerningPairsList_label__1YYti\",\"questionMark\":\"step2KerningPairsList_questionMark__2cusH\",\"input\":\"step2KerningPairsList_input__1pUjE\",\"inputInvalid\":\"step2KerningPairsList_inputInvalid__1-_2u\",\"warning\":\"step2KerningPairsList_warning__l57EV\",\"warningOff\":\"step2KerningPairsList_warningOff__2InZl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewContainer\":\"fontPreview_previewContainer__3f5kC\",\"container\":\"fontPreview_container__2c9m2\",\"controls\":\"fontPreview_controls__2e1CJ\",\"label\":\"fontPreview_label__1d7EU\",\"previewInput\":\"fontPreview_previewInput__VY5-O\",\"scaleInput\":\"fontPreview_scaleInput__1m6rL\",\"colorInput\":\"fontPreview_colorInput__V_kQ1\"};","import { createCanvas } from \"../../utils/canvasHelpers\"\n\nexport function blobToCanvas(blob: Blob): Promise<[HTMLCanvasElement, CanvasRenderingContext2D]> {\n    return new Promise(resolve => {\n        const dataUrl = URL.createObjectURL(blob)\n        const image = document.createElement('img')\n\n        image.onload = () => {\n            const [canvas, ctx] = createCanvas(image.width, image.height)\n\n            ctx.drawImage(image, 0, 0)\n\n            image.remove()\n            URL.revokeObjectURL(dataUrl)\n\n            resolve([canvas, ctx])\n        }\n\n        image.src = dataUrl\n    })\n}\n","import { createCanvas } from '../../utils/canvasHelpers'\nimport { Slot } from '../template/types'\n\nexport interface SourceRect {\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    slot: Slot\n}\n\nexport interface PackedRect {\n    x: number,\n    y: number,\n    sourceRect: SourceRect\n}\n\ninterface PackedData {\n    packedRects: PackedRect[],\n    width: number,\n    height: number\n}\n\nfunction pack(rects: SourceRect[], width: number): PackedData {\n    const data: PackedData = {\n        packedRects: [],\n        width: 0,\n        height: 0\n    }\n    \n    let nextX = 0\n    let nextY = 0\n    let furthestSoFar = 0\n    let lowestSoFar = 0\n\n    data.packedRects = rects\n        .sort((a, b) => b.h - a.h)\n        .map(rect => {\n            if (nextX + rect.w > width) {\n                nextX = 0\n                nextY = lowestSoFar\n            }\n\n            if (nextX + rect.w > furthestSoFar) {\n                furthestSoFar = nextX + rect.w\n            }\n\n            if (nextY + rect.h > lowestSoFar) {\n                lowestSoFar = nextY + rect.h\n            }\n\n            const packed = {\n                x: nextX,\n                y: nextY,\n                sourceRect: rect\n            }\n\n            nextX += rect.w\n\n            return packed\n        })\n    \n    data.width = furthestSoFar\n    data.height = lowestSoFar\n\n    return data\n}\n\nexport function packFromSheet(source: HTMLCanvasElement, rects: SourceRect[]): [HTMLCanvasElement, PackedRect[]] {\n    const { width, height, packedRects } = pack(rects, source.width)\n    const [canvas, ctx] = createCanvas(width, height)\n\n    packedRects.forEach(({ x, y, sourceRect }) => {\n        const { w, h } = sourceRect\n        ctx.drawImage(source, sourceRect.x, sourceRect.y, w, h, x, y, w, h)\n    })\n\n    return [canvas, packedRects]\n}\n","import { convertToBlob } from '../../utils/canvasHelpers'\nimport { blobToCanvas } from '../fs/image'\nimport { packFromSheet, SourceRect } from '../packing/imagePacking'\nimport Template from '../template/Template'\nimport { CodePayload } from '../template/types'\n\nexport interface FontSpec {\n    info: {\n        face: string\n        size: number\n        stretchH: number\n        aa: number\n        padding: {\n            up: number\n            right: number\n            down: number\n            left: number\n        }\n        spacing: {\n            horizontal: number\n            vertical: number\n        }\n        outline: number\n    }\n    common: {\n        lineHeight: number\n        base: number\n        scaleW: number\n        scaleH: number\n        pages: number\n    }\n    pages: {\n        id: number\n        file: string\n    }[]\n    chars: {\n        id: number\n        x: number\n        y: number\n        width: number\n        height: number\n        xoffset: number\n        yoffset: number\n        xadvance: number\n        page: number\n        chnl: 1 | 2 | 4 | 8 | 15\n    }[]\n    kernings: {\n        first: number\n        second: number\n        amount: number\n    }[]\n}\n\nexport interface KerningPair {\n    first: number\n    second: number\n    amount: number\n}\n\nexport interface FontConfig {\n    horizontalSpacing: number\n    verticalSpacing: number\n    lineHeight: number\n    kernings: KerningPair[]\n}\n\nexport async function generateFont(templateImg: Blob, tempConfig: CodePayload, fontConfig: FontConfig): Promise<[FontSpec, Blob[]]> {\n    const slots = tempConfig.slots.map(([ unicode, width, height ]) => ({ character: String.fromCharCode(unicode), width, height }))\n    const template = new Template(slots, tempConfig.base, tempConfig.presetName, null)\n\n    const [canvas] = await blobToCanvas(templateImg)\n\n    const sourceRects: SourceRect[] = slots.map((slot, index) => ({\n        slot,\n        x: template.getSlotPosition(index + 1).x + template.enclosingDim.w / 2 - (slot.width - 2) / 2,\n        y: template.getSlotPosition(index + 1).y + template.enclosingDim.h / 2 - (slot.height - 2) / 2,\n        w: slot.width - 2,\n        h: slot.height - 2\n    }))\n\n    const [packedTexture, packedRects] = packFromSheet(canvas, sourceRects)\n    const packedBlob = await convertToBlob(packedTexture)\n\n    const specification: FontSpec = {\n        info: {\n            face: 'calligro-custom',\n            size: 12,\n            stretchH: 100,\n            aa: 1,\n            padding: {\n                up: 0,\n                right: 0,\n                down: 0,\n                left: 0\n            },\n            spacing: {\n                horizontal: fontConfig.horizontalSpacing,\n                vertical: fontConfig.verticalSpacing\n            },\n            outline: 0\n        },\n        common: {\n            lineHeight: fontConfig.lineHeight,\n            base: tempConfig.base,\n            scaleW: canvas.width,\n            scaleH: canvas.height,\n            pages: 1\n        },\n        pages: [\n            {\n                id: 0,\n                file: 'calligro-page-0.png'\n            }\n        ],\n        chars: packedRects.map(rect => ({\n            id: rect.sourceRect.slot.character.charCodeAt(0),\n            x: rect.x,\n            y: rect.y,\n            width: rect.sourceRect.w,\n            height: rect.sourceRect.h,\n            xoffset: 0,\n            yoffset: 0,\n            xadvance: rect.sourceRect.w,\n            page: 0,\n            chnl: 15\n        })),\n        kernings: fontConfig.kernings\n    }\n\n    return [specification, [packedBlob]]\n}\n","import { FontSpec } from \"./Font\";\n\ntype tagProp = [string, string | number]\n\nfunction txtTag(name: string, properties: tagProp[]) {\n    const joinedProps = properties.map(([ prop, value ]) => `${prop}=${value.toString()}`).join(' ')\n    return `${name} ${joinedProps}`\n}\n\nfunction xmlTag(name: string, properties: tagProp[]) {\n    const joinedProps = properties.map(([ prop, value ]) => `${prop}=\"${value.toString()}\"`).join(' ')\n    return `<${name} ${joinedProps} />`\n}\n\nexport function fontSpecToTextFile(specification: FontSpec, format: 'txt' | 'xml') {\n    const tag = format === 'txt' ? txtTag : xmlTag\n\n    const info = specification.info\n    const infoTag = tag('info', [\n        ['face', info.face],\n        ['size', info.size],\n        ['unicode', '1'],\n        ['bold', '0'],\n        ['italic', '0'],\n        ['stretchH', info.stretchH],\n        ['aa', info.stretchH],\n        ['padding', `${info.padding.up},${info.padding.right},${info.padding.down},${info.padding.left}`],\n        ['spacing', `${info.spacing.horizontal},${info.spacing.vertical}`]\n    ])\n\n    const common = specification.common\n    const commonTag = tag('common', [\n        ['lineHeight', common.lineHeight],\n        ['base', common.base],\n        ['scaleW', common.scaleW],\n        ['scaleH', common.scaleH],\n        ['pages', common.pages]\n    ])\n\n    const pageTags = specification.pages.map(page => tag('page', [\n        ['id', page.id],\n        ['file', page.file]\n    ]))\n\n    const charTags = specification.chars.map(char => tag('char', [\n        ['id', char.id],\n        ['x', char.x],\n        ['y', char.y],\n        ['width', char.width],\n        ['height', char.height],\n        ['xoffset', char.xoffset],\n        ['yoffset', char.yoffset],\n        ['xadvance', char.xadvance],\n        ['page', char.page],\n        ['chnl', char.chnl]\n    ]))\n\n    const kerningTags = specification.kernings.map(kerning => tag('kerning', [\n        ['first', kerning.first],\n        ['second', kerning.second],\n        ['amount', kerning.amount]\n    ]))\n\n    switch(format) {\n        case 'txt':\n            return [\n                infoTag,\n                commonTag,\n                ...pageTags,\n                ...charTags,\n                ...kerningTags\n            ].join('\\n')\n        \n        case 'xml':\n            const font = [\n                infoTag,\n                commonTag,\n                '<pages>',\n                ...pageTags.map(tag => `\\t${tag}`),\n                '</pages>',\n                `<chars count=\"${charTags.length}\">`,\n                ...charTags.map(tag => `\\t${tag}`),\n                '</chars>',\n                `<kernings count=\"${kerningTags.length}\">`,\n                ...kerningTags.map(tag => `\\t${tag}`),\n                '</kernings>'\n            ].join('\\n\\t')\n\n            return [\n                '<?xml version=\"1.0\"?>',\n                '<font>',\n                '\\t' + font,\n                '</font>'\n            ].join('\\n')\n    }\n}\n","import { downloadArchive, ZippedFile } from '../fs/zip'\n\nexport async function downloadBmf(fntFile: string, pages: Blob[]): Promise<void> {\n    const files: ZippedFile[] = [\n        {\n            name: 'calligro-font.fnt',\n            input: fntFile\n        },\n        ...pages.map((page, i) => ({\n            name: `calligro-page-${i}.png`,\n            input: page\n        }))\n    ]\n\n    return downloadArchive('calligro-font', files)\n}\n","// eslint-disable-next-line\nimport { bind } from 'helpful-decorators'\nimport React, { Component } from 'react'\nimport styles from './dropzone.module.scss'\n\ninterface DropzoneProps {\n    handleDropzoneInput: (data: File) => void\n    fileName?: string\n    acceptedInputType: string\n    dataType?: string\n    inputName: string\n    error?: string\n}\n\ninterface DropzoneState {\n    dragCounter: number\n}\n\nclass Dropzone extends Component<DropzoneProps, DropzoneState> {\n    private templateInput: React.RefObject<HTMLInputElement>\n\n    constructor(props: DropzoneProps) {\n        super(props)\n\n        this.state = {\n            dragCounter: 0\n        }\n\n        this.templateInput = React.createRef()\n    }\n\n    isCorrectType(file: File) {\n        if (!this.props.dataType) {\n            return true;\n        } else {\n            return file.type === this.props.dataType\n        }\n    }\n\n    handleFileInput(data?: File) {\n        if (data && this.isCorrectType(data)) {\n            this.props.handleDropzoneInput(data)\n        }\n    }\n\n    @bind\n    handleInput() {\n        const data = this.templateInput.current?.files?.[0]\n       \n        this.handleFileInput(data)\n    }\n\n    @bind\n    handleDrop(event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n        const data = event.dataTransfer.files[0]\n\n        this.handleFileInput(data)\n        this.setState({\n            dragCounter: 0\n        })\n    }\n\n    dragOver (event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n    }\n    \n    @bind\n    dragEnter (event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n\n        this.setState(prevState => ({\n            dragCounter: prevState.dragCounter + 1\n        }))\n    }\n    \n    @bind\n    dragLeave (event: React.DragEvent<HTMLDivElement>) {\n        event.preventDefault()\n\n        this.setState(prevState => ({\n            dragCounter: prevState.dragCounter - 1\n        }))\n    }\n\n    render() {\n        const renderUploadedFileName = this.props.fileName\n            ? <p className={styles.fileName}>Uploaded {this.props.fileName}</p>\n            : null\n        \n        const renderError = this.props.error\n            ? <p className={styles.error}>{this.props.error}</p>\n            : null\n\n        return (\n            <div\n                className={`${styles.container} ${this.state.dragCounter ? styles.containerDragOver : ''}`}\n                onDrop={this.handleDrop}\n                onDragOver={this.dragOver}\n                onDragEnter={this.dragEnter}\n                onDragLeave={this.dragLeave}\n            >\n                <label className={styles.label}>Drag&amp;drop the {this.props.inputName}</label>\n                <div className={styles.inputContainer}>\n                    <input\n                        aria-label={`${this.props.inputName} input`}\n                        className={styles.input}\n                        type='file' ref={this.templateInput}\n                        onChange={this.handleInput}\n                        accept={this.props.acceptedInputType}\n                        title=\" \"\n                    />\n                </div>\n                {renderUploadedFileName}\n                {renderError}\n            </div>\n        )\n    }\n}\n\nexport default Dropzone\n","import React, { Component, Fragment } from 'react'\nimport styles from './step2KerningPairsList.module.scss'\nimport { KerningPair } from '../../../generation/font/Font'\n// eslint-disable-next-line\nimport { bind } from 'helpful-decorators'\nimport { unicodeToChar, charToUnicode } from '../../../utils/char'\nimport Fa from '../../misc/fa/Fa';\nimport { CodePayload } from '../../../generation/template/types'\n\ninterface WorkKerningPair {\n    first?: number,\n    second?: number,\n    amount?: number\n}\n\ninterface Step2KerningPairsListProps {\n    changeKernings: (kernings: KerningPair[]) => void\n    handleKerningsValidity: (valid: boolean) => void\n    templateCode?: CodePayload\n}\n\ninterface Step2KerningPairsListState {\n    pairs: WorkKerningPair[]\n    UICodeCharList: number[]\n}\n\nclass Step2KerningPairsList extends Component<Step2KerningPairsListProps, Step2KerningPairsListState> {\n    private pairsContainerRef: React.RefObject<HTMLDivElement>\n\n    constructor(props: Step2KerningPairsListProps) {\n        super(props)\n        this.state = {\n            pairs: [],\n            UICodeCharList: []\n        }\n        this.pairsContainerRef = React.createRef<HTMLDivElement>()\n    }\n\n    componentDidUpdate(prevProps: Step2KerningPairsListProps, prevState: Step2KerningPairsListState) {\n        if (prevProps.templateCode !== this.props.templateCode) {\n            this.setState({\n                pairs: []\n            })\n\n            if (this.props.templateCode) {\n                const parsedCode = this.props.templateCode?.slots.flatMap(char => char[0])\n\n                if (parsedCode) {\n                    this.setState({\n                        UICodeCharList: parsedCode\n                    })\n                }\n            }\n        }\n\n        if (prevState.pairs !== this.state.pairs) {\n            if (this.isAllPairsValid) {\n                this.props.changeKernings(this.state.pairs as KerningPair[])\n            }\n\n            this.props.handleKerningsValidity(this.isAllPairsValid)\n        }\n    }\n\n    @bind\n    addPair() {\n        this.setState(prevState => ({\n            pairs: [...prevState.pairs, {\n                amount: 1\n            }]\n        }), () => this.scrollToBottom())\n    }\n\n    scrollToBottom() {\n        if (this.pairsContainerRef.current) {\n            this.pairsContainerRef.current.scrollTop = this.pairsContainerRef.current.scrollHeight\n        }\n    }\n\n    @bind\n    deletePair(index: number) {\n        const newPairs = [...this.state.pairs]\n        newPairs.splice(index, 1)\n\n        this.setState({\n            pairs: newPairs\n        })\n    }\n\n    @bind\n    changeChar(event: React.ChangeEvent<HTMLInputElement>, index: number, char: 'first' | 'second') {\n         const value = event.target.value === '' ? undefined : charToUnicode(event.target.value.charAt(0))\n         const newPairs = [...this.state.pairs]\n\n         newPairs[index][char] = value\n\n         this.setState({\n            pairs: newPairs\n         })\n    }\n\n    @bind\n    changeAmount(event: React.ChangeEvent<HTMLInputElement>, index: number) {\n        const value = event.target.value === '' ? undefined : parseInt(event.target.value, 10)\n        const newPairs = [...this.state.pairs]\n\n        newPairs[index].amount = value\n\n        this.setState({\n            pairs: newPairs\n        })\n    }\n\n    @bind\n    isCharLegal(char?: number): boolean {\n        return char !== undefined ? this.state.UICodeCharList.includes(char) : false\n    }\n\n    \n    isPairUnrepeated(pair: WorkKerningPair) {\n        return this.state.pairs.filter(workPair => pair.first === workPair.first && pair.second === workPair.second).length < 2\n    }\n\n    isWorkPairLegal(pair: WorkKerningPair) {\n        const {first, second, amount} = pair\n\n        const isFirstCharLegal = this.isCharLegal(first)\n        const isSecondCharLegal = this.isCharLegal(second)\n        const isAmountLegal = !!amount\n\n        return isFirstCharLegal && isSecondCharLegal && isAmountLegal\n    }\n\n    @bind\n    isPairValid(pair: WorkKerningPair): boolean {\n        return this.isWorkPairLegal(pair) && this.isPairUnrepeated(pair)\n    }\n\n    get isAllPairsValid(): boolean {\n        return !this.state.pairs.some(pair => !this.isPairValid(pair))\n    }\n\n    get isAnyPairWithLegalCharsRepeated() {\n        return this.state.pairs.some(pair => !this.isPairUnrepeated(pair) && this.isCharLegal(pair.first) && this.isCharLegal(pair.second))\n    }\n\n    render () {\n        const renderPairs = this.state.pairs.map(( pair, index ) =>\n            <Fragment key={index} >\n                <input\n                    aria-label='first letter input'\n                    className={`${styles.input} ${this.isCharLegal(pair.first) && this.isPairUnrepeated(pair) ? '' : styles.inputInvalid}`}\n                    value={pair.first ? unicodeToChar(pair.first) : ''}\n                    onChange={(event) => this.changeChar(event, index, 'first')}\n                    type='text'\n                />\n\n                <input\n                    aria-label='second letter input'\n                    className={`${styles.input} ${this.isCharLegal(pair.second) && this.isPairUnrepeated(pair) ? '' : styles.inputInvalid}`}\n                    value={pair.second ? unicodeToChar(pair.second) : ''}\n                    onChange={(event) => this.changeChar(event, index, 'second')}\n                    type='text'\n                />\n\n                <input\n                    aria-label='distance input'\n                    className={`${styles.input} ${!!pair.amount ? '' : styles.inputInvalid}`}\n                    value={pair.amount ?? ''}\n                    onChange={(event) => this.changeAmount(event, index)}\n                    type='number'\n                />\n\n                <button className={styles.button} onClick={() => this.deletePair(index)} title='Delete kerning pair'>\n                    <Fa icon='fas fa-minus' />\n                </button>\n            </Fragment>\n        )\n\n        return (\n            <div className={styles.container}>\n                <label className={styles.label}>Kerning pairs\n                    <Fa\n                        icon='fas fa-question'\n                        className={styles.questionMark}\n                        title='Pairs of characters with non-default distance from each other. Only supported by some engines'\n                    />\n                </label>\n                <div className={styles.pairsContainer} ref={this.pairsContainerRef}>\n                    <label className={styles.pairsKey}>character 1</label>\n                    <label className={styles.pairsKey}>character 2</label>\n                    <label className={styles.pairsKey}>distance\n                        <Fa\n                            icon='fas fa-question'\n                            className={styles.questionMark}\n                            title=' This value is added to the default character distance when character 2 immediately follows character 1. Can be negative.'\n                        />\n                    </label>\n                    <p className={styles.pairsKey}>\n                        <button\n                            className={styles.button}\n                            onClick={this.addPair}\n                            disabled={this.state.UICodeCharList.length === 0}\n                            title='Add kerning pair'\n                        >\n                            <Fa icon='fas fa-plus' />\n                        </button>\n                    </p>\n                    {renderPairs}\n                </div>\n                <p className={`${styles.warning} ${this.isAnyPairWithLegalCharsRepeated ? '' : styles.warningOff}`}>Some pairs are defined multiple times!</p>\n            </div>\n        )\n    }\n}\n\nexport default Step2KerningPairsList\n","import { FontSpec } from '../generation/font/Font'\n\nfunction blobsToTextures(blobs: Blob[]): Promise<HTMLImageElement[]> {\n    const textures: HTMLImageElement[] = []\n\n    return new Promise(resolve => blobs.forEach(blob => {\n        const img = new Image()\n\n        img.onload = () => {\n            textures.push(img)\n            if (textures.length === blobs.length) {\n                resolve(textures)\n            }\n        }\n\n        img.src = URL.createObjectURL(blob)\n    }))\n}\n\nfunction getKerningAmount(text: string, charIndex: number, spec: FontSpec): number {\n    if (charIndex <= 0 || charIndex >= text.length) {\n        return 0\n    }\n\n    const charCode1 = text.charCodeAt(charIndex - 1)\n    const charCode2 = text.charCodeAt(charIndex)\n    const kerning = spec.kernings.find(({ first, second }) => first === charCode1 && second === charCode2)\n\n    return kerning?.amount ?? 0\n}\n\nexport async function drawPreview(text:string, spec: FontSpec, pages: Blob[], scale: number, ctx: CanvasRenderingContext2D): Promise<void> {\n    const textures = await blobsToTextures(pages)\n    const cursor = {\n        x: spec.info.padding.left,\n        y: spec.info.padding.up\n    }\n\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n    ctx.strokeStyle = 'black'\n\n    ;[...text].forEach((c, i) => {\n        if (c === '\\n') {\n            cursor.x = 0\n            cursor.y += spec.info.spacing.vertical + spec.common.lineHeight\n            return\n        }\n\n        let charSpec = spec.chars.find(char => char.id === c.charCodeAt(0))\n        let placeholder = false\n\n        if (!charSpec) {\n           charSpec = spec.chars[0]\n           placeholder = true\n        }\n\n        const kerningAmount = placeholder ? 0 : getKerningAmount(text, i, spec)\n        const texture = textures[charSpec.page]\n\n        const pos = {\n            x: cursor.x + charSpec.xoffset + kerningAmount,\n            y: cursor.y + charSpec.yoffset\n        }\n\n        if ((pos.x + charSpec.width) * scale >= ctx.canvas.width) {\n            cursor.x = 0\n            cursor.y += spec.info.spacing.vertical + spec.common.lineHeight\n\n            pos.x = cursor.x + charSpec.xoffset + kerningAmount\n            pos.y = cursor.y + charSpec.yoffset\n        }\n\n        if (placeholder) {\n            const x = pos.x + charSpec.width / 4\n            const y = pos.y + charSpec.height / 4\n            const w = charSpec.width * 2/4\n            const h = charSpec.height * 2/4\n\n            ctx.strokeRect(x * scale, y * scale, w * scale, h * scale)\n        } else {\n            ctx.drawImage(texture, charSpec.x, charSpec.y, charSpec.width, charSpec.height, pos.x * scale, pos.y * scale, charSpec.width * scale, charSpec.height * scale)\n        }\n\n        cursor.x += charSpec.xadvance + spec.info.spacing.horizontal + kerningAmount\n    })\n}\n","import React, { Component } from 'react'\nimport { FontConfig, generateFont } from '../../../generation/font/Font'\nimport { CodePayload } from '../../../generation/template/types'\nimport { drawPreview } from '../../../preview/preview'\nimport styles from  './fontPreview.module.scss'\n\ninterface FontPreviewProps {\n    width: number\n    height: number\n    templateCode?: CodePayload\n    templateImg?: Blob\n    fontConfig: FontConfig\n}\n\ninterface FontPreviewState {\n    text: string\n    scale: number\n}\n\nclass FontPreview extends Component<FontPreviewProps, FontPreviewState> {\n    private canvas: React.RefObject<HTMLCanvasElement>\n    private canvasContainer: React.RefObject<HTMLDivElement>\n\n    constructor(props: FontPreviewProps) {\n        super(props)\n\n        this.state = {\n            text: '',\n            scale: 1\n        }\n\n        this.canvas = React.createRef()\n        this.canvasContainer = React.createRef()\n    }\n\n    async draw() {\n        if (this.canvas.current && this.props.templateImg && this.props.templateCode) {\n            const ctx = this.canvas.current.getContext('2d')\n            const spec = await generateFont(this.props.templateImg, this.props.templateCode, this.props.fontConfig)\n\n            ctx && drawPreview(this.state.text, spec[0], spec[1], this.state.scale, ctx)\n        }\n    }\n\n    componentDidMount() {\n        this.draw()\n    }\n\n    componentDidUpdate() {\n        this.draw()\n    }\n\n    handleBgColorChange(newColor: string) {\n        this.canvasContainer.current?.style.setProperty('--bgColor', newColor)\n    }\n\n    render() {\n        return <div className={styles.container}>\n            <div className={styles.controls}>\n                <textarea\n                    aria-label='preview text input'\n                    onChange={event => this.setState({ text: event.target.value })}\n                    value={this.state.text}\n                    className={styles.previewInput}\n                    placeholder='Type to preview the font' />\n                <div>\n                    <label className={styles.label}>Scale</label>\n                    <input\n                        aria-label='preview scale input'\n                        type='number'\n                        step={0.01}\n                        min={0.01}\n                        onChange={event => this.setState({ scale: parseFloat(event.target.value) })}\n                        value={isNaN(this.state.scale) ? '' : this.state.scale}\n                        className={styles.scaleInput} />\n                </div>\n                <div>\n                    <label className={styles.label}>Background</label>\n                    <input\n                        aria-label='preview color input'\n                        type='color'\n                        className={styles.colorInput}\n                        defaultValue='#ffffff'\n                        onChange={event => this.handleBgColorChange(event.target.value)} />\n                </div>\n            </div>\n            <div\n                className={styles.previewContainer}\n                ref={this.canvasContainer}\n                style={{ width: this.props.width, maxHeight: this.props.height }}>\n                <canvas\n                    width={this.props.width}\n                    height={this.props.height}\n                    ref={this.canvas} />\n            </div>\n        </div>\n    }\n}\n\nexport default FontPreview\n","// eslint-disable-next-line\nimport { bind } from 'helpful-decorators'\nimport React, { Component } from 'react'\nimport { FontConfig, generateFont, KerningPair } from '../../../generation/font/Font'\nimport { fontSpecToTextFile } from '../../../generation/font/specSaver'\nimport { downloadBmf } from '../../../generation/font/download'\nimport styles from './step2.module.scss'\nimport Dropzone from '../dropzone/Dropzone'\nimport Fa from '../../misc/fa/Fa'\nimport { NumInputValue, standardizeNumericalInput } from '../../../utils/input'\nimport Step2KerningPairsList from '../step2KerningPairsList/Step2KerningPairsList'\nimport { isElectron } from '../../../electron/electronInterop'\nimport { parseTemplateCode } from '../../../generation/template/parse'\nimport FontPreview from '../fontPreview/FontPreview'\nimport { CodePayload } from '../../../generation/template/types'\nimport Head from '../../Head/Head'\n\nconst ipcRenderer = !!window.require ? window.require('electron').ipcRenderer : null\n\ninterface Step2State {\n    horizontalMargin: NumInputValue\n    verticalMargin: NumInputValue\n    lineHeight: NumInputValue\n    kerningPairs: KerningPair[]\n    isKerningsValid: boolean\n    template?: File\n    templateCode?: CodePayload\n    templateCodeName?: string\n    templateError?: string\n    templateCodeError?: string\n}\n\nclass Step2 extends Component<{}, Step2State> {\n    constructor(props: {}) {\n        super(props)\n\n        this.state = {\n            horizontalMargin: 0,\n            verticalMargin: 0,\n            lineHeight: 0,\n            kerningPairs: [],\n            isKerningsValid: true\n        }\n    }\n\n    @bind\n    async handleTemplateDropzoneInput(data: File) {\n        if (!this.isTemplateFileValid(data)) {\n            this.setState(prevState => ({\n                ...prevState,\n                templateError: 'Uploaded file isn\\'t a valid template.',\n                template: undefined\n            }))\n            return\n        }\n\n        this.setState(prevState => ({\n            ...prevState,\n            templateError: undefined,\n            templateCodeError: undefined,\n            template: data\n        }))\n    }\n\n    @bind\n    async handleCodeDropzoneInput(data: File) {\n        if (!this.isCodeFileValid(data)) {\n            this.setState(prevState => ({\n                ...prevState,\n                templateCodeError: 'Uploaded file isn\\'t valid.',\n                templateCode: undefined\n            }))\n            return\n        }\n\n        const code = parseTemplateCode(await data.text())\n\n        if (!code) {\n            this.setState(prevState => ({\n                ...prevState,\n                templateCodeError: 'Uploaded code isn\\'t valid.',\n                templateCode: undefined\n            }))\n            return\n        }\n\n        this.setState(prevState => ({\n            ...prevState,\n            templateError: undefined,\n            templateCodeError: undefined,\n            templateCode: code,\n            templateCodeName: data.name,\n            lineHeight: code.slots[0]?.[2] ?? 0\n        }))\n    }\n\n    isCodeFileValid(file?: File): boolean {\n        const nameParts = file?.name.split('.')\n        const extension = nameParts && nameParts[nameParts.length-1]\n        return extension === 'calligro'\n    }\n\n    isTemplateFileValid(file?: Blob): boolean {\n        return !!file && file.type === 'image/png'\n    }\n\n    @bind\n    areDropzonesValid(): boolean {\n        return !this.state.templateError\n            && !this.state.templateCodeError\n            && !!this.state.template\n            && !!this.state.templateCode\n            && this.state.isKerningsValid\n    }\n    \n    @bind\n    handleNumericalInput(event: React.ChangeEvent<HTMLInputElement>, name: 'horizontalMargin' | 'verticalMargin' | 'lineHeight') {\n        const value = event.target.value === '' ? '' : parseInt(event.target.value, 10)\n\n        if (value === '' || value >= 0) {\n            this.setState(prevState => ({\n                ...prevState,\n                [name]: value\n            }))\n        }\n    }\n\n    @bind\n    async downloadFont(format: 'txt' | 'xml') {\n        if (!this.state.template || !this.state.templateCode) {\n            return\n        }\n\n        const templateImg = this.state.template\n\n        if (!this.state.templateCode) {\n            console.warn('Cannot generate a font in the current app state.')\n            return\n        }\n\n        const [fontSpec, pages] = await generateFont(templateImg, this.state.templateCode, this.getFontConfig())\n\n        const fntFile = fontSpecToTextFile(fontSpec, format)\n\n        if (isElectron()) {\n            let pagesBufferArray: ArrayBuffer[] = []\n\n            for (let i = 0; i < pages.length; i++) {\n                const buffer = await pages[i].arrayBuffer()\n                pagesBufferArray.push(buffer)\n            }\n\n            ipcRenderer?.send('save-font', fntFile, pagesBufferArray)\n        } else {\n            downloadBmf(fntFile, pages)\n        }\n    }\n\n    getFontConfig(): FontConfig {\n        return {\n            horizontalSpacing: standardizeNumericalInput(this.state.horizontalMargin) ,\n            verticalSpacing: standardizeNumericalInput(this.state.verticalMargin),\n            lineHeight: standardizeNumericalInput(this.state.lineHeight),\n            kernings: this.state.kerningPairs\n        }\n    }\n\n    @bind\n    changeKernings(kernings: KerningPair[]) {\n        this.setState({\n            kerningPairs: kernings\n        })\n    }\n\n    @bind\n    handleKerningsValidity(valid: boolean) {\n        this.setState({\n            isKerningsValid: valid\n        })\n    }\n\n    render() {\n        return(\n            <div className={`${styles.container} ${isElectron() ? styles.desktop : ''}`}>\n                <Head title={'Font Generation | Calligro'}/>\n                <div>\n                    <div className={`${styles.dropzones} ${isElectron() ? styles.desktop : ''}`}>\n                        <Dropzone\n                            inputName='image'\n                            acceptedInputType='.png'\n                            dataType='image/png'\n                            handleDropzoneInput={this.handleTemplateDropzoneInput}\n                            fileName={this.state.template?.name}\n                            error={this.state.templateError}\n                        />\n\n                        <Dropzone\n                            inputName='code file'\n                            acceptedInputType='.calligro'\n                            handleDropzoneInput={this.handleCodeDropzoneInput}\n                            fileName={this.state.templateCodeName}\n                            error={this.state.templateCodeError}\n                        />\n                    </div>\n\n                    <div className={styles.options}>\n                        <label className={styles.label}>Font options</label>\n                        <div className={styles.option}>\n                            <label className={styles.optionsLabel}>Margin</label>\n                            <input\n                                aria-label='horizontal margin input'\n                                className={styles.optionsInput}\n                                type='number'\n                                onChange={(event) => this.handleNumericalInput(event, 'horizontalMargin')}\n                                value={this.state.horizontalMargin}\n                            />\n                            <Fa icon='fas fa-times' className={styles.times} />\n                            <input\n                                aria-label='vertical margin input'\n                                className={styles.optionsInput}\n                                type='number'\n                                onChange={(event) => this.handleNumericalInput(event, 'verticalMargin')}\n                                value={this.state.verticalMargin}\n                            />\n                            <Fa icon='fas fa-question' className={styles.questionMark} title='Horizontal and vertical distance between characters in pixels'/>\n                        </div>\n                        \n                        <div className={styles.option}>\n                            <label className={styles.optionsLabel}>Line height</label>\n                            <input\n                                aria-label='line height input'\n                                className={styles.optionsInput}\n                                type='number'\n                                onChange={(event) => this.handleNumericalInput(event, 'lineHeight')}\n                                value={this.state.lineHeight}\n                            />\n                            <Fa icon='fas fa-question' className={styles.questionMark} title='Distance from the top of a line to the top of the next one in pixels'/>\n                        </div>\n\n                        <Step2KerningPairsList\n                            templateCode={this.state.templateCode}\n                            changeKernings={this.changeKernings}\n                            handleKerningsValidity={this.handleKerningsValidity}\n                        />\n\n                        <div className={styles.download}>\n                            <label className={styles.buttonsContainerLabel}>\n                                {`${isElectron() ? 'save' : 'download'} font`}\n                            </label>\n\n                            <div className={styles.buttons}>\n                                <div>\n                                    <button onClick={() => this.downloadFont('txt')} className={styles.formButton} disabled={!this.areDropzonesValid()} >txt format</button>\n                                    <Fa icon='fas fa-question' className={styles.questionMark} title='Supported by Godot, LibGDX, LÖVE, Heaps.io and possibly others.'/>\n                                </div>\n\n                                <div>\n                                    <button onClick={() => this.downloadFont('xml')} className={styles.formButton} disabled={!this.areDropzonesValid()} >xml format</button>\n                                    <Fa icon='fas fa-question' className={styles.questionMark} title='Supported by Phaser, HaxeFlixel and possibly others.'/>\n                                </div>\n                            </div>\n                            \n                            <p className={styles.samplesParagraph}>\n                                Check\n                                <a\n                                    href='https://github.com/Voycawojka/calligro/tree/main/samples'\n                                    className={styles.samplesLink}\n                                    target='_blank'\n                                    rel='noreferrer'\n                                >\n                                    our samples\n                                </a>\n                                to see how to use it\n                            </p>\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n                    <div className={`${styles.previewContainer} ${isElectron() ? styles.desktop : ''}`}>\n                        <FontPreview\n                            width={400}\n                            height={250}\n                            templateCode={this.state.templateCode}\n                            templateImg={this.state.template}\n                            fontConfig={this.getFontConfig()} />\n                    </div>\n\n                    <div>\n                        <h2 className={styles.heading}>Step 2 - Generate your font</h2>\n                        \n                        <ol className={styles.instructionList}>\n                            <li className={styles.instructionListItem}>Upload the template image with your characters drawn on it and the corresponding .calligro file (metadata).</li>\n                            <li className={styles.instructionListItem}>Specify font options</li>\n                            <li className={styles.instructionListItem}>\n                                <p>\n                                    Add kerning pairs if you want to. Characters in a pair are rendered further or closer to each other.\n                                    E.g. pair \"ab\" with distance -10 will cause \"b\" to be 10 pixels closer to \"a\". Pair \"ab\" &ne; \"ba\"!\n                                </p>\n                                <p>\n                                    Warning - not all tools support this feature. We know Godot does.\n                                </p>\n                            </li>\n                            <li className={styles.instructionListItem}>Preview changes live at any point.</li>\n                            <li className={styles.instructionListItem}>Generate and download your BMFont.</li>\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Step2\n"],"sourceRoot":""}