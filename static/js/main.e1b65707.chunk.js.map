{"version":3,"sources":["ui/generation/step1/step1.module.scss","ui/misc/fa/Fa.tsx","ui/generation/step1CharacterList/step1CharacterList.module.scss","electron/electronInterop.ts","ui/navbar/navbar.module.scss","ui/cookieNotice/cookieNotice.module.scss","utils/input.ts","ui/updater/updater.module.scss","ui/aboutPopup/aboutPopup.module.scss","ui/header/header.module.scss","ui/footer/footer.module.scss","ui/author/author.module.scss","utils/canvasHelpers.ts","ui/popup/popup.module.scss","ui/policy/policy.module.scss","ui/misc/loader/loader.module.scss","generation/fs/zip.ts","generation/template/parse.ts","utils/char.ts","utils/decorators.ts","generation/template/Template.ts","generation/template/slotDrawing.ts","ui/generation/step1CharacterList/Step1CharacterList.tsx","generation/template/download.ts","ui/envSpecific/WebOnly.tsx","ui/envSpecific/DesktopOnly.tsx","ui/misc/externalLink/ExternalLink.tsx","ui/generation/step1/Step1.tsx","utils/unicodeRanges.ts","ui/navbar/Navbar.tsx","ui/header/Header.tsx","ui/author/Author.tsx","ui/authors/Authors.tsx","ui/footer/Footer.tsx","ui/policy/Policy.tsx","ui/cookieNotice/CookieNotice.tsx","ui/misc/loader/Loader.tsx","ui/ipcNavigation/IpcNavigation.tsx","utils/compareVersions.ts","api/latestVesion.ts","ui/popup/Popup.tsx","ui/updater/Updater.tsx","ui/aboutPopup/AboutPopup.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Fa","props","className","icon","title","isElectron","navigator","userAgent","toLowerCase","indexOf","standardizeNumericalInput","input","wrapText","ctx","text","maxWidth","split","map","paragraph","flatMap","words","lines","forEach","word","currentLine","length","measureText","join","width","push","createCanvas","height","color","canvas","document","createElement","getContext","Error","fillStyle","fillRect","drawWrappedText","options","x","y","size","maxHeight","trySize","font","line","i","fillText","convertToBlob","Promise","resolve","reject","toBlob","blob","downloadBlob","name","link","href","URL","createObjectURL","download","click","revokeObjectURL","remove","downloadArchive","files","a","archive","downloadZip","parseTemplateCode","code","json","decodeURIComponent","escape","atob","codePayload","JSON","parse","version","presetName","Number","isInteger","base","Array","isArray","slots","incorrectSlot","find","slot","value","stringify","e","console","warn","message","charToUnicode","char","charCodeAt","unicodeToChar","unicode","String","fromCharCode","memoize","_target","_propertyKey","descriptor","targetFunction","get","Function","descriptorProp","cache","Map","args","key","cachedResult","result","apply","this","set","Template","w","slotDim","h","Math","ceil","sqrt","maxW","max","maxH","slotW","round","slotH","hMargin","index","floor","textAlign","getSlotPosition","vertMargin","translate","strokeStyle","strokeRect","charRectX","charRectY","beginPath","moveTo","lineTo","stroke","clearRect","fontSize","character","drawSlot","payload","btoa","unescape","encodeURIComponent","Step1CharacterList","charList","charSet","defaultWidth","defaultHeight","styles","characterContainer","inputInvalid","type","onChange","event","handleDimensionChange","times","buttonContainer","onClick","resetCharacterDimensions","button","undoButton","container","desktop","downloadTemplate","template","generateImageBlob","generateTemplateCode","WebOnly","div","children","DesktopOnly","shell","window","require","ExternalLink","preventDefault","openExternal","ipcRenderer","Step1","unicodeRanges","splice","sort","b","category","localeCompare","getUnicodeRanges","state","setInitialState","storedData","localStorage","getItem","parsedData","initialPreset","selectedPreset","initialCharSet","createCharSetFromPreset","initialCharString","charString","presetInputValue","_prevProps","prevState","setItem","on","loadTemplateListener","removeListener","_event","templateCode","setState","newCharString","target","newCharArray","filter","trim","newCharSet","Set","existingSlot","validCharString","charArray","preset","activeRange","range","workSlot","slotArray","every","standardizedBase","valueName","newValue","parseInt","dimension","image","arrayBuffer","imageBlobArrayBuffer","send","isValuePreset","some","newCharset","blur","renderPresetSelect","includes","slice","defaultOption","datalistId","inputContainer","questionMark","inputQuestionMark","list","changePreset","presetSelect","onBlur","presetSelectBlur","id","log","heading","charactersLabelContainer","label","charactersLabel","charactersTextArea","handleCharSetInput","removeDuplicatesFromCharString","smallFormButton","disabled","isCharStringValid","parameters","commonParameters","commonLabel","commonInput","handleDefaultValueChange","isBaseValid","commonInputIvalid","formButton","isSlotArrayValid","perCharacterParameters","instructionList","instructionListItem","to","desktopWidget","frameBorder","src","mobileWidget","Component","bind","Navbar","exact","navLink","navLinkLeft","activeClassName","navLinkActive","linkBig","linkSmall","navLinkRight","Header","alt","logo","sourceNoticeContainer","sourceNoticeLine1","sourceNoticeLine2","githubCorner","bannerColor","octoColor","Author","renderSocial","socialLinks","social","socialLink","url","socialContainer","Authors","Footer","policy","authors","linkContainer","Policy","policyContainer","menuLink","CookieNotice","acknowledged","Cookies","updateAnalytics","expires","analyticsStatus","gtag","analytics_storage","content","details","listItem","handleExit","Loader","timer","isLoaderOn","setTimeout","clearTimeout","IpcNavigation","navigationListener","arg","compareVersions","version1","version2","v","major1","minor1","patch1","major2","minor2","patch2","majorDiff","compare","minorDiff","fetchLatestItchVersion","channelName","fetch","then","response","data","errors","fetchGithubVersionDetails","tag","fetchNewerVersion","currentVersion","currentChannel","itchVersion","latest","githubRelease","body","error","Popup","closeButton","closeHandler","Updater","versionListener","channel","platform","newVersion","newVersionName","newVersionDescription","newVersionCount","undefined","description","item","descriptionParagraph","close","contentBold","AboutPopup","active","closeWindow","disclaimer","authorsContainer","Step2","React","lazy","App","path","fallback","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,WAAa,0BAA0B,iBAAmB,gCAAgC,uBAAyB,sCAAsC,yBAA2B,wCAAwC,sBAAwB,qCAAqC,mBAAqB,kCAAkC,gBAAkB,+BAA+B,oBAAsB,mCAAmC,MAAQ,qBAAqB,gBAAkB,+BAA+B,YAAc,2BAA2B,YAAc,2BAA2B,kBAAoB,iCAAiC,QAAU,uBAAuB,UAAY,yBAAyB,WAAa,0BAA0B,gBAAkB,+BAA+B,MAAQ,qBAAqB,aAAe,4BAA4B,kBAAoB,iCAAiC,gBAAkB,+BAA+B,KAAO,oBAAoB,aAAe,4BAA4B,eAAiB,8BAA8B,cAAgB,6BAA6B,aAAe,8B,kCCDpuC,gBAgBeC,IARf,SAAYC,GAAiB,IAAD,EAClBC,EAAiB,UAAGD,EAAMC,iBAAT,QAAsB,GAE7C,OACI,mBAAGA,UAAS,UAAKD,EAAME,KAAX,YAAmBD,GAAaE,MAAOH,EAAMG,U,sBCXjEN,EAAOC,QAAU,CAAC,UAAY,sCAAsC,QAAU,oCAAoC,UAAY,sCAAsC,MAAQ,kCAAkC,aAAe,yCAAyC,MAAQ,kCAAkC,WAAa,uCAAuC,mBAAqB,+CAA+C,OAAS,mCAAmC,gBAAkB,8C,gCCD/d,SAASM,IAGZ,OAFkBC,UAAUC,UAAUC,cAErBC,QAAQ,eAAiB,EAH9C,mC,gBCCAX,EAAOC,QAAU,CAAC,UAAY,0BAA0B,QAAU,wBAAwB,UAAY,0BAA0B,QAAU,wBAAwB,YAAc,4BAA4B,aAAe,6BAA6B,cAAgB,gC,gBCAxQD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,QAAU,8BAA8B,MAAQ,4BAA4B,QAAU,8BAA8B,KAAO,2BAA2B,SAAW,+BAA+B,KAAO,2BAA2B,QAAU,8BAA8B,cAAgB,sC,6BCCjV,SAASW,EAA0BC,GACtC,MAAiB,KAAVA,EAAe,EAAIA,EAD9B,mC,iBCDAb,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,yBAAyB,YAAc,6BAA6B,KAAO,sBAAsB,qBAAuB,wC,gBCA3LD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,iBAAmB,qCAAqC,KAAO,yBAAyB,QAAU,4BAA4B,WAAa,+BAA+B,UAAY,gC,gBCAlPD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,sBAAwB,sCAAsC,kBAAoB,kCAAkC,kBAAoB,kCAAkC,KAAO,qBAAqB,QAAU,wBAAwB,aAAe,+B,gBCA/SD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,OAAS,uBAAuB,KAAO,qBAAqB,QAAU,wBAAwB,cAAgB,gC,mBCAtKD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,WAAa,2BAA2B,KAAO,qBAAqB,gBAAkB,gCAAgC,KAAO,uB,6BCDrL,SAASa,EAASC,EAA+BC,EAAcC,GAC3D,OAAOD,EACFE,MAAM,MACNC,KAAI,SAAAC,GAAS,OAAIA,EAAUF,MAAM,QACjCG,SAAQ,SAAAC,GACL,IAAMC,EAAoB,CAAC,IAa3B,OAXAD,EAAME,SAAQ,SAAAC,GACV,IAAMC,EAAcH,EAAMA,EAAMI,OAAO,GACzBZ,EAAIa,YAAJ,UAAmBF,EAAYG,KAAK,KAApC,YAA4CJ,IAAQK,MAEtDb,EACRS,EAAYK,KAAKN,GAEjBF,EAAMQ,KAAK,CAACN,OAIbF,EAAMJ,KAAI,SAAAG,GAAK,OAAIA,EAAMO,KAAK,WAI1C,SAASG,EAAaF,EAAeG,EAAgBC,GACxD,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOL,MAAQA,EACfK,EAAOF,OAASA,EAEhB,IAAMlB,EAAMoB,EAAOG,WAAW,MAE9B,IAAKvB,EACD,MAAM,IAAIwB,MAAM,iFAQpB,OALIL,IACAnB,EAAIyB,UAAYN,EAChBnB,EAAI0B,SAAS,EAAG,EAAGN,EAAOL,MAAOK,EAAOF,SAGrC,CAACE,EAAQpB,GAWb,SAAS2B,EAAgB3B,EAA+BC,EAAc2B,GACzE,IAAQC,EAAoCD,EAApCC,EAAGC,EAAiCF,EAAjCE,EAAGC,EAA8BH,EAA9BG,KAAM7B,EAAwB0B,EAAxB1B,SAAU8B,EAAcJ,EAAdI,UAC1BC,EAAUF,EAEd/B,EAAIkC,KAAJ,UAAcD,EAAd,YACA,IAAIzB,EAAQT,EAASC,EAAKC,EAAMC,GAEhC,GAAI8B,EACA,KAAOxB,EAAMI,OAASqB,GAAWD,GAC7BC,IAEAjC,EAAIkC,KAAJ,UAAcD,EAAd,YACAzB,EAAQT,EAASC,EAAKC,EAAMC,GAIpCM,EAAMC,SAAQ,SAAC0B,EAAMC,GAAP,OAAapC,EAAIqC,SAASF,EAAMN,EAAGC,EAAIM,EAAIH,EAAS/B,MAG/D,SAASoC,EAAclB,GAC1B,OAAO,IAAImB,SAAQ,SAACC,EAASC,GACzBrB,EAAOsB,QAAO,SAAAC,GAAI,OAAMA,EAAOH,EAAQG,GAAQF,UAtEvD,uG,mBCCAxD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,MAAQ,qBAAqB,YAAc,2BAA2B,MAAQ,uB,qBCArID,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,SAAW,2B,iBCA/ED,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,uB,mGCC/D,SAAS0D,EAAaC,EAAcF,GAChC,IAAMG,EAAOzB,SAASC,cAAc,KACpCwB,EAAKC,KAAOC,IAAIC,gBAAgBN,GAChCG,EAAKI,SAAWL,EAChBC,EAAKK,QAELH,IAAII,gBAAgBN,EAAKC,MACzBD,EAAKO,SAQF,SAAeC,EAAtB,oC,4CAAO,WAA+BT,EAAcU,GAA7C,iBAAAC,EAAA,6DACGC,EAAUC,YAAYH,GADzB,SAEgBE,EAAQd,OAFxB,OAEGA,EAFH,OAIHC,EAAa,GAAD,OAAIC,EAAJ,QAAgBF,GAJzB,4C,qDCfA,SAASgB,EAAkBC,GAC9B,IACI,IAAMC,EAAOC,mBAAmBC,OAAOC,KAAKJ,KACtCK,EAA2BC,KAAKC,MAAMN,GAE5C,OAAQI,EAAYG,SAChB,KAAK,EACDH,EAAYI,WAAa,SACzB,MACJ,KAAK,EACD,MACJ,QACI,MAAM,IAAI7C,MAAJ,iFAAoFyC,EAAYG,QAAhG,MAGd,GAAsC,kBAA3BH,EAAYI,WACnB,MAAM,IAAI7C,MAAJ,sEAAyEyC,EAAYI,WAArF,aAAoGJ,EAAYI,WAAhH,MAGV,IAAKC,OAAOC,UAAUN,EAAYO,MAC9B,MAAM,IAAIhD,MAAJ,kEAAqEyC,EAAYO,KAAjF,aAA0FP,EAAYO,KAAtG,MAGV,IAAKC,MAAMC,QAAQT,EAAYU,OAC3B,MAAM,IAAInD,MAAJ,0DAA6DyC,EAAYU,MAAzE,aAAmFV,EAAYU,MAA/F,MAGV,IAAMC,EAAgBX,EAAYU,MAAME,MAAK,SAAAC,GAAI,OAAKL,MAAMC,QAAQI,IAAyB,IAAhBA,EAAKlE,QAAgBkE,EAAKD,MAAK,SAAAE,GAAK,OAAKT,OAAOC,UAAUQ,SACvI,GAAIH,EACA,MAAM,IAAIpD,MAAJ,kFAAqF0C,KAAKc,UAAUJ,KAG9G,OAAOX,EACT,MAAOgB,GAEL,OADAC,QAAQC,KAAR,0CAAgDF,EAAEG,UAC3C,MAnCf,mC,6BCFO,SAASC,EAAcC,GAC1B,OAAOA,EAAKC,WAAW,GAGpB,SAASC,EAAcC,GAC1B,OAAOC,OAAOC,aAAaF,GAL/B,qE,2GCAO,SAASG,EAAQC,EAAiBC,EAAsBC,GAAuC,IAAD,EAC3FC,EAAc,UAAGD,EAAWhB,aAAd,QAAuBgB,EAAWE,IAEtD,IAAKD,KAAoBA,aAA0BE,UAC/C,MAAM1E,MAAM,+CAGhB,IAAM2E,EAAmBJ,EAAWhB,MAAQ,QAAU,MAChDqB,EAAQ,IAAIC,IAElBN,EAAWI,GAAkB,WAA2B,IAAD,uBAAbG,EAAa,yBAAbA,EAAa,gBACnD,IAAMC,EAAMrC,KAAKc,UAAUsB,GACrBE,EAAeJ,EAAMH,IAAIM,GACzBE,EAAWD,GAA8BR,EAAeU,MAAMC,KAAML,GAI1E,OAFAF,EAAMQ,IAAIL,EAAKE,GAERA,G,ICZMI,G,aAIjB,WAA6BlC,EAAgCH,EAA+BH,GAAqB,yBAApFM,QAAmF,KAAnDH,OAAmD,KAApBH,aAAoB,KAH/FjD,YAG+F,OAF/FpB,SAE+F,QAClFiB,YAAa0F,KAAKG,EAAIH,KAAKI,QAAQD,EAAGH,KAAKK,EAAIL,KAAKI,QAAQC,EAAG,SADmB,mBAC3GL,KAAKvF,OADsG,KAC9FuF,KAAK3G,IADyF,K,mCAIhH,WAEI,OAAOiH,KAAKC,KAAKD,KAAKE,KAAKR,KAAKhC,MAAM/D,OAAS,M,aAGnD,WAEI,OAAOqG,KAAKC,KAAKD,KAAKE,KAAKR,KAAKhC,MAAM/D,OAAS,M,mBAGnD,WAEI,IAAMwG,EAAOH,KAAKI,IAAIX,MAAM,KAAMC,KAAKhC,MAAMvE,KAAI,SAAA0E,GAAI,OAAIA,EAAK/D,UACxDuG,EAAOL,KAAKI,IAAIX,MAAM,KAAMC,KAAKhC,MAAMvE,KAAI,SAAA0E,GAAI,OAAIA,EAAK5D,WAExDqG,EAAQN,KAAKO,MAAa,IAAPJ,GACnBK,EAAQR,KAAKO,MAAa,IAAPF,GAGzB,MAAO,CAAER,EAAGS,EAAOP,EAAGS,EAAOC,QAFVT,KAAKC,MAAMO,EAAQH,GAAQ,M,6BAKlD,SAAuBK,GACnB,MAAO,CACH9F,EAAI8F,EAAQhB,KAAKG,EAAKH,KAAKI,QAAQD,EACnChF,EAAGmF,KAAKW,MAAMD,EAAQhB,KAAKG,GAAKH,KAAKI,QAAQC,K,+BAIrD,WAC2C,ICEtBhH,EAA+B6B,EAAWC,EAAWgF,EAAWE,EDF3C,OAgBtC,OCdiBhH,EDDR2G,KAAK3G,ICCkC6B,EDD7B,ECCwCC,EDDrC,ECCgDgF,EDD7CH,KAAKI,QAAQD,ECC2CE,EDDxCL,KAAKI,QAAQC,ECU1DhH,EAAIyB,UAAY,QAChBzB,EAAI6H,UAAY,OAChBlG,YAAgB3B,EAVN,4LAUiB,CACvB6B,EAAGA,EAAQ,IAAJiF,EACPhF,EAAGA,EAAQ,GAAJkF,EACP9G,SAAc,GAAJ4G,EACV9E,UAAe,GAAJgF,EACXjF,KAAMiF,EAAI,IDfVL,KAAKhC,MAAMlE,SAAQ,SAACqE,EAAM6C,GACtB,MAAiB,EAAKG,gBAAgBH,EAAQ,GAAtC9F,EAAR,EAAQA,EAAGC,EAAX,EAAWA,GCnChB,SAAkB9B,EAA+B8E,EAAYlD,GAChE,IAAQC,EAAiCD,EAAjCC,EAAGC,EAA8BF,EAA9BE,EAAGgF,EAA2BlF,EAA3BkF,EAAGE,EAAwBpF,EAAxBoF,EAAGxC,EAAqB5C,EAArB4C,KAAMuD,EAAenG,EAAfmG,WAE1B/H,EAAIgI,UAAU,GAAK,IAEnBhI,EAAIiI,YAAc,QAClBjI,EAAIkI,WAAWrG,EAAGC,EAAGgF,EAAGE,GAExB,IAAMmB,EAAYtG,EAAIiF,EAAI,EAAIhC,EAAK/D,MAAQ,EACrCqH,EAAYtG,EAAIkF,EAAI,EAAIlC,EAAK5D,OAAS,EAE5ClB,EAAIiI,YAAc,QAClBjI,EAAIqI,YACJrI,EAAIsI,OAAOzG,EAAGuG,EAAY5D,GAC1BxE,EAAIuI,OAAO1G,EAAIiF,EAAGsB,EAAY5D,GAC9BxE,EAAIwI,SAEJxI,EAAIiI,YAAc,MAClBjI,EAAIyI,UAAUN,EAAWC,EAAWtD,EAAK/D,MAAO+D,EAAK5D,QACrDlB,EAAIkI,WAAWC,EAAWC,EAAWtD,EAAK/D,MAAO+D,EAAK5D,QAEtDlB,EAAIgI,WAAW,IAAM,IAErB,IAAMU,EAAwB,GAAbX,EAEbW,GAAY,IACZ1I,EAAIyB,UAAY,QAChBzB,EAAIkC,KAAJ,UAAcwG,EAAd,YACA1I,EAAI6H,UAAY,SAChB7H,EAAIqC,SAASyC,EAAK6D,UAAW9G,EAAIiF,EAAI,EAAGhF,EAAIkF,EAAIe,EAAa,EAAGjB,IDQ5D8B,CAAS,EAAK5I,IAAK8E,EAAM,CACrBjD,IACAC,IACAgF,EAAG,EAAKC,QAAQD,EAChBE,EAAG,EAAKD,QAAQC,EAChBxC,KAAM,EAAKA,KACXuD,WAAY,EAAKhB,QAAQW,aAI1BpF,YAAcqE,KAAKvF,U,kCAG9B,WAEI,IAAMyH,EAAuB,CACzBzE,QAAS,EACTO,MAAOgC,KAAKhC,MAAMvE,KAAI,SAAA0E,GAAI,MAAK,CAACA,EAAK6D,UAAUpD,WAAW,GAAIT,EAAK/D,MAAO+D,EAAK5D,WAC/EsD,KAAMmC,KAAKnC,KACXH,WAAYsC,KAAKtC,YAGrB,OAAOyE,KAAKC,SAASC,mBAAmB9E,KAAKc,UAAU6D,U,kCA1D1DjD,G,2FAKAA,G,iGAKAA,G,iHAmBAA,G,8HAoBAA,G,qWEHUqD,MA5Cf,SAA6B7J,GACzB,IAAM8J,EAAW9J,EAAM+J,QAAQ/I,KAAI,SAAAkF,GAAS,IAAD,IACjCvE,EAAK,UAAGuE,EAAKvE,aAAR,QAAiB3B,EAAMgK,aAC5BlI,EAAM,UAAGoE,EAAKpE,cAAR,QAAkB9B,EAAMiK,cAEpC,OACI,sBAA0BhK,UAAWiK,IAAOC,mBAA5C,UACI,mBAAGlK,UAAWiK,IAAOX,UAArB,SAAiCrD,EAAKqD,YACtC,uBACI,uBAAerD,EAAKqD,UAApB,gBACAtJ,UAAS,UAAKiK,IAAOxJ,MAAZ,YAAqBD,YAA0BkB,IAAU,EAAIuI,IAAOE,aAAe,IAC5FC,KAAK,SACL1E,MAAOhE,EACP2I,SAAU,SAACC,GAAD,OAAWvK,EAAMwK,sBAAsBD,EAAO,QAASrE,MAErE,cAACnG,EAAA,EAAD,CAAIG,KAAK,eAAeD,UAAWiK,IAAOO,QAC1C,uBACI,uBAAevE,EAAKqD,UAApB,iBACAtJ,UAAS,UAAKiK,IAAOxJ,MAAZ,YAAqBD,YAA0BqB,IAAW,EAAIoI,IAAOE,aAAe,IAC7FC,KAAK,SACL1E,MAAO7D,EACPwI,SAAU,SAACC,GAAD,OAAWvK,EAAMwK,sBAAsBD,EAAO,SAAUrE,MAI/DA,EAAKpE,QAAYoE,EAAKvE,OAAWlB,YAA0BkB,IAAU,GAAKlB,YAA0BqB,IAAW,EAChH,sBAAM7B,UAAWiK,IAAOQ,gBAAxB,SACE,wBAAQC,QAAS,kBAAM3K,EAAM4K,yBAAyB1E,IAAOjG,UAAWiK,IAAOW,OAA/E,SACI,cAAC9K,EAAA,EAAD,CAAIG,KAAK,cAAcD,UAAWiK,IAAOY,iBAG/C,OAzBA5E,EAAKqD,cA+BvB,OACI,qBAAKtJ,UAAS,UAAKiK,IAAOa,UAAZ,YAAyB3K,cAAe8J,IAAOc,QAAU,IAAvE,SACKlB,K,gBCnDN,SAAemB,EAAtB,kC,4CAAO,WAAgCC,GAAhC,eAAA9G,EAAA,sEAIkB8G,EAASC,oBAJ3B,gCAGK1H,KAAM,eACN/C,MAJL,WAMC,CACI+C,KAAM,oBACN/C,MAAOwK,EAASE,wBAPlBjH,EADH,8BAYID,YAAgB,oBAAqBC,IAZzC,4C,kDCKA,SAASkH,EAAQrL,GACpB,OAAOI,cACD,KACAJ,EAAMsL,IACF,8BAAMtL,EAAMuL,WACZ,mCAAGvL,EAAMuL,W,oBCLhB,SAASC,EAAYxL,GACxB,OAAOI,cACDJ,EAAMsL,IACF,8BAAMtL,EAAMuL,WACZ,mCAAGvL,EAAMuL,WACb,KCVV,IAAME,EAAUC,OAAOC,QAAUD,OAAOC,QAAQ,YAAYF,MAAQ,KAoBrDG,I,EAAAA,EAff,SAAsB5L,GAClB,GAAII,cAAc,CAQd,OAAO,6CAAOJ,GAAP,IAAc2K,QAPD,SAACJ,GACbvK,EAAM2D,OACN4G,EAAMsB,iBACD,OAALJ,QAAK,IAALA,KAAOK,aAAa9L,EAAM2D,QAI3B,SAAqC3D,EAAMuL,YAGtD,OAAO,6CAAOvL,GAAP,aAAeA,EAAMuL,aCF1BQ,EAAgBL,OAAOC,QAAUD,OAAOC,QAAQ,YAAYI,YAAc,KAa1EC,G,oDAGF,WAAYhM,GAAY,IAAD,8BACnB,cAAMA,IAHFiM,mBAEe,EAGnB,EAAKA,cC/BN,WACH,IAAMA,EAAgCN,EAAQ,IAI9C,OAHAM,EAAcC,QAAQ,EAAG,GACzBD,EAAcE,MAAK,SAAC/H,EAAiBgI,GAAlB,OAAsChI,EAAEiI,SAASC,cAAcF,EAAEC,SAAU,SAEvFJ,ED0BkBM,GACrB,EAAKC,MAAQ,EAAKC,kBAJC,E,mDAOvB,WAA+B,IAAD,YACpBC,EAAahB,OAAOiB,aAAaC,QAAQ,YACzCC,EAAyBH,EAAa5H,KAAKC,MAAM2H,GAAc,KAC/DI,EAAa,iBAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAYE,sBAAf,QAAiC,cAC9CC,EAAc,iBAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAY9C,eAAf,QAA0BxC,KAAK0F,wBAAwBH,GACrEI,EAAiB,iBAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAYM,kBAAf,QAA6BH,EAAehM,KAAI,SAAA0E,GAAI,OAAIA,EAAK6D,aAAW7H,KAAK,IAEpG,MAAQ,CACJqL,eAAgBD,EAChB/C,QAASiD,EACThD,aAAY,iBAAE6C,QAAF,IAAEA,OAAF,EAAEA,EAAY7C,oBAAd,QAA8B,IAC1CC,cAAa,iBAAE4C,QAAF,IAAEA,OAAF,EAAEA,EAAY5C,qBAAd,QAA+B,IAC5C7E,KAAI,iBAAEyH,QAAF,IAAEA,OAAF,EAAEA,EAAYzH,YAAd,QAAsB,IAC1BgI,iBAAkBN,EAClBK,WAAYD,K,gCAIpB,SAAmBG,EAAgBC,GAC3BA,IAAc/F,KAAKiF,OACnBd,OAAOiB,aAAaY,QAAQ,WAAYzI,KAAKc,UAAU2B,KAAKiF,U,+BAIpE,WACe,OAAXT,QAAW,IAAXA,KAAayB,GAAG,gBAAiBjG,KAAKkG,wB,kCAG1C,WACe,OAAX1B,QAAW,IAAXA,KAAa2B,eAAe,gBAAiBnG,KAAKkG,wB,kCAGtD,SACqBE,EAAaC,GAC9B,IAAMpJ,EAAOD,YAAkBqJ,GAE3BpJ,GACA+C,KAAKsG,SAAS,CACVzI,KAAMZ,EAAKY,KACX2E,QAASvF,EAAKe,MAAMvE,KAAI,mCAAEuI,EAAF,KAAa5H,EAAb,KAAoBG,EAApB,WAAiC,CACrDyH,UAAWnD,YAAcmD,GACzB5H,QACAG,aAEJiL,eAAgBvI,EAAKS,WACrBmI,iBAAkB5I,EAAKS,e,gCAKnC,SACmBsF,GAAgD,IAAD,OAC9DA,EAAMsB,iBAEN,IAAMiC,EAAgBvD,EAAMwD,OAAOpI,MAC7BqI,EAAeF,EAAc/M,MAAM,IAAIkN,QAAO,SAAA/H,GAAI,MAAoB,KAAhBA,EAAKgI,UAG3DC,EAFe,YAAO,IAAIC,IAAIJ,IAG/BhN,KAAI,SAAAuI,GAAS,uBAAI,EAAKiD,MAAMzC,QACxBtE,MAAK,SAAA4I,GAAY,OAAIA,EAAa9E,YAAcA,YADvC,QAEP,CAAEA,gBAEbhC,KAAKsG,SAAS,CACVV,WAAYW,EACZ/D,QAASoE,EACTpB,eAAgB,SAChBK,iBAAkB,a,4CAI1B,WAEI,IAAMkB,EAAkB,YAAI,IAAIF,IAAI7G,KAAKiF,MAAMW,WAAWpM,MAAM,MAAMW,KAAK,IAE3E6F,KAAKsG,SAAS,CACVV,WAAYmB,M,+BAIpB,WAEI,IAAMC,EAAYhH,KAAKiF,MAAMW,WAAWpM,MAAM,IAE9C,OAAO,IAAIqN,IAAIG,GAAW5L,OAAS4L,EAAU/M,S,qCAGjD,SACwBgN,GACpB,IAAMC,EAAclH,KAAK0E,cAAcxG,MAAK,SAAAiJ,GAAK,OAAIA,EAAMrC,WAAamC,KAExE,GAAIC,EAAa,CAGb,IAFA,IAAM1E,EAAsB,GAEnB/G,EAAIyL,EAAYC,MAAM,GAAI1L,EAAIyL,EAAYC,MAAM,GAAK,EAAG1L,IAC7D+G,EAAQnI,KAAK,CAAC2H,UAAWjD,OAAOC,aAAavD,KAGjD,OAAO+G,EAEP,MAAO,K,qBAIf,WAAyB,IAAD,OACpB,OAAOxC,KAAKiF,MAAMzC,QAAQ/I,KAAI,SAAA2N,GAAQ,cAAK,CACvCpF,UAAWoF,EAASpF,UACpB5H,MAAOlB,YAAyB,UAACkO,EAAShN,aAAV,QAAmB,EAAK6K,MAAMxC,cAC9DlI,OAAQrB,YAAyB,UAACkO,EAAS7M,cAAV,QAAoB,EAAK0K,MAAMvC,qB,8BAIxE,WAEI,OAAO1C,KAAKqH,UAAUC,OAAM,SAAAnJ,GAAI,OAAIA,EAAK5D,OAAS,GAAK4D,EAAK/D,MAAQ,O,yBAGxE,WAEI,IAAMmN,EAA2BrO,YAA0B8G,KAAKiF,MAAMpH,MAGtE,OAAO0J,GAF4BrO,YAA0B8G,KAAKiF,MAAMvC,gBAEvB6E,GAAoB,I,sCAGzE,SACyBvE,EAA4CwE,GACjE,IAAMC,EAAkC,KAAvBzE,EAAMwD,OAAOpI,MAAe,GAAKsJ,SAAS1E,EAAMwD,OAAOpI,MAAO,IAE/E4B,KAAKsG,UAAS,SAAAP,GAAS,kCAChBA,GADgB,kBAElByB,EAAYC,S,mCAIrB,SACsBzE,EAA4C2E,EAA+BhJ,GAC7F,IAAM8I,EAAkC,KAAvBzE,EAAMwD,OAAOpI,MAAe,GAAKsJ,SAAS1E,EAAMwD,OAAOpI,MAAO,IACzEwI,EAAyB5G,KAAKiF,MAAMzC,QAAQ/I,KAAI,SAAAuI,GAAS,OAAIA,IAAcrD,EAAd,2BAExDqD,GAFwD,kBAG1D2F,EAAaF,IAEhBzF,KAGNhC,KAAKsG,SAAS,CACV9D,QAASoE,M,sCAKjB,SACyBjI,GACrB,IAAMiI,EAAc5G,KAAKiF,MAAMzC,QAAQ/I,KAAI,SAAA2N,GAAQ,OAAIzI,IAASyI,EAAW,CAAEpF,UAAWoF,EAASpF,WAAcoF,KAE/GpH,KAAKsG,SAAS,CACV9D,QAASoE,M,qEAIjB,2FAEUjD,EAAW,IAAIzD,IAASF,KAAKqH,UAAWnO,YAA0B8G,KAAKiF,MAAMpH,MAAOmC,KAAKiF,MAAMO,iBAEjG3M,cAJR,iCAK4B8K,EAASC,oBALrC,cAKcgE,EALd,gBAM2CA,EAAMC,cANjD,OAMcC,EANd,OAQmB,OAAXtD,QAAW,IAAXA,KAAauD,KAAK,gBAAiBD,EAAsBnE,EAASE,wBAR1E,wBAUQH,EAAiBC,GAVzB,iD,gFAcA,SACaX,GACT,IAAMgF,EAAgBhI,KAAK0E,cAAcuD,MAAK,SAAAd,GAAK,OAAIA,EAAMrC,WAAa9B,EAAMwD,OAAOpI,SAMvF,GAJA4B,KAAKsG,SAAS,CACVT,iBAAkB7C,EAAMwD,OAAOpI,QAG/B4J,EAAe,CACf,IAAME,EAAalI,KAAK0F,wBAAwB1C,EAAMwD,OAAOpI,OACvDmI,EAAgB2B,EAAWzO,KAAI,SAAA0E,GAAI,OAAIA,EAAK6D,aAAW7H,KAAK,IAElE6F,KAAKsG,SAAS,CACVd,eAAgBxC,EAAMwD,OAAOpI,MAC7BoE,QAAS0F,EACTtC,WAAYW,IACb,kBAAMvD,EAAMwD,OAAO2B,a,8BAI9B,SACiBnF,GACbA,EAAMwD,OAAOpI,MAAQ4B,KAAKiF,MAAMO,iB,oBAGpC,WAAU,IAAD,OACC4C,EAAsB,WACxB,IAAMnN,EAAU,EAAKyJ,cAChBgC,QAAO,SAAAS,GAAK,OAAIA,EAAMrC,SAAS9L,cAAcqP,SAAS,EAAKpD,MAAMY,iBAAiB7M,kBAClFsP,MAAM,EAAG,IACT7O,KAAI,SAAA0N,GAAK,OAAI,wBAAQ/I,MAAO+I,EAAMrC,SAArB,SAAsDqC,EAAMrC,UAAxBqC,EAAMrC,aAEtDyD,EAAgB,wBAAQnK,MAAM,cAAd,qBAChBoK,EAAa,aAEnB,OACI,sBAAK9P,UAAWiK,IAAO8F,eAAvB,UACI,cAACjQ,EAAA,EAAD,CACIG,KAAK,kBACLD,UAAS,UAAKiK,IAAO+F,aAAZ,YAA4B/F,IAAOgG,mBAC5C/P,MAAM,iEAGV,uBACIgQ,KAAMJ,EACN,aAAW,kCACXzF,SAAU,EAAK8F,aACfzK,MAAO,EAAK6G,MAAMY,iBAClBnN,UAAWiK,IAAOmG,aAClBC,OAAQ,EAAKC,mBAGjB,2BAAUC,GAAIT,EAAYpF,QAAS,kBAAM7E,QAAQ2K,IAAI,YAArD,UACKX,EACAtN,QA5BW,GAkC5B,OACI,sBAAKvC,UAAS,UAAKiK,IAAOa,UAAZ,YAAyB3K,cAAe8J,IAAOc,QAAU,IAAvE,UACI,gCACI,eAACK,EAAD,CAASC,KAAG,EAAZ,UACI,qBAAIrL,UAAWiK,IAAOwG,QAAtB,0CAA4D,cAAC,EAAD,CAAc/M,KAAK,iEAAiE1D,UAAWiK,IAAOxG,KAAtG,oBAA5D,cACA,mBAAGzD,UAAWiK,IAAOjJ,UAArB,yIACA,oBAAGhB,UAAWiK,IAAOjJ,UAArB,yGAC4F,IACxF,cAAC,EAAD,CAAc0C,KAAK,6CAA6C1D,UAAWiK,IAAOxG,KAAlF,oBACC,IAHL,KAGY,IACR,cAAC,EAAD,CAAcC,KAAK,8CAA8C1D,UAAWiK,IAAOxG,KAAnF,mBACC,IALL,iBASJ,gCACI,sBAAKzD,UAAWiK,IAAOyG,yBAAvB,UACI,wBAAO1Q,UAAS,UAAKiK,IAAO0G,MAAZ,YAAqB1G,IAAO2G,iBAA5C,uBAEI,cAAC9Q,EAAA,EAAD,CACIG,KAAK,kBACLD,UAAWiK,IAAO+F,aAClB9P,MAAO,iJAGdwP,KAEL,0BACI,aAAW,mBACX1P,UAAWiK,IAAO4G,mBAClBxG,SAAU,SAAAC,GAAK,OAAI,EAAKsD,SAAS,CAAEV,WAAY5C,EAAMwD,OAAOpI,SAC5D2K,OAAQ/I,KAAKwJ,mBACbpL,MAAO4B,KAAKiF,MAAMW,aAEtB,wBACIxC,QAASpD,KAAKyJ,+BACd/Q,UAAWiK,IAAO+G,gBAClBC,SAAU3J,KAAK4J,oBAHnB,kCASJ,sBAAKlR,UAAWiK,IAAOkH,WAAvB,UACI,sBAAKnR,UAAWiK,IAAOmH,iBAAvB,UACI,gCACI,uBAAOpR,UAAWiK,IAAO0G,MAAzB,oBACA,uBAAO3Q,UAAWiK,IAAOoH,YAAzB,kBACA,uBACI,aAAW,sBACXrR,UAAWiK,IAAOqH,YAClBlH,KAAK,SACLC,SAAU,SAAAC,GAAK,OAAI,EAAKiH,yBAAyBjH,EAAO,iBACxD5E,MAAO4B,KAAKiF,MAAMxC,eAEtB,cAACjK,EAAA,EAAD,CAAIG,KAAK,eAAeD,UAAWiK,IAAOO,QAC1C,uBACI,aAAW,uBACXxK,UAAWiK,IAAOqH,YAClBlH,KAAK,SACLC,SAAU,SAAAC,GAAK,OAAI,EAAKiH,yBAAyBjH,EAAO,kBACxD5E,MAAO4B,KAAKiF,MAAMvC,gBAEtB,cAAClK,EAAA,EAAD,CAAIG,KAAK,kBAAkBD,UAAWiK,IAAO+F,aAAc9P,MAAM,+CAGrE,gCACI,uBAAOF,UAAWiK,IAAOoH,YAAzB,kBACA,uBACI,aAAW,wBACXrR,UAAS,UAAKiK,IAAOqH,YAAZ,YAA2BhK,KAAKkK,cAAgB,GAAKvH,IAAOwH,mBACrErH,KAAK,SACLC,SAAU,SAAAC,GAAK,OAAI,EAAKiH,yBAAyBjH,EAAO,SACxD5E,MAAO4B,KAAKiF,MAAMpH,OAEtB,cAACrF,EAAA,EAAD,CACIG,KAAK,kBACLD,UAAWiK,IAAO+F,aAClB9P,MAAM,qIAId,wBACIwK,QAASpD,KAAK0D,iBACdhL,UAAWiK,IAAOyH,WAClBT,UAAW3J,KAAKqK,qBAAuBrK,KAAKkK,cAHhD,mBAKQrR,cAAe,OAAS,WALhC,kBASJ,sBAAKH,UAAWiK,IAAO2H,uBAAvB,UACI,wBAAO5R,UAAWiK,IAAO0G,MAAzB,0BAEI,cAAC7Q,EAAA,EAAD,CACIG,KAAK,kBACLD,UAAWiK,IAAO+F,aAClB9P,MAAM,2CAId,cAAC,EAAD,CACI4J,QAASxC,KAAKiF,MAAMzC,QACpBE,cAAe1C,KAAKiF,MAAMvC,cAC1BD,aAAczC,KAAKiF,MAAMxC,aACzBQ,sBAAuBjD,KAAKiD,sBAC5BI,yBAA0BrD,KAAKqD,oCAM/C,gCACI,oBAAI3K,UAAWiK,IAAOwG,QAAtB,wCACA,qBAAIzQ,UAAWiK,IAAO4H,gBAAtB,UACI,oBAAI7R,UAAWiK,IAAO6H,oBAAtB,2EACA,oBAAI9R,UAAWiK,IAAO6H,oBAAtB,iDACA,oBAAI9R,UAAWiK,IAAO6H,oBAAtB,gHACA,oBAAI9R,UAAWiK,IAAO6H,oBAAtB,uMACA,qBAAI9R,UAAWiK,IAAO6H,oBAAtB,kBACU,IACN,cAAC1G,EAAD,UAAS,cAAC,IAAD,CAAM2G,GAAG,SAAS/R,UAAWiK,IAAOxG,KAApC,sBACT,cAAC8H,EAAD,yCACC,IAJL,uDAQJ,eAACH,EAAD,CAASC,KAAG,EAAZ,UACI,oBAAIrL,UAAWiK,IAAOwG,QAAtB,4CACA,mBAAGzQ,UAAWiK,IAAOjJ,UAArB,2HACA,qBAAKhB,UAAWiK,IAAO+H,cAAvB,SAEI,wBAAQ9R,MAAM,yBAAyB+R,YAAY,IAAIC,IAAI,+BAA+BxQ,MAAM,MAAMG,OAAO,MAA7G,SAAmH,mBAAG6B,KAAK,sCAAR,wCAEvH,qBAAK1D,UAAWiK,IAAOkI,aAAvB,SAEI,wBAAQjS,MAAM,wBAAwB+R,YAAY,IAAIC,IAAI,+BAA+BxQ,MAAM,MAAMG,OAAO,MAA5G,SAAkH,mBAAG6B,KAAK,sCAAR,qD,GA7X1H0O,a,gDA0CfC,K,+HAkBAA,K,yIAqBAA,K,wIASAA,K,iIAOAA,K,gIAyBAA,K,oHAKAA,K,4HAQAA,K,sIAUAA,K,sIAiBAA,K,iIASAA,K,qHAcAA,K,qHAoBAA,K,gFAyLUtG,I,wBElZAuG,MAff,WACI,OACI,sBAAKtS,UAAWiK,IAAOa,UAAvB,UACI,eAAC,IAAD,CAASyH,OAAK,EAACR,GAAG,IAAI/R,UAAS,UAAKiK,IAAOuI,QAAZ,YAAuBvI,IAAOwI,aAAeC,gBAAiBzI,IAAO0I,cAApG,UACI,mBAAG3S,UAAWiK,IAAO2I,QAArB,oBACA,mBAAG5S,UAAWiK,IAAO4I,UAArB,kCAEJ,eAAC,IAAD,CAASd,GAAG,SAAS/R,UAAS,UAAKiK,IAAOuI,QAAZ,YAAuBvI,IAAO6I,cAAgBJ,gBAAiBzI,IAAO0I,cAApG,UACI,mBAAG3S,UAAWiK,IAAO2I,QAArB,oBACA,mBAAG5S,UAAWiK,IAAO4I,UAArB,uC,kCCQDE,MAhBf,WACI,OACI,yBAAQ/S,UAAWiK,IAAOa,UAA1B,UACI,oBAAI9K,UAAWiK,IAAOwG,QAAtB,SACI,qBAAKyB,IAAI,WAAWc,IAAI,WAAWnR,OAAO,KAAKH,MAAM,MAAM1B,UAAWiK,IAAOgJ,SAEjF,cAAC,EAAD,IACA,sBAAKjT,UAAWiK,IAAOiJ,sBAAvB,UACI,mBAAGlT,UAAWiK,IAAOkJ,kBAArB,gCACA,mBAAGnT,UAAWiK,IAAOmJ,kBAArB,2CAEJ,cAAC,IAAD,CAAcpT,UAAWiK,IAAOoJ,aAAc3P,KAAK,yCAAyChB,KAAK,MAAM4Q,YAAY,UAAUC,UAAU,gB,kBCiBpIC,OAjBf,SAAgBzT,GACZ,IAAM0T,EAAe1T,EAAM2T,YAAY3S,KAAI,SAAA4S,GAAM,OAC7C,cAAC,EAAD,CAAc3T,UAAWiK,KAAO2J,WAAYlQ,KAAMiQ,EAAOE,IAAsB,aAAYF,EAAOhD,MAAlG,SACI,cAAC7Q,EAAA,EAAD,CAAIG,KAAM0T,EAAO1T,KAAMD,UAAWiK,KAAOhK,QADsB0T,EAAOE,QAK9E,OACI,sBAAK7T,UAAWiK,KAAOa,UAAvB,UACI,oBAAI9K,UAAWiK,KAAOzG,KAAtB,SAA6BzD,EAAMyD,OACnC,qBAAKxD,UAAWiK,KAAO6J,gBAAvB,SACKL,QCaFM,OArCf,WACI,OACQ,qCACI,cAAC,GAAD,CACIvQ,KAAK,oBACLkQ,YAAa,CACT,CACIG,IAAK,2BACL5T,KAAM,qBACN0Q,MAAO,gBAEX,CACIkD,IAAK,mCACL5T,KAAM,iBACN0Q,MAAO,WAEX,CACIkD,IAAK,gCACL5T,KAAM,gBACN0Q,MAAO,aAInB,cAAC,GAAD,CACInN,KAAK,sBACLkQ,YAAa,CACT,CACIG,IAAK,2BACL5T,KAAM,gBACN0Q,MAAO,iB,oBCVpBqD,OAhBf,WACI,OACI,yBAAQhU,UAAWiK,KAAOa,UAA1B,UACI,cAAC,IAAD,CAAMiH,GAAG,UAAU/R,UAAS,UAAKiK,KAAOgK,OAAZ,YAAsBhK,KAAOxG,MAAzD,4BACA,qBAAKzD,UAAWiK,KAAOiK,QAAvB,SACI,cAAC,GAAD,MAGJ,sBAAKlU,UAAWiK,KAAOkK,cAAvB,UACI,cAAC,EAAD,CAAczQ,KAAK,gDAAgD1D,UAAWiK,KAAOxG,KAArF,0BACA,cAAC,EAAD,CAAcC,KAAK,gDAAgD1D,UAAWiK,KAAOxG,KAArF,4C,oBCiCD2Q,I,MAAAA,GA7Cf,WACI,OACI,sBAAKpU,UAAWiK,KAAOoK,gBAAvB,UACI,yDACA,4PAMA,2DACA,iJAGI,+BACI,8FACA,oFAER,0JAKA,2CACA,6IAIA,gSAMA,mDACA,8FAKA,cAAC,IAAD,CAAMtC,GAAG,IAAI/R,UAAWiK,KAAOqK,SAA/B,kC,wCCyBGC,I,qDA1DX,WAAYxU,GAAY,IAAD,8BACnB,cAAMA,IACDwM,MAAQ,CACTiI,cAAc,GAHC,E,qDAOvB,WACIlN,KAAKsG,SAAS,CACV4G,aAAsD,SAAxCC,KAAQ7N,IAAI,yBAC3BU,KAAKoN,mB,wBAGZ,WAEID,KAAQlN,IAAI,uBAAwB,OAAQ,CAAEoN,QAAS,MAEvDrN,KAAKsG,SAAS,CACV4G,cAAc,GACflN,KAAKoN,mB,6BAGZ,WAEI,IAAME,EAAkBtN,KAAKiF,MAAMiI,aAAe,UAAY,SAE9D/I,OAAOoJ,KAAK,UAAW,SAAU,CAC7BC,kBAAmBF,M,oBAI3B,WACI,OAAKtN,KAAKiF,MAAMiI,aAqBL,KAnBH,sBAAKxU,UAAWiK,KAAOa,UAAvB,UACI,oBAAI9K,UAAWiK,KAAOwG,QAAtB,4BACA,sBAAKzQ,UAAWiK,KAAO8K,QAAvB,UACI,qBAAK/U,UAAWiK,KAAOiF,MAAOgD,IAAI,aAAac,IAAI,SAASnR,OAAO,MAAMH,MAAM,QAC/E,sBAAK1B,UAAWiK,KAAO+K,QAAvB,UACI,qBAAIhV,UAAWiK,KAAOiG,KAAtB,UACI,oBAAIlQ,UAAWiK,KAAOgL,SAAtB,mCACA,oBAAIjV,UAAWiK,KAAOgL,SAAtB,8BAGJ,sBAAKjV,UAAWiK,KAAOkK,cAAvB,UACI,cAAC,IAAD,CAAMpC,GAAG,UAAU/R,UAAWiK,KAAOxG,KAArC,wBACA,wBAAQiH,QAASpD,KAAK4N,WAAYlV,UAAWiK,KAAOxG,KAApD,oC,GA/CL2O,a,uCActBC,K,qHASAA,K,sGCYU8C,G,kDAlCX,WAAYpV,GAAY,IAAD,8BACnB,cAAMA,IAHFqV,WAEe,EAEnB,EAAK7I,MAAQ,CACT8I,YAAY,GAHG,E,qDAOvB,WAAqB,IAAD,OAChB/N,KAAK8N,MAAQE,YAAW,WACpB,EAAK1H,SAAS,CACVyH,YAAY,MAEjB,O,kCAGP,WACQ/N,KAAK8N,OACLG,aAAajO,KAAK8N,S,oBAI1B,WACI,OAAK9N,KAAKiF,MAAM8I,WAIR,qBAAKrV,UAAWiK,KAAOa,UAAvB,SACI,cAAChL,EAAA,EAAD,CAAIG,KAAK,qBAAqBD,UAAWiK,KAAOhK,SAJjD,S,GA1BEmS,aCJftG,GAAgBL,OAAOC,QAAUD,OAAOC,QAAQ,YAAYI,YAAc,KAMnE0J,IAAb,qDAEI,WAAYzV,GAAY,IAAD,8BACnB,cAAMA,IAEDwM,MAAQ,CACTsH,IAAK,KAJU,EAF3B,qDAUI,WACe,OAAX/H,SAAW,IAAXA,OAAayB,GAAG,aAAcjG,KAAKmO,sBAX3C,kCAcI,WACe,OAAX3J,SAAW,IAAXA,OAAa2B,eAAe,aAAcnG,KAAKmO,sBAfvD,gCAkBI,SACmB/H,EAAagI,GAC5BpO,KAAKsG,SAAS,CAAEiG,IAAK6B,MApB7B,oBAuBI,WACI,OAAO,cAAC,IAAD,CAAU3D,GAAIzK,KAAKiF,MAAMsH,UAxBxC,GAAmCzB,aAAnC,+CAkBKC,KAlBL,qFCRO,SAASsD,GAAgBC,EAAkBC,GAC9C,MAAiCD,EAAS9U,MAAM,KAAKC,KAAI,SAAA+U,GAAC,OAAI7Q,OAAO+J,SAAS8G,MAA9E,mBAAOC,EAAP,KAAeC,EAAf,KAAuBC,EAAvB,KACA,EAAiCJ,EAAS/U,MAAM,KAAKC,KAAI,SAAA+U,GAAC,OAAI7Q,OAAO+J,SAAS8G,MAA9E,mBAAOI,EAAP,KAAeC,EAAf,KAAuBC,EAAvB,KAEMC,EAAYC,GAAQP,EAAQG,GAElC,GAAkB,UAAdG,EACA,OAAOA,EAGX,IAAME,EAAYD,GAAQN,EAAQG,GAElC,MAAkB,UAAdI,EACOA,EAGJD,GAAQL,EAAQG,GAG3B,SAASE,GAAQnS,EAAWgI,GACxB,OAAIhI,EAAIgI,EACG,UAGPhI,EAAIgI,EACG,SAGJ,QCnBX,SAASqK,GAAuBC,GAC5B,OAAOC,MAAM,gFAAD,OAAiFD,IACxFE,MAAK,SAAAC,GAAQ,OAAIA,EAASpS,UAC1BmS,MAAK,SAAAE,GACF,GAAIA,EAAKC,OACL,MAAM,IAAI3U,MAAJ,mDAAsD0U,EAAKC,OAAOrV,KAAK,MAAvE,MAGV,OAAOoV,KAInB,SAASE,GAA0BhS,GAC/B,IAAMiS,EAA4C,YAAtCrB,GAAgB5Q,EAAS,SAAzB,WACFA,GADE,YAEDA,GAEX,OAAO2R,MAAM,kEAAD,OAAmEM,IAC1EL,MAAK,SAAAC,GAAQ,OAAIA,EAASpS,UAK5B,SAAeyS,GAAtB,qC,8CAAO,WAAiCC,EAAwBC,GAAzD,iBAAAhT,EAAA,+EAE2BqS,GAAuBW,GAFlD,UAEOC,EAFP,OAI6D,WAAxDzB,GAAgBuB,EAAgBE,EAAYC,QAJjD,yCAKY,CAAEjN,KAAM,eALpB,uBAQ6B2M,GAA0BK,EAAYC,QARnE,cAQOC,EARP,yBAUQ,CACHlN,KAAM,gBACN5G,KAAM8T,EAAc9T,KACpB+T,KAAMD,EAAcC,KACpBxS,QAASqS,EAAYC,SAd1B,yCAiBCxR,QAAQ2R,MAAR,iDAjBD,kBAkBQ,CAAEpN,KAAM,eAlBhB,2D,8CCPQqN,I,MAAAA,GAlBf,SAAe1X,GACX,OACI,sBAAKC,UAAWiK,KAAOa,UAAvB,UACI,mBAAG9K,UAAWiK,KAAO/J,MAArB,SACKH,EAAMG,QAGX,wBAAQF,UAAWiK,KAAOyN,YAAahN,QAAS3K,EAAM4X,aAAtD,SACQ,cAAC7X,EAAA,EAAD,CAAIG,KAAK,eAAeD,UAAWiK,KAAOO,UAGlD,8BACKzK,EAAMuL,e,oBCdjBQ,GAAgBL,OAAOC,QAAUD,OAAOC,QAAQ,YAAYI,YAAc,KAYnE8L,IAAb,qDAEI,WAAY7X,GAAsB,IAAD,8BAC7B,cAAMA,IAEDwM,MAAQ,GAHgB,EAFrC,qDAQI,WACe,OAAXT,SAAW,IAAXA,OAAayB,GAAG,UAAWjG,KAAKuQ,iBACrB,OAAX/L,SAAW,IAAXA,OAAauD,KAAK,qBAV1B,kCAaI,WACe,OAAXvD,SAAW,IAAXA,OAAa2B,eAAe,UAAWnG,KAAKuQ,mBAdpD,oEAiBI,WACsBnK,EAAamJ,GADnC,4EAEQiB,EAAU,KAEQ,UAAlBjB,EAAKkB,WACLD,EAAU,SAGQ,UAAlBjB,EAAKkB,WACLD,EAAU,WAGVA,EAZR,gCAaiCb,GAAkBJ,EAAK9R,QAAS+S,GAbjE,OAegC,mBAFlBE,EAbd,QAeuB5N,MACX9C,KAAKsG,SAAS,CACVqK,eAAgBD,EAAWxU,KAC3B0U,sBAAuBF,EAAWT,KAClCY,gBAAiBH,EAAWjT,QAC5BmS,eAAgBL,EAAK9R,UApBrC,gDAjBJ,4EA2CI,WAEIuC,KAAKsG,SAAS,CACVqK,oBAAgBG,MA9C5B,oBAkDI,WACI,GAAI9Q,KAAKiF,MAAM0L,eAAgB,CAAC,IAAD,EACrBI,EAAW,UAAG/Q,KAAKiF,MAAM2L,6BAAd,aAAG,EAAkCpX,MAAM,MACvDC,KAAI,SAACuX,EAAMhQ,GAAP,OAAkB,mBAAetI,UAAWiK,KAAOsO,qBAAjC,SAAwDD,GAAhDhQ,MAEnC,OACI,cAAC,GAAD,CAAOpI,MAAM,wBAAwByX,aAAcrQ,KAAKkR,MAAxD,SACI,sBAAKxY,UAAWiK,KAAOa,UAAvB,UACI,sBAAK9K,UAAWiK,KAAO8K,QAAvB,oBACI,uBAAM/U,UAAWiK,KAAOwO,YAAxB,cAAuCnR,KAAKiF,MAAM4L,gBAAlD,OADJ,4BAE6B,sBAAMnY,UAAWiK,KAAOwO,YAAxB,SAAsCnR,KAAKiF,MAAM2K,iBAF9E,OAIA,sBAAKlX,UAAWiK,KAAO8K,QAAvB,kBAEI,uBAAM/U,UAAWiK,KAAOwO,YAAxB,cAAuCnR,KAAKiF,MAAM0L,qBAEtD,cAAC,EAAD,CAAcjY,UAAWiK,KAAOxG,KAAMC,KAAK,sCAA3C,mCACA,qBAAK1D,UAAWiK,KAAO8K,QAAvB,wBACA,8BAAMsD,SAMtB,OAAO,SA1Ef,GAA6BjG,aAA7B,4CAiBKC,KAjBL,gHA2CKA,KA3CL,wE,oBCXMvG,GAAgBL,OAAOC,QAAUD,OAAOC,QAAQ,YAAYI,YAAc,KAgEjE4M,I,qDAxDX,WAAY3Y,GAAY,IAAD,8BACnB,cAAMA,IACDwM,MAAQ,CACToM,QAAQ,EACR5T,QAAS,IAJM,E,qDAQvB,WAAqB,IAAD,OACL,OAAX+G,SAAW,IAAXA,OAAayB,GAAG,eAAe,SAACjD,EAAOvF,GACnC,EAAK6I,SAAS,CACV+K,QAAQ,EACR5T,QAASA,S,kCAKrB,WACe,OAAX+G,SAAW,IAAXA,OAAa2B,eAAe,eAAe,iB,yBAG/C,WAEInG,KAAKsG,SAAS,CACV+K,QAAQ,M,oBAIhB,WACI,OAAIrR,KAAKiF,MAAMoM,OAEP,cAAC,GAAD,CAAOzY,MAAM,QAAQyX,aAAcrQ,KAAKsR,YAAxC,SACI,sBAAK5Y,UAAWiK,KAAOa,UAAvB,UACI,sBAAK9K,UAAWiK,KAAO4O,WAAvB,UACI,mBAAG7Y,UAAWiK,KAAOjJ,UAArB,yIACA,oBAAGhB,UAAWiK,KAAOjJ,UAArB,yGAC4F,IACxF,cAAC,EAAD,CAAc0C,KAAK,6CAA6C1D,UAAWiK,KAAOxG,KAAlF,oBACC,IAHL,KAGY,IACR,cAAC,EAAD,CAAcC,KAAK,8CAA8C1D,UAAWiK,KAAOxG,KAAnF,mBACC,IALL,iBAQJ,sBAAKzD,UAAWiK,KAAOlF,QAAvB,sBAA0CuC,KAAKiF,MAAMxH,WACrD,qBAAK/E,UAAWiK,KAAO6O,iBAAvB,SACI,cAAC,GAAD,WAMT,S,GApDM1G,a,wCAsBpBC,K,8ECvBC0G,GAAQC,IAAMC,MAAK,kBAAM,gCAyChBC,OAvCf,WACI,OACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,UAAZ,SACI,cAAC,GAAD,MAGJ,eAAC,IAAD,WACI,cAAC/N,EAAD,UACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAOmH,OAAK,EAAC4G,KAAK,IAAlB,SACI,cAAC,EAAD,MAGJ,cAAC,IAAD,CAAO5G,OAAK,EAAC4G,KAAK,SAAlB,SACI,cAAC,WAAD,CAAUC,SAAU,cAAC,GAAD,IAApB,SACI,cAACL,GAAD,QAIR,eAAC3N,EAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,OAGJ,eAACG,EAAD,WACI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,gBCjCT8N,GAZS,SAACC,GACnBA,GAAeA,aAAuBzS,UACxC,6BAAqB8P,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCHdM,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJ9X,SAAS+X,eAAe,SAM5BV,O","file":"static/js/main.e1b65707.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"step1_container__2R46B\",\"desktop\":\"step1_desktop___07r7\",\"parameters\":\"step1_parameters__2fhbG\",\"commonParameters\":\"step1_commonParameters__12krB\",\"perCharacterParameters\":\"step1_perCharacterParameters__187q6\",\"charactersLabelContainer\":\"step1_charactersLabelContainer__2_zeq\",\"charactersResetButton\":\"step1_charactersResetButton__1rVxQ\",\"charactersTextArea\":\"step1_charactersTextArea__1129O\",\"instructionList\":\"step1_instructionList__1yq3Z\",\"instructionListItem\":\"step1_instructionListItem__3ndrZ\",\"label\":\"step1_label__dvXqU\",\"charactersLabel\":\"step1_charactersLabel__8FH79\",\"commonLabel\":\"step1_commonLabel__1XEMl\",\"commonInput\":\"step1_commonInput__2xGXE\",\"commonInputIvalid\":\"step1_commonInputIvalid__1M86R\",\"heading\":\"step1_heading__3AIsF\",\"paragraph\":\"step1_paragraph__26hYp\",\"formButton\":\"step1_formButton__4K7wD\",\"smallFormButton\":\"step1_smallFormButton__1ISq8\",\"times\":\"step1_times__2BpAi\",\"questionMark\":\"step1_questionMark__1F_q0\",\"inputQuestionMark\":\"step1_inputQuestionMark__3myVX\",\"commonContainer\":\"step1_commonContainer__3oXIY\",\"link\":\"step1_link__1D4An\",\"presetSelect\":\"step1_presetSelect__1bvRj\",\"inputContainer\":\"step1_inputContainer__22h8D\",\"desktopWidget\":\"step1_desktopWidget__2bAE1\",\"mobileWidget\":\"step1_mobileWidget__3Pp_A\"};","import React from 'react'\n\ninterface FaProps {\n    className?: string\n    icon: string\n    title? : string\n}\n\nfunction Fa(props: FaProps) {\n    const className: string = props.className ?? ''\n\n    return (\n        <i className={`${props.icon} ${className}`} title={props.title}></i>\n    )\n}\n\nexport default Fa\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"step1CharacterList_container__2suRc\",\"desktop\":\"step1CharacterList_desktop__1pQ2g\",\"character\":\"step1CharacterList_character__3-MFM\",\"input\":\"step1CharacterList_input__1t3rR\",\"inputInvalid\":\"step1CharacterList_inputInvalid__3-Gel\",\"times\":\"step1CharacterList_times__37cyf\",\"undoButton\":\"step1CharacterList_undoButton__2AK0J\",\"characterContainer\":\"step1CharacterList_characterContainer__2Rpww\",\"button\":\"step1CharacterList_button__1WKc4\",\"buttonContainer\":\"step1CharacterList_buttonContainer__1qLZa\"};","export function isElectron() {\n    const userAgent = navigator.userAgent.toLowerCase()\n\n    return userAgent.indexOf(' electron/') > -1\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"navbar_container__2mYrz\",\"linkBig\":\"navbar_linkBig__1CiWe\",\"linkSmall\":\"navbar_linkSmall__3U_dr\",\"navLink\":\"navbar_navLink__lYMlZ\",\"navLinkLeft\":\"navbar_navLinkLeft__2tD8-\",\"navLinkRight\":\"navbar_navLinkRight__1FQnp\",\"navLinkActive\":\"navbar_navLinkActive__1z4La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cookieNotice_container__2ekSC\",\"heading\":\"cookieNotice_heading__vUvKO\",\"image\":\"cookieNotice_image__2wJ3y\",\"content\":\"cookieNotice_content__3HqBN\",\"list\":\"cookieNotice_list__1hg4D\",\"listItem\":\"cookieNotice_listItem__3GkmT\",\"link\":\"cookieNotice_link__38Uhh\",\"details\":\"cookieNotice_details__1BKmu\",\"linkContainer\":\"cookieNotice_linkContainer__18P_C\"};","export type NumInputValue = number | ''\n\nexport function standardizeNumericalInput(input: NumInputValue) : number {\n    return input === '' ? 0 : input\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"updater_container__3h_sW\",\"content\":\"updater_content__1iY35\",\"contentBold\":\"updater_contentBold__rjAct\",\"link\":\"updater_link__2x13t\",\"descriptionParagraph\":\"updater_descriptionParagraph__LHRKO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"aboutPopup_container__q80Qs\",\"authorsContainer\":\"aboutPopup_authorsContainer__3z2Ll\",\"link\":\"aboutPopup_link__THdwT\",\"version\":\"aboutPopup_version__3fVGa\",\"disclaimer\":\"aboutPopup_disclaimer__3bvNg\",\"paragraph\":\"aboutPopup_paragraph__3huAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__3iV9Y\",\"sourceNoticeContainer\":\"header_sourceNoticeContainer__3debw\",\"sourceNoticeLine1\":\"header_sourceNoticeLine1__2dpGN\",\"sourceNoticeLine2\":\"header_sourceNoticeLine2__1SD3C\",\"logo\":\"header_logo__1NKnM\",\"heading\":\"header_heading__3P59A\",\"githubCorner\":\"header_githubCorner__i9m_i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__2qBcC\",\"policy\":\"footer_policy__w7rxg\",\"link\":\"footer_link__gQPPx\",\"authors\":\"footer_authors__1Pupk\",\"linkContainer\":\"footer_linkContainer__3kxeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"author_container__Qvl5M\",\"socialLink\":\"author_socialLink__1xWOs\",\"name\":\"author_name__uFPT4\",\"socialContainer\":\"author_socialContainer__3Ftd3\",\"icon\":\"author_icon__1sPpI\"};","function wrapText(ctx: CanvasRenderingContext2D, text: string, maxWidth: number): string[] {\n    return text\n        .split('\\n')\n        .map(paragraph => paragraph.split(' '))\n        .flatMap(words => {\n            const lines: string[][] = [[]]\n\n            words.forEach(word => {\n                const currentLine = lines[lines.length-1]\n                const width = ctx.measureText(`${currentLine.join(' ')} ${word}`).width\n\n                if (width < maxWidth) {\n                    currentLine.push(word)\n                } else {\n                    lines.push([word])\n                }\n            })\n\n            return lines.map(words => words.join(' '))\n        })\n}\n\nexport function createCanvas(width: number, height: number, color?: string): [HTMLCanvasElement, CanvasRenderingContext2D] {\n    const canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n\n    const ctx = canvas.getContext('2d')\n\n    if (!ctx) {\n        throw new Error('Your browser doesn\\'t support 2d canvas context. Use a modern browser, please.')\n    }\n\n    if (color) {\n        ctx.fillStyle = color\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n    }\n\n    return [canvas, ctx]\n}\n\ntype DrawWrappedTextOptions = {\n    x: number,\n    y: number,\n    size: number,\n    maxWidth: number,\n    maxHeight?: number\n}\n\nexport function drawWrappedText(ctx: CanvasRenderingContext2D, text: string, options: DrawWrappedTextOptions): void {\n    const { x, y, size, maxWidth, maxHeight } = options\n    let trySize = size\n\n    ctx.font = `${trySize}px serif`\n    let lines = wrapText(ctx, text, maxWidth)\n\n    if (maxHeight) {\n        while (lines.length * trySize >= maxHeight) {\n            trySize --\n\n            ctx.font = `${trySize}px serif`\n            lines = wrapText(ctx, text, maxWidth)\n        }\n    }\n\n    lines.forEach((line, i) => ctx.fillText(line, x, y + i * trySize, maxWidth))\n}\n\nexport function convertToBlob(canvas: HTMLCanvasElement): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n        canvas.toBlob(blob => !!blob ? resolve(blob) : reject())\n    })\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"popup_container__3Xpyi\",\"title\":\"popup_title__HV9m6\",\"closeButton\":\"popup_closeButton__1N_N-\",\"times\":\"popup_times__3iVWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"policyContainer\":\"policy_policyContainer__2V2gt\",\"menuLink\":\"policy_menuLink__2gWKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loader_container__uCYfU\",\"icon\":\"loader_icon__1ZW5k\"};","import { downloadZip } from 'client-zip'\n\nfunction downloadBlob(name: string, blob: Blob): void {\n    const link = document.createElement('a')\n    link.href = URL.createObjectURL(blob)\n    link.download = name\n    link.click()\n\n    URL.revokeObjectURL(link.href)\n    link.remove()\n}\n\nexport interface ZippedFile {\n    name: string\n    input: string | Blob\n}\n\nexport async function downloadArchive(name: string, files: ZippedFile[]): Promise<void> {\n    const archive = downloadZip(files)\n    const blob = await archive.blob()\n\n    downloadBlob(`${name}.zip`, blob)\n}\n","import { CodePayload } from './types'\n\nexport function parseTemplateCode(code: string): CodePayload | null {\n    try {\n        const json = decodeURIComponent(escape(atob(code)))\n        const codePayload: CodePayload = JSON.parse(json)\n\n        switch (codePayload.version) {\n            case 0:\n                codePayload.presetName = 'custom'\n                break\n            case 1:\n                break\n            default:\n                throw new Error(`Only templates version '0' and '1' are supported, instead got version '${codePayload.version}'`)\n        }\n\n        if (typeof codePayload.presetName !== 'string') {\n            throw new Error(`Property 'presetName' must be a string, instead got: ${typeof codePayload.presetName} '${codePayload.presetName}'`)\n        }\n\n        if (!Number.isInteger(codePayload.base)) {\n            throw new Error(`Property 'base' must be an integer, instead got: ${typeof codePayload.base} '${codePayload.base}'`)\n        }\n\n        if (!Array.isArray(codePayload.slots)) {\n            throw new Error(`Property 'slots' must be an array, instead got: ${codePayload.slots} '${codePayload.slots}'`)\n        }\n\n        const incorrectSlot = codePayload.slots.find(slot => !Array.isArray(slot) || slot.length !== 3 || slot.find(value => !Number.isInteger(value)))\n        if (incorrectSlot) {\n            throw new Error(`Each slot must be a three element array (integers only). Instead found: ${JSON.stringify(incorrectSlot)}`)\n        }\n\n        return codePayload\n    } catch (e: any) {\n        console.warn(`Invalid template code provided: ${e.message}`)\n        return null\n    }\n}\n","export function charToUnicode(char: string): number {\n    return char.charCodeAt(0)\n}\n\nexport function unicodeToChar(unicode: number): string {\n    return String.fromCharCode(unicode)\n}\n","export function memoize(_target: Object, _propertyKey: string, descriptor: PropertyDescriptor): void {\n    const targetFunction = descriptor.value ?? descriptor.get\n\n    if (!targetFunction || !(targetFunction instanceof Function)) {\n        throw Error('Memoize only supports non-setter functions.')\n    }\n\n    const descriptorProp = !!descriptor.value ? 'value' : 'get'\n    const cache = new Map<String, any>();\n\n    descriptor[descriptorProp] = function (...args: any[]) {\n        const key = JSON.stringify(args)\n        const cachedResult = cache.get(key)\n        const result = !!cachedResult ? cachedResult : targetFunction.apply(this, args)\n\n        cache.set(key, result)\n\n        return result\n    }\n}\n","import { convertToBlob, createCanvas } from '../../utils/canvasHelpers'\nimport { CodePayload, Slot } from './types'\nimport { drawInfo, drawSlot } from './slotDrawing'\nimport { memoize } from '../../utils/decorators'\n\nexport default class Template {\n    private readonly canvas: HTMLCanvasElement\n    private readonly ctx: CanvasRenderingContext2D\n\n    constructor(private readonly slots: Slot[], private readonly base: number, private readonly presetName: string) {\n        [this.canvas, this.ctx] = createCanvas(this.w * this.slotDim.w, this.h * this.slotDim.h, 'white')\n    }\n\n    @memoize\n    private get w(): number {\n        return Math.ceil(Math.sqrt(this.slots.length + 1))\n    }\n\n    @memoize\n    private get h(): number {\n        return Math.ceil(Math.sqrt(this.slots.length + 1))\n    }\n\n    @memoize\n    public get slotDim(): { w: number, h: number, hMargin: number } {\n        const maxW = Math.max.apply(null, this.slots.map(slot => slot.width))\n        const maxH = Math.max.apply(null, this.slots.map(slot => slot.height))\n\n        const slotW = Math.round(maxW * 1.3)\n        const slotH = Math.round(maxH * 1.3)\n        const vertMargin = Math.ceil((slotH - maxH) / 2)\n\n        return { w: slotW, h: slotH, hMargin: vertMargin }\n    }\n\n    public getSlotPosition(index: number): { x: number, y: number } {\n        return {\n            x: (index % this.w) * this.slotDim.w,\n            y: Math.floor(index / this.w) * this.slotDim.h\n        }\n    }\n\n    @memoize\n    public generateImageBlob(): Promise<Blob> {\n        drawInfo(this.ctx, 0, 0, this.slotDim.w, this.slotDim.h)\n    \n        this.slots.forEach((slot, index) => {\n            const { x, y } = this.getSlotPosition(index + 1)\n\n            drawSlot(this.ctx, slot, {\n                x,\n                y,\n                w: this.slotDim.w,\n                h: this.slotDim.h,\n                base: this.base,\n                vertMargin: this.slotDim.hMargin\n            })\n        })\n\n        return convertToBlob(this.canvas)\n    }\n    \n    @memoize\n    public generateTemplateCode(): string {\n        const payload: CodePayload = {\n            version: 1,\n            slots: this.slots.map(slot => ([slot.character.charCodeAt(0), slot.width, slot.height])),\n            base: this.base,\n            presetName: this.presetName\n        }\n\n        return btoa(unescape(encodeURIComponent(JSON.stringify(payload))))\n    }\n}\n","import { drawWrappedText } from '../../utils/canvasHelpers'\nimport { Slot } from './types'\n\ntype DrawSlotOptions = {\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    base: number,\n    vertMargin: number\n}\n\nexport function drawSlot(ctx: CanvasRenderingContext2D, slot: Slot, options: DrawSlotOptions): void {\n    const { x, y, w, h, base, vertMargin } = options\n\n    ctx.translate(0.5, 0.5)\n\n    ctx.strokeStyle = 'black'\n    ctx.strokeRect(x, y, w, h)\n\n    const charRectX = x + w / 2 - slot.width / 2\n    const charRectY = y + h / 2 - slot.height / 2\n\n    ctx.strokeStyle = 'green'\n    ctx.beginPath()\n    ctx.moveTo(x, charRectY + base)\n    ctx.lineTo(x + w, charRectY + base)\n    ctx.stroke()\n\n    ctx.strokeStyle = 'red'\n    ctx.clearRect(charRectX, charRectY, slot.width, slot.height)\n    ctx.strokeRect(charRectX, charRectY, slot.width, slot.height)\n\n    ctx.translate(-0.5, -0.5)\n\n    const fontSize = vertMargin * 0.8\n\n    if (fontSize >= 6) {\n        ctx.fillStyle = 'black'\n        ctx.font = `${fontSize}px serif`\n        ctx.textAlign = 'center'\n        ctx.fillText(slot.character, x + w / 2, y + h - vertMargin / 4, w)\n    }\n}\n\nexport function drawInfo(ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number): void {\n    const info = `1) Draw characters inside the red boundaries*.\n\n2) Upload this file back to Calligro\n\n3) Paste the template code and you got yourself a font\n\n*Green lines signify the letter base.`\n\n    ctx.fillStyle = 'black'\n    ctx.textAlign = 'left'\n    drawWrappedText(ctx, info, {\n        x: x + w * 0.05,\n        y: y + h * 0.1,\n        maxWidth: w * 0.9,\n        maxHeight: h * 0.8,\n        size: h / 5\n    })\n}\n","import React from 'react'\nimport { WorkSlot } from '../../../generation/template/types'\nimport Fa from '../../misc/fa/Fa'\nimport styles from './step1CharacterList.module.scss'\nimport { NumInputValue, standardizeNumericalInput } from '../../../utils/input'\nimport { isElectron } from '../../../electron/electronInterop'\n\ninterface Step1CharacterListProps {\n    charSet: WorkSlot[]\n    handleDimensionChange: (event: React.ChangeEvent<HTMLInputElement>, dimension: 'width' | 'height', char: WorkSlot) => void\n    resetCharacterDimensions: (char: WorkSlot) => void\n    defaultWidth: NumInputValue\n    defaultHeight: NumInputValue\n}\n\nfunction Step1CharacterList (props: Step1CharacterListProps) {\n    const charList = props.charSet.map(char => {\n        const width = char.width ?? props.defaultWidth\n        const height = char.height ?? props.defaultHeight\n\n        return (\n            <div key={char.character} className={styles.characterContainer}>\n                <p className={styles.character}>{char.character}</p>\n                <input\n                    aria-label={`${char.character} width input`}\n                    className={`${styles.input} ${standardizeNumericalInput(width) <= 0 ? styles.inputInvalid : ''}`}\n                    type='number'\n                    value={width}\n                    onChange={(event) => props.handleDimensionChange(event, 'width', char)}\n                />\n                <Fa icon='fas fa-times' className={styles.times} />\n                <input\n                    aria-label={`${char.character} height input`}\n                    className={`${styles.input} ${standardizeNumericalInput(height) <= 0 ? styles.inputInvalid : ''}`}\n                    type='number'\n                    value={height}\n                    onChange={(event) => props.handleDimensionChange(event, 'height', char)}\n                />\n\n                {\n                    (!!char.height || !!char.width) || (standardizeNumericalInput(width) <= 0 || standardizeNumericalInput(height) <= 0)\n                    ? <span className={styles.buttonContainer}>\n                        <button onClick={() => props.resetCharacterDimensions(char)} className={styles.button}>\n                            <Fa icon='fas fa-undo' className={styles.undoButton} />\n                        </button>\n                    </span >\n                    : null\n                }\n            </div>\n        )\n    })\n\n    return (\n        <div className={`${styles.container} ${isElectron() ? styles.desktop : ''}`}>\n            {charList}\n        </div>\n    )\n}\n\nexport default Step1CharacterList\n","import { downloadArchive, ZippedFile } from '../fs/zip'\nimport Template from './Template'\n\nexport async function downloadTemplate(template: Template): Promise<void> {\n    const files: ZippedFile[] = [\n        {\n            name: 'template.png',\n            input: await template.generateImageBlob()\n        },\n        {\n            name: 'template code.txt',\n            input: template.generateTemplateCode()\n        }\n    ]\n\n    return downloadArchive('calligro-template', files)\n}\n","import React from 'react'\nimport { isElectron } from '../../electron/electronInterop'\n\ninterface WebOnlyProps {\n    div?: Boolean\n    children: React.ReactNode\n}\n\nexport function WebOnly(props: WebOnlyProps) {\n    return isElectron()\n        ? null\n        : props.div\n            ? <div>{props.children}</div>\n            : <>{props.children}</>\n}\n","import React from 'react'\nimport { isElectron } from '../../electron/electronInterop'\n\ninterface DesktopOnlyProps {\n    div?: Boolean\n    children: React.ReactNode\n}\n\nexport function DesktopOnly(props: DesktopOnlyProps) {\n    return isElectron()\n        ? props.div\n            ? <div>{props.children}</div>\n            : <>{props.children}</>\n        : null\n}\n","import React, { HTMLProps } from 'react'\nimport { isElectron } from '../../../electron/electronInterop'\n\nconst shell = !!window.require ? window.require('electron').shell : null\n\ninterface ExternalLinkProps extends HTMLProps<HTMLAnchorElement> {\n}\n\nfunction ExternalLink(props: ExternalLinkProps) {\n    if (isElectron()) {\n        const handleClick = (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n            if (props.href) {\n                event.preventDefault()\n                shell?.openExternal(props.href)\n            }\n        }\n\n        return <a {...props} onClick={handleClick}>{props.children}</a>\n    }\n\n    return <a {...props}>{props.children}</a>\n}\n\nexport default ExternalLink\n","import React, { Component } from 'react'\nimport { bind } from 'helpful-decorators'\nimport Step1CharacterList from '../step1CharacterList/Step1CharacterList'\nimport { WorkSlot, Slot } from '../../../generation/template/types'\nimport Template from '../../../generation/template/Template'\nimport { downloadTemplate } from '../../../generation/template/download'\nimport styles from './step1.module.scss'\nimport Fa from '../../misc//fa/Fa'\nimport { Link } from 'react-router-dom'\nimport { NumInputValue, standardizeNumericalInput } from '../../../utils/input'\nimport { WebOnly } from '../../envSpecific/WebOnly'\nimport { isElectron } from '../../../electron/electronInterop'\nimport { getUnicodeRanges, UnicodeRange } from '../../../utils/unicodeRanges'\nimport { parseTemplateCode } from '../../../generation/template/parse'\nimport { unicodeToChar } from '../../../utils/char'\nimport { DesktopOnly } from '../../envSpecific/DesktopOnly'\nimport ExternalLink from '../../misc/externalLink/ExternalLink'\n\nconst ipcRenderer = !!window.require ? window.require('electron').ipcRenderer : null\n\n\ninterface Step1State {\n    charSet: WorkSlot[]\n    defaultWidth: NumInputValue\n    defaultHeight: NumInputValue\n    base: NumInputValue\n    selectedPreset: string\n    presetInputValue: string\n    charString: string\n}\n\nclass Step1 extends Component<{}, Step1State> {\n    private unicodeRanges: UnicodeRange[]\n    \n    constructor(props: {}) {\n        super(props)\n\n        this.unicodeRanges = getUnicodeRanges()\n        this.state = this.setInitialState()\n    }\n\n    setInitialState(): Step1State {\n        const storedData = window.localStorage.getItem('settings')\n        const parsedData: Step1State = storedData ? JSON.parse(storedData) : null\n        const initialPreset = parsedData?.selectedPreset ?? 'Basic Latin'\n        const initialCharSet = parsedData?.charSet ?? this.createCharSetFromPreset(initialPreset)\n        const initialCharString = parsedData?.charString ?? initialCharSet.map(slot => slot.character).join('')\n\n        return ({\n            selectedPreset: initialPreset,\n            charSet: initialCharSet,\n            defaultWidth: parsedData?.defaultWidth ?? 150,\n            defaultHeight: parsedData?.defaultHeight ?? 200,\n            base: parsedData?.base ?? 150,\n            presetInputValue: initialPreset,\n            charString: initialCharString\n        })\n    }\n\n    componentDidUpdate(_prevProps: {}, prevState: Step1State) {\n        if (prevState !== this.state) {\n            window.localStorage.setItem('settings', JSON.stringify(this.state))\n        }\n    }\n\n    componentDidMount() {\n        ipcRenderer?.on('load-template', this.loadTemplateListener)\n    }\n\n    componentWillUnmount() {\n        ipcRenderer?.removeListener('load-template', this.loadTemplateListener)\n    }\n\n    @bind\n    loadTemplateListener(_event: any, templateCode: string) {\n        const code = parseTemplateCode(templateCode)\n\n        if (code) {\n            this.setState({\n                base: code.base,\n                charSet: code.slots.map(([character, width, height]) => ({\n                    character: unicodeToChar(character),\n                    width,\n                    height\n                })),\n                selectedPreset: code.presetName,\n                presetInputValue: code.presetName\n            })\n        }\n    }\n\n    @bind\n    handleCharSetInput(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        event.preventDefault()\n\n        const newCharString = event.target.value\n        const newCharArray = newCharString.split('').filter(char => char.trim() !== '')\n        const uniqueCharArray = [...new Set(newCharArray)]\n\n        const newCharSet: WorkSlot[] = uniqueCharArray\n            .map(character => this.state.charSet\n                .find(existingSlot => existingSlot.character === character)\n                ?? { character })\n\n        this.setState({\n            charString: newCharString,\n            charSet: newCharSet,\n            selectedPreset: 'custom',\n            presetInputValue: 'custom'\n        })\n    }\n\n    @bind\n    removeDuplicatesFromCharString() {\n        const validCharString = [...new Set(this.state.charString.split(''))].join('')\n\n        this.setState({\n            charString: validCharString\n        })\n    }\n\n    @bind\n    isCharStringValid() {\n        const charArray = this.state.charString.split('')\n\n        return new Set(charArray).size === charArray.length\n    }\n\n    @bind\n    createCharSetFromPreset(preset: string): WorkSlot[] {\n        const activeRange = this.unicodeRanges.find(range => range.category === preset)\n\n        if (activeRange) {\n            const charSet: WorkSlot[] = []\n\n            for (let i = activeRange.range[0]; i < activeRange.range[1] + 1; i++) {\n                charSet.push({character: String.fromCharCode(i)})\n            }\n\n            return charSet\n        } else {\n            return []\n        }\n    }\n\n    get slotArray(): Slot[] {\n        return this.state.charSet.map(workSlot => ({\n            character: workSlot.character,\n            width: standardizeNumericalInput(workSlot.width ?? this.state.defaultWidth),\n            height: standardizeNumericalInput(workSlot.height ?? this.state.defaultHeight)\n        }))\n    }\n\n    @bind\n    isSlotArrayValid(): boolean {\n        return this.slotArray.every(slot => slot.height > 0 && slot.width > 0)\n    }\n\n    @bind\n    isBaseValid(): boolean {\n        const standardizedBase: number = standardizeNumericalInput(this.state.base)\n        const standardizedHeight: number = standardizeNumericalInput(this.state.defaultHeight)\n\n        return standardizedBase <= standardizedHeight && standardizedBase >= 0\n    }\n\n    @bind\n    handleDefaultValueChange(event: React.ChangeEvent<HTMLInputElement>, valueName: 'defaultWidth' | 'defaultHeight' | 'base') {\n        const newValue = event.target.value === '' ? '' : parseInt(event.target.value, 10)\n\n        this.setState(prevState => ({\n            ...prevState,\n            [valueName]: newValue\n        }))\n    }\n  \n    @bind\n    handleDimensionChange(event: React.ChangeEvent<HTMLInputElement>, dimension: 'width' | 'height', char: WorkSlot) {\n        const newValue = event.target.value === '' ? '' : parseInt(event.target.value, 10)\n        const newCharSet: WorkSlot[] = this.state.charSet.map(character => character === char\n            ? {\n                ...character,\n                [dimension] : newValue\n            }\n            : character\n        )\n\n        this.setState({\n            charSet: newCharSet\n        })\n        \n    }\n\n    @bind\n    resetCharacterDimensions(char: WorkSlot) {\n        const newCharSet =  this.state.charSet.map(workSlot => char === workSlot ? { character: workSlot.character } : workSlot)\n\n        this.setState({\n            charSet: newCharSet\n        })\n    }\n\n    @bind\n    async downloadTemplate() {\n        const template = new Template(this.slotArray, standardizeNumericalInput(this.state.base), this.state.selectedPreset)\n        \n        if (isElectron()) {\n            const image = await template.generateImageBlob()\n            const imageBlobArrayBuffer = await image.arrayBuffer()\n\n            ipcRenderer?.send('save-template', imageBlobArrayBuffer, template.generateTemplateCode())\n        } else {\n            downloadTemplate(template)\n        }\n    }\n\n    @bind\n    changePreset(event: React.ChangeEvent<HTMLInputElement>) {\n        const isValuePreset = this.unicodeRanges.some(range => range.category === event.target.value)\n\n        this.setState({\n            presetInputValue: event.target.value\n        })\n\n        if (isValuePreset) {\n            const newCharset = this.createCharSetFromPreset(event.target.value)\n            const newCharString = newCharset.map(slot => slot.character).join('')\n\n            this.setState({\n                selectedPreset: event.target.value,\n                charSet: newCharset,\n                charString: newCharString\n            }, () => event.target.blur())\n        }\n    }\n\n    @bind\n    presetSelectBlur(event: React.FocusEvent<HTMLInputElement>) {\n        event.target.value = this.state.selectedPreset\n    }\n\n    render() {\n        const renderPresetSelect = (() => {\n            const options = this.unicodeRanges\n                .filter(range => range.category.toLowerCase().includes(this.state.presetInputValue.toLowerCase()))\n                .slice(0, 10)\n                .map(range => <option value={range.category} key={range.category} >{range.category}</option>)\n\n            const defaultOption = <option value='Basic Latin'>Default</option>\n            const datalistId = 'datalistId'\n            \n            return (\n                <div className={styles.inputContainer}>\n                    <Fa\n                        icon='fas fa-question'\n                        className={`${styles.questionMark} ${styles.inputQuestionMark}`}\n                        title='Search any unicode preset like Arabic, Cyrillic, or Hiragana'\n                    />\n\n                    <input\n                        list={datalistId}\n                        aria-label='unicode presets selection input'\n                        onChange={this.changePreset}\n                        value={this.state.presetInputValue}\n                        className={styles.presetSelect}\n                        onBlur={this.presetSelectBlur}\n                    />\n\n                    <datalist id={datalistId} onClick={() => console.log('clicked')}>\n                        {defaultOption}\n                        {options}\n                    </datalist>\n                </div>\n            )\n        })()\n\n        return (\n            <div className={`${styles.container} ${isElectron() ? styles.desktop : ''}`}>\n                <div>\n                    <WebOnly div>\n                        <h2 className={styles.heading}>Generate bitmap fonts in the <ExternalLink href='https://www.angelcode.com/products/bmfont/doc/file_format.html' className={styles.link}>BMFont</ExternalLink> format.</h2>\n                        <p className={styles.paragraph}>Calligro lets you generate custom fonts from images created in graphics software like Gimp, Photoshop, Aseprite and others.</p>\n                        <p className={styles.paragraph}>\n                            If you’re looking to convert a truetype font into a BMFont, try tools like the original{' '}\n                            <ExternalLink href='https://www.angelcode.com/products/bmfont/' className={styles.link}>BMFont</ExternalLink>\n                            {' '}or{' '}\n                            <ExternalLink href='https://github.com/libgdx/libgdx/wiki/Hiero' className={styles.link}>Hiero</ExternalLink>\n                            {' '}instead.\n                        </p>\n                    </WebOnly>\n\n                    <div>\n                        <div className={styles.charactersLabelContainer}>\n                            <label className={`${styles.label} ${styles.charactersLabel}`}>\n                                Characters\n                                <Fa\n                                    icon='fas fa-question'\n                                    className={styles.questionMark}\n                                    title={'Characters you want to be included in the final font (symbols made from multiple unicode characters won\\'t work, e.g. more complex emojis)'}\n                                />\n                            </label>\n                            {renderPresetSelect}\n                        </div>\n                        <textarea\n                            aria-label='characters input'\n                            className={styles.charactersTextArea}\n                            onChange={event => this.setState({ charString: event.target.value})}\n                            onBlur={this.handleCharSetInput}\n                            value={this.state.charString}\n                        />\n                        <button\n                            onClick={this.removeDuplicatesFromCharString}\n                            className={styles.smallFormButton}\n                            disabled={this.isCharStringValid()}\n                        >\n                            Remove duplicates\n                        </button>\n                    </div>\n\n                    <div className={styles.parameters}>\n                        <div className={styles.commonParameters}>\n                            <div>\n                                <label className={styles.label}>Common</label>\n                                <label className={styles.commonLabel}>Size</label>\n                                <input\n                                    aria-label='default width input'\n                                    className={styles.commonInput}\n                                    type='number'\n                                    onChange={event => this.handleDefaultValueChange(event, 'defaultWidth')}\n                                    value={this.state.defaultWidth}\n                                />\n                                <Fa icon='fas fa-times' className={styles.times}/>\n                                <input\n                                    aria-label='default height input'\n                                    className={styles.commonInput}\n                                    type='number'\n                                    onChange={event => this.handleDefaultValueChange(event, 'defaultHeight')}\n                                    value={this.state.defaultHeight}\n                                />\n                                <Fa icon='fas fa-question' className={styles.questionMark} title='Default size of one character in pixels'/>\n                            </div>\n                            \n                            <div>\n                                <label className={styles.commonLabel}>Base</label>\n                                <input\n                                    aria-label='characters base input'\n                                    className={`${styles.commonInput} ${this.isBaseValid() ? '' : styles.commonInputIvalid}`}\n                                    type='number'\n                                    onChange={event => this.handleDefaultValueChange(event, 'base')}\n                                    value={this.state.base}\n                                />\n                                <Fa\n                                    icon='fas fa-question'\n                                    className={styles.questionMark}\n                                    title='Distance from the top of the letter to the line base in pixels (character parts below this will stick out like in \"g\" or \"j\")'\n                                />\n                            </div>\n\n                            <button\n                                onClick={this.downloadTemplate}\n                                className={styles.formButton}\n                                disabled={!this.isSlotArrayValid() || !this.isBaseValid()}\n                            >\n                                {`${isElectron() ? 'save' : 'download'} template`}\n                            </button>\n                        </div>\n\n                        <div className={styles.perCharacterParameters} >\n                            <label className={styles.label}>\n                                Per character\n                                <Fa\n                                    icon='fas fa-question'\n                                    className={styles.questionMark}\n                                    title='Override default size per character'\n                                />\n                            </label>\n\n                            <Step1CharacterList\n                                charSet={this.state.charSet}\n                                defaultHeight={this.state.defaultHeight}\n                                defaultWidth={this.state.defaultWidth}\n                                handleDimensionChange={this.handleDimensionChange}\n                                resetCharacterDimensions={this.resetCharacterDimensions}\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n                    <h2 className={styles.heading}>Step 1 - Create a template</h2>\n                    <ol className={styles.instructionList}>\n                        <li className={styles.instructionListItem}>Specify what characters you want included in the final font. </li>\n                        <li className={styles.instructionListItem}>Choose the character size and base.</li>\n                        <li className={styles.instructionListItem}>Optionally override the size per character if you want some to be smaller or bigger than the rest.</li>\n                        <li className={styles.instructionListItem}>Download the generated template. It’s a zip archive containing two files: png and txt. Open the png in your graphics editor of choice and draw characters inside the red boundaries.</li>\n                        <li className={styles.instructionListItem}>\n                            Go to{' '}\n                            <WebOnly><Link to='/step2' className={styles.link}>Step 2</Link></WebOnly>\n                            <DesktopOnly>'Fonts -&gt; Generate a font'</DesktopOnly>\n                            {' '}to upload the template and generate your font.\n                        </li>\n                    </ol>\n\n                    <WebOnly div>\n                        <h2 className={styles.heading}>We have an offline version too</h2>\n                        <p className={styles.paragraph}>The desktop version is also free and has the same features but is just a little bit more convenient to use ;)</p>\n                        <div className={styles.desktopWidget}>\n                            {/* Copied from itch.io */}\n                            <iframe title=\"Itch.io desktop widget\" frameBorder=\"0\" src=\"https://itch.io/embed/946259\" width=\"552\" height=\"167\"><a href=\"https://voycawojka.itch.io/calligro\">Calligro by Voycawojka</a></iframe>\n                        </div>\n                        <div className={styles.mobileWidget}>\n                            {/* Copied from itch.io */}\n                            <iframe title=\"Itch.io mobile widget\" frameBorder=\"0\" src=\"https://itch.io/embed/946259\" width=\"208\" height=\"167\"><a href=\"https://voycawojka.itch.io/calligro\">Calligro by Voycawojka</a></iframe>\n                        </div>\n                    </WebOnly>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Step1\n","export interface UnicodeRange {\n    category: string,\n    hexrange: [string, string]\n    range: [number, number]\n}\n\nexport function getUnicodeRanges(): UnicodeRange[] {\n    const unicodeRanges: UnicodeRange[] = require('unicode-range-json')\n    unicodeRanges.splice(-2, 2)\n    unicodeRanges.sort((a: UnicodeRange, b: UnicodeRange) => a.category.localeCompare(b.category, 'en'))\n\n    return unicodeRanges\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from './navbar.module.scss'\n\nfunction Navbar() {\n    return (\n        <nav className={styles.container}>\n            <NavLink exact to='/' className={`${styles.navLink} ${styles.navLinkLeft}`} activeClassName={styles.navLinkActive}>\n                <p className={styles.linkBig}>Step 1</p>\n                <p className={styles.linkSmall}>create a template</p>\n            </NavLink>\n            <NavLink to='/step2' className={`${styles.navLink} ${styles.navLinkRight}`} activeClassName={styles.navLinkActive}>\n                <p className={styles.linkBig}>Step 2</p>\n                <p className={styles.linkSmall}>generate your font</p>\n            </NavLink>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Navbar from '../navbar/Navbar'\nimport styles from './header.module.scss'\nimport GithubCorner from 'react-github-corner'\n\nfunction Header() {\n    return (\n        <header className={styles.container}>\n            <h1 className={styles.heading}>\n                <img src='logo.svg' alt='Calligro' height='80' width='158' className={styles.logo} />\n            </h1>\n            <Navbar />\n            <div className={styles.sourceNoticeContainer}>\n                <p className={styles.sourceNoticeLine1}>We're open source!</p>\n                <p className={styles.sourceNoticeLine2}>Feel free to contribute :D</p>\n            </div>\n            <GithubCorner className={styles.githubCorner} href='https://github.com/Voycawojka/calligro' size='110' bannerColor='#707070' octoColor='#202020' />\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport styles from './author.module.scss'\nimport Fa from '../misc/fa/Fa'\nimport ExternalLink from '../misc/externalLink/ExternalLink'\n\ninterface Social {\n    icon: string\n    url: string\n    label: string\n}\n\ninterface AuthorProps {\n    name: string\n    socialLinks: Social[]\n}\n\nfunction Author(props: AuthorProps) {\n    const renderSocial = props.socialLinks.map(social =>\n        <ExternalLink className={styles.socialLink} href={social.url} key={social.url} aria-label={social.label} >\n            <Fa icon={social.icon} className={styles.icon} />\n        </ExternalLink>\n    )\n\n    return (\n        <div className={styles.container}>\n            <h3 className={styles.name}>{props.name}</h3>\n            <div className={styles.socialContainer}>\n                {renderSocial}\n            </div>\n        </div>\n    )\n}\n\nexport default Author\n","import React from 'react'\nimport Author from '../author/Author'\n\nfunction Authors() {\n    return (\n            <>\n                <Author\n                    name='Filip A. Kowalski'\n                    socialLinks={[\n                        {\n                            url: 'https://ideasalmanac.com',\n                            icon: 'fa fa-globe-africa',\n                            label: 'ideasalmanac'\n                        },\n                        {\n                            url: 'https://twitter.com/IdeasAlmanac',\n                            icon: 'fab fa-twitter',\n                            label: 'twitter'\n                        },\n                        {\n                            url: 'https://github.com/Voycawojka',\n                            icon: 'fab fa-github',\n                            label: 'github'\n                        }\n                    ]}\n                />\n                <Author\n                    name='Dominik Józefiak'\n                    socialLinks={[\n                        {\n                            url: 'https://github.com/domlj',\n                            icon: 'fab fa-github',\n                            label: 'github'\n                        }\n                    ]}\n                />\n            </>\n    )\n}\n\nexport default Authors\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Authors from '../authors/Authors'\nimport ExternalLink from '../misc/externalLink/ExternalLink'\nimport styles from './footer.module.scss'\n\nfunction Footer() {\n    return (\n        <footer className={styles.container}>\n            <Link to='/policy' className={`${styles.policy} ${styles.link}`}>Privacy policy</Link>\n            <div className={styles.authors}>\n                <Authors />\n            </div>\n            \n            <div className={styles.linkContainer}>\n                <ExternalLink href='https://github.com/Voycawojka/calligro/issues' className={styles.link}>Found a bug?</ExternalLink>\n                <ExternalLink href='https://github.com/Voycawojka/calligro/issues' className={styles.link}>Have a feature request?</ExternalLink>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styles from './policy.module.scss'\n\nfunction Policy() {\n    return (\n        <div className={styles.policyContainer}>\n            <h1>Calligro Privacy Policy</h1>\n            <p>\n                Calligro is an open source tool served on a static web server (Github Pages).\n                We don't ask for nor collect any personal data.\n                All information provided (and all files uploaded) by the user stay inside the user's browser.\n            </p>\n            \n            <h2>Cookies and local storage</h2>\n            <p>\n                We use cookies and local storage (small files and pieces of data stored on the user's device) for two pursposes:\n            </p>\n                <ul>\n                    <li>user's convenience (e.g. to rememeber last chosen settings),</li>\n                    <li>analytics (more in the Analytics section below)</li>\n                </ul>\n            <p>\n                Browsers allow users to view, remove or even entirely block cookies.\n                Check your browser's manual to access those options.\n            </p>\n            \n            <h2>Analytics</h2>\n            <p>\n                We use Google Analytics for analytics purposes.\n                Therefore, all analytics data is stored on Google's servers.\n            </p>\n            <p>\n                By default, we don't allow Google Analytics to use analytics or ad related tracking cookies.\n                If you consent by clicking Accept on our cookie popup, we use analytics related cookies for better insight.\n                We don't use ad related cookies regardless of consent.\n            </p>\n            \n            <h2>About this policy</h2>\n            <p>\n                Please note we can change this privacy policy without notice.\n            </p>\n\n\n            <Link to='/' className={styles.menuLink}>Back to Calligro</Link>\n        </div>\n    )\n}\n\nexport default Policy\n","import React, { Component } from 'react'\nimport Cookies from 'js-cookie'\nimport styles from './cookieNotice.module.scss'\nimport { Link } from 'react-router-dom'\nimport { bind } from 'helpful-decorators'\n\ninterface CookieNoticeState {\n    acknowledged: boolean\n}\n\nclass CookieNotice extends Component<{}, CookieNoticeState> {\n    constructor(props: {}) {\n        super(props)\n        this.state = {\n            acknowledged: false\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            acknowledged: Cookies.get('cookies-acknowledged') === 'true'\n        }, this.updateAnalytics)\n    }\n\n    @bind\n    handleExit() {\n        Cookies.set('cookies-acknowledged', 'true', { expires: 1000 })\n\n        this.setState({\n            acknowledged: true\n        }, this.updateAnalytics)\n    }\n\n    @bind\n    updateAnalytics() {\n        const analyticsStatus = this.state.acknowledged ? 'granted' : 'denied'\n\n        window.gtag('consent', 'update', {\n            analytics_storage: analyticsStatus\n        })\n    }\n\n    render () {\n        if (!this.state.acknowledged) {\n            return (\n                <div className={styles.container}>\n                    <h2 className={styles.heading}>We use cookies</h2>\n                    <div className={styles.content}>\n                        <img className={styles.image} src='cookie.svg' alt='cookie' height='203' width='183' />\n                        <div className={styles.details}>\n                            <ul className={styles.list}>\n                                <li className={styles.listItem}>for your convienience</li>\n                                <li className={styles.listItem}>for analytics</li>\n                            </ul>\n\n                            <div className={styles.linkContainer}>\n                                <Link to='/policy' className={styles.link}>Learn more</Link>\n                                <button onClick={this.handleExit} className={styles.link} >Accept</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nexport default CookieNotice\n","import React, { Component } from 'react'\nimport Fa from '../fa/Fa'\nimport styles from './loader.module.scss'\n\ninterface LoaderState {\n    isLoaderOn: boolean\n}\n\nclass Loader extends Component<{}, LoaderState> {\n    private timer?: NodeJS.Timeout\n\n    constructor(props: {}) {\n        super(props)\n        this.state = {\n            isLoaderOn: false\n        }\n    }\n\n    componentDidMount() {\n        this.timer = setTimeout(() => {\n            this.setState({\n                isLoaderOn: true\n            })\n        }, 300)\n    }\n\n    componentWillUnmount() {\n        if (this.timer) {\n            clearTimeout(this.timer)\n        }\n    }\n\n    render() {\n        if (!this.state.isLoaderOn) {\n            return null\n        } else {\n            return (\n                <div className={styles.container}>\n                    <Fa icon='fas fa-cog fa-spin' className={styles.icon} />\n                </div>\n            )\n        }\n    }\n}\n\nexport default Loader\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router'\nimport { bind } from 'helpful-decorators'\n\nconst ipcRenderer = !!window.require ? window.require('electron').ipcRenderer : null\n\ninterface IpcNavigationState {\n    url: string\n}\n\nexport class IpcNavigation extends Component<{}, IpcNavigationState> {\n\n    constructor(props: {}) {\n        super(props)\n\n        this.state = {\n            url: '/'\n        }\n    }\n\n    componentDidMount() {\n        ipcRenderer?.on('navigation', this.navigationListener)\n    }\n\n    componentWillUnmount() {\n        ipcRenderer?.removeListener('navigation', this.navigationListener)\n    }\n\n    @bind\n    navigationListener(_event: any, arg: string) {\n        this.setState({ url: arg })\n    }\n\n    render() {\n        return <Redirect to={this.state.url} />;\n    }\n}\n","type compareOutput = 'greater' | 'lesser' | 'equal'\n\nexport function compareVersions(version1: string, version2: string): compareOutput {\n    const [major1, minor1, patch1] = version1.split('.').map(v => Number.parseInt(v))\n    const [major2, minor2, patch2] = version2.split('.').map(v => Number.parseInt(v))\n\n    const majorDiff = compare(major1, major2)\n\n    if (majorDiff !== 'equal') {\n        return majorDiff\n    }\n\n    const minorDiff = compare(minor1, minor2)\n\n    if (minorDiff !== 'equal') {\n        return minorDiff\n    }\n\n    return compare(patch1, patch2)\n}\n\nfunction compare(a: number, b: number): compareOutput {\n    if (a > b) {\n        return 'greater'\n    }\n\n    if (a < b) {\n        return 'lesser'\n    }\n\n    return 'equal'\n}","import { compareVersions } from \"../utils/compareVersions\"\n\ninterface GithubReleaseData {\n    name: string\n    body: string\n}\n\ninterface ItchReleaseData {\n    latest: string\n}\n\nfunction fetchLatestItchVersion(channelName: string): Promise<ItchReleaseData> {\n    return fetch(`https://itch.io/api/1/x/wharf/latest?target=voycawojka/calligro&channel_name=${channelName}`)\n        .then(response => response.json())\n        .then(data => {\n            if (data.errors) {\n                throw new Error(`Cannot fetch latest version information [${data.errors.join(', ')}]`)\n            }\n\n            return data as ItchReleaseData\n        })\n}\n\nfunction fetchGithubVersionDetails(version: string): Promise<GithubReleaseData> {\n    const tag = compareVersions(version, '0.2.0') === 'greater'\n        ? `v${version}`\n        : `v.${version}`\n\n    return fetch(`https://api.github.com/repos/voycawojka/calligro/releases/tags/${tag}`)\n        .then(response => response.json())\n}\n\nexport type NewVersionData = { type: 'up_to_date' } | { type: 'new_available', name: string, body: string, version: string }\n\nexport async function fetchNewerVersion(currentVersion: string, currentChannel: string): Promise<NewVersionData> {\n    try {\n        const itchVersion = await fetchLatestItchVersion(currentChannel)\n\n        if (compareVersions(currentVersion, itchVersion.latest) !== 'lesser') {\n            return { type: 'up_to_date' }\n        }\n\n        const githubRelease = await fetchGithubVersionDetails(itchVersion.latest)\n\n        return {\n            type: 'new_available',\n            name: githubRelease.name,\n            body: githubRelease.body,\n            version: itchVersion.latest\n        }\n    } catch (e) {\n        console.error(`Error while checking for a newer version`, e)\n        return { type: 'up_to_date' }\n    }\n}\n","import React from 'react'\nimport Fa from '../misc/fa/Fa'\nimport styles from './popup.module.scss'\n\ninterface PopupProps {\n    title?: string\n    closeHandler: () => void\n}\n\nfunction Popup(props: React.PropsWithChildren<PopupProps>) {\n    return (\n        <div className={styles.container}>\n            <p className={styles.title}>\n                {props.title}\n            </p>\n\n            <button className={styles.closeButton} onClick={props.closeHandler}>\n                    <Fa icon='fas fa-times' className={styles.times} />\n            </button>\n\n            <div>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport default Popup\n","import { Component } from 'react'\nimport { bind } from 'helpful-decorators'\nimport { fetchNewerVersion } from '../../api/latestVesion'\nimport Popup from '../popup/Popup'\nimport styles from './updater.module.scss'\nimport ExternalLink from '../misc/externalLink/ExternalLink'\n\nconst ipcRenderer = !!window.require ? window.require('electron').ipcRenderer : null\n\ninterface UpdaterState {\n    newVersionName?: string\n    newVersionDescription?: string,\n    currentVersion?: string,\n    newVersionCount? : string\n}\n\ninterface UpdaterProps {\n}\n\nexport class Updater extends Component<UpdaterProps, UpdaterState> {\n\n    constructor(props: UpdaterProps) {\n        super(props)\n\n        this.state = {}\n    }\n\n    componentDidMount() {\n        ipcRenderer?.on('version', this.versionListener)\n        ipcRenderer?.send('request-version')\n    }\n\n    componentWillUnmount() {\n        ipcRenderer?.removeListener('version', this.versionListener)\n    }\n\n    @bind\n    async versionListener(_event: any, data: { version: string, platform: string }) {\n        let channel = null\n\n        if (data.platform === 'linux') {\n            channel = 'linux'\n        }\n\n        if (data.platform === 'win32') {\n            channel = 'win-64'\n        }\n\n        if (channel) {\n            const newVersion = await fetchNewerVersion(data.version, channel)\n\n            if (newVersion.type === 'new_available') {\n                this.setState({\n                    newVersionName: newVersion.name,\n                    newVersionDescription: newVersion.body,\n                    newVersionCount: newVersion.version,\n                    currentVersion: data.version\n                })\n            }\n        }\n    }\n\n    @bind\n    close() {\n        this.setState({\n            newVersionName: undefined\n        })\n    }\n\n    render() {\n        if (this.state.newVersionName) {\n            const description = this.state.newVersionDescription?.split('\\n')\n                .map((item, index ) => <p key={index} className={styles.descriptionParagraph}>{item}</p>)\n\n            return (\n                <Popup title='New version available' closeHandler={this.close}>\n                    <div className={styles.container}>\n                        <div className={styles.content}>Version \n                            <span className={styles.contentBold}> {this.state.newVersionCount} </span> \n                            available (your version: <span className={styles.contentBold}>{this.state.currentVersion}</span>)\n                        </div>\n                        <div className={styles.content}>\n                            Name:\n                            <span className={styles.contentBold}> {this.state.newVersionName}</span>\n                        </div>\n                        <ExternalLink className={styles.link} href='https://voycawojka.itch.io/calligro'>Download from itch.io</ExternalLink>\n                        <div className={styles.content}>Changelog:</div>\n                        <div>{description}</div>\n                    </div>\n                </Popup>\n            )\n        }\n\n        return null\n    }\n}\n","import React, { Component } from 'react'\nimport styles from './aboutPopup.module.scss'\n\nimport { bind } from 'helpful-decorators'\nimport Popup from '../popup/Popup'\nimport Authors from '../authors/Authors'\nimport ExternalLink from '../misc/externalLink/ExternalLink'\n\nconst ipcRenderer = !!window.require ? window.require('electron').ipcRenderer : null\n\ninterface AboutPopupState {\n    active: boolean\n    version: string\n}\n\nclass AboutPopup extends Component<{}, AboutPopupState> {\n    constructor(props: {}) {\n        super(props)\n        this.state = {\n            active: false,\n            version: ''\n        }\n    }\n\n    componentDidMount() {\n        ipcRenderer?.on('about-popup', (event, version: string) => {\n            this.setState({\n                active: true,\n                version: version\n            })\n        })\n    }\n\n    componentWillUnmount() {\n        ipcRenderer?.removeListener('about-popup', () => {})\n    }\n\n    @bind\n    closeWindow() {\n        this.setState({\n            active: false\n        })\n    }\n\n    render () {\n        if (this.state.active) {\n            return (\n                <Popup title='About' closeHandler={this.closeWindow}>\n                    <div className={styles.container}>\n                        <div className={styles.disclaimer}>\n                            <p className={styles.paragraph}>Calligro lets you generate custom fonts from images created in graphics software like Gimp, Photoshop, Aseprite and others.</p>\n                            <p className={styles.paragraph}>\n                                If you’re looking to convert a truetype font into a BMFont, try tools like the original{' '}\n                                <ExternalLink href='https://www.angelcode.com/products/bmfont/' className={styles.link}>BMFont</ExternalLink> \n                                {' '}or{' '} \n                                <ExternalLink href='https://github.com/libgdx/libgdx/wiki/Hiero' className={styles.link}>Hiero</ExternalLink>\n                                {' '}instead.\n                            </p>\n                        </div>\n                        <div className={styles.version}>Version: {this.state.version}</div>\n                        <div className={styles.authorsContainer}>\n                            <Authors/>\n                        </div>\n                    </div>\n                </Popup>\n            )\n        } else {\n            return null\n        }\n    }\n}\n\nexport default AboutPopup\n","import React, { Suspense } from 'react'\nimport Step1 from './ui/generation/step1/Step1'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport Header from './ui/header/Header'\nimport Footer from './ui/footer/Footer'\nimport Policy from './ui/policy/Policy'\nimport CookieNotice from './ui/cookieNotice/CookieNotice'\nimport Loader from './ui/misc/loader/Loader'\nimport { WebOnly } from './ui/envSpecific/WebOnly'\nimport { DesktopOnly } from './ui/envSpecific/DesktopOnly'\nimport { IpcNavigation } from './ui/ipcNavigation/IpcNavigation'\nimport { Updater } from './ui/updater/Updater'\nimport AboutPopup from './ui/aboutPopup/AboutPopup'\n\nconst Step2 = React.lazy(() => import('./ui/generation/step2/Step2'))\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path='/policy'>\n                    <Policy />\n                </Route>\n\n                <Route>\n                    <WebOnly>\n                        <Header/>\n                    </WebOnly>\n\n                    <Route exact path='/'>\n                        <Step1 />\n                    </Route>\n\n                    <Route exact path='/step2'>\n                        <Suspense fallback={<Loader />}>\n                            <Step2 />\n                        </Suspense>\n                    </Route>\n\n                    <WebOnly>\n                        <Footer />\n                        <CookieNotice />\n                    </WebOnly>\n\n                    <DesktopOnly>\n                        <IpcNavigation />\n                        <Updater />\n                        <AboutPopup />\n                    </DesktopOnly>\n                </Route>\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}