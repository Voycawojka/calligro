{"version":3,"sources":["ui/generation/generationCharacterList/generationCharacterList.module.scss","ui/generation/navbar/navbar.module.scss","ui/generation/footer/footer.module.scss","ui/generation/generationView/generationView.module.scss","ui/generation/author/author.module.scss","ui/generation/fontCreationView/fontCreationView.module.scss","ui/generation/header/header.module.scss","utils/canvasHelpers.ts","generation/fs/image.ts","generation/packing/imagePacking.ts","generation/template/parse.ts","generation/template/slotDrawing.ts","utils/decorators.ts","generation/template/Template.ts","generation/font/Font.ts","generation/font/txtSaver.ts","generation/fs/zip.ts","generation/font/download.ts","ui/generation/fontCreationView/FontCreationView.tsx","ui/generation/fa/Fa.tsx","ui/generation/generationCharacterList/GenerationCharacterList.tsx","generation/template/download.ts","ui/generation/generationView/GenerationView.tsx","ui/generation/navbar/Navbar.tsx","ui/generation/header/Header.tsx","ui/generation/author/Author.tsx","ui/generation/footer/Footer.tsx","ui/generation/policy/Policy.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","wrapText","ctx","text","maxWidth","split","map","paragraph","flatMap","words","lines","forEach","word","currentLine","length","measureText","join","width","push","createCanvas","height","color","canvas","document","createElement","getContext","Error","fillStyle","fillRect","convertToBlob","Promise","resolve","reject","toBlob","blob","blobToCanvas","dataUrl","URL","createObjectURL","image","onload","drawImage","remove","revokeObjectURL","src","packFromSheet","source","rects","data","packedRects","nextX","nextY","furthestSoFar","lowestSoFar","sort","a","b","h","rect","w","packed","x","y","sourceRect","pack","parseTemplateCode","code","json","atob","codePayload","JSON","parse","version","Number","isInteger","base","Array","isArray","slots","incorrectSlot","find","slot","value","stringify","drawInfo","textAlign","options","size","maxHeight","trySize","font","line","i","fillText","drawWrappedText","memoize","_target","_propertyKey","descriptor","targetFunction","get","Function","descriptorProp","cache","Map","args","key","cachedResult","result","apply","this","set","Template","slotDim","index","Math","floor","getSlotPosition","vertMargin","strokeStyle","strokeRect","charRectX","charRectY","beginPath","moveTo","lineTo","stroke","clearRect","character","drawSlot","hMargin","payload","charCodeAt","btoa","ceil","sqrt","maxW","max","maxH","slotH","generateFont","templateImg","templateCode","fontConfig","tempConfig","unicode","String","fromCharCode","template","sourceRects","packedTexture","packedBlob","specification","info","face","stretchH","aa","padding","up","right","down","left","spacing","horizontal","horizontalSpacing","vertical","verticalSpacing","outline","common","lineHeight","scaleW","scaleH","pages","id","file","chars","xoffset","yoffset","xadvance","page","chnl","tag","name","properties","joinedProps","prop","toString","fontSpecToTxt","infoTag","commonTag","pageTags","charTags","char","downloadBlob","link","href","download","click","downloadArchive","files","archive","downloadZip","downloadBmf","fntFile","input","FontCreationView","props","templateCodeInput","templateInput","state","generationAllowed","horizontalMargin","verticalMargin","React","createRef","current","isCodeInputValid","type","setState","event","parseInt","target","prevState","fontSpec","className","styles","container","ref","onChange","isInputsValid","accept","handleNumericalInput","disabled","onClick","downloadFont","Component","bind","Fa","icon","GenerationCharacterList","charList","charSet","characterContainer","defaultWidth","handleDimensionChange","times","defaultHeight","buttonContainer","resetCharacterDimensions","button","timesButton","generateImageBlob","generateTemplateCode","GenerationView","setInitialState","storedData","window","localStorage","getItem","parsedData","createCharArray","prevProps","setItem","from","newCharArray","filter","isUniqueCharSet","Set","preventDefault","newCharSet","oldChar","valueName","newValue","dimension","workSlot","downloadTemplate","slotArray","description","heading","characters","label","questionMark","charactersTextArea","handleCharSetInput","charString","commonLabel","commonInput","handleDefaultValueChange","downloadButton","perCharacter","instructions","instructionList","instructionListItem","to","Navbar","exact","navLinkLeft","activeClassName","navLinkActive","linkBig","linkSmall","navLinkRight","Header","Author","renderSocial","socialLinks","social","socialLink","url","socialContainer","Footer","policy","authors","linkContainer","Policy","App","path","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ce6a411a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"generationCharacterList_container__3GuOi\",\"character\":\"generationCharacterList_character__2rExn\",\"input\":\"generationCharacterList_input__39dSd\",\"times\":\"generationCharacterList_times___04Ni\",\"timesButton\":\"generationCharacterList_timesButton__2q6fr\",\"characterContainer\":\"generationCharacterList_characterContainer__27T8l\",\"button\":\"generationCharacterList_button__1GLlC\",\"buttonContainer\":\"generationCharacterList_buttonContainer__3-ogl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"navbar_container__37WB4\",\"linkBig\":\"navbar_linkBig__zmIT9\",\"linkSmall\":\"navbar_linkSmall__2Brh4\",\"navLinkLeft\":\"navbar_navLinkLeft__UA8H7\",\"navLinkRight\":\"navbar_navLinkRight__3BYWT\",\"navLinkActive\":\"navbar_navLinkActive__JHOaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"footer_container__3_wfr\",\"policy\":\"footer_policy__JXBvy\",\"link\":\"footer_link__3MEnl\",\"authors\":\"footer_authors__NS734\",\"linkContainer\":\"footer_linkContainer__UVDcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"generationView_container__3Fgnr\",\"description\":\"generationView_description__2gXn7\",\"characters\":\"generationView_characters__1PfB3\",\"common\":\"generationView_common__1ye6s\",\"perCharacter\":\"generationView_perCharacter__1fSm5\",\"instructions\":\"generationView_instructions__gaSQX\",\"charactersTextArea\":\"generationView_charactersTextArea__1PFxl\",\"instructionList\":\"generationView_instructionList__SFUDy\",\"instructionListItem\":\"generationView_instructionListItem__2OGuO\",\"label\":\"generationView_label__3Iy_E\",\"commonLabel\":\"generationView_commonLabel__2vnxY\",\"commonInput\":\"generationView_commonInput__2dbDD\",\"heading\":\"generationView_heading__3uRe_\",\"paragraph\":\"generationView_paragraph__3w3_W\",\"downloadButton\":\"generationView_downloadButton__U1Nsf\",\"times\":\"generationView_times__1kN51\",\"questionMark\":\"generationView_questionMark__P_5Tb\",\"commonContainer\":\"generationView_commonContainer__137NA\",\"link\":\"generationView_link__3yZP-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"author_container__pl8h1\",\"socialLink\":\"author_socialLink__SgCuK\",\"name\":\"author_name__2Hjyj\",\"socialContainer\":\"author_socialContainer__LVnRs\",\"icon\":\"author_icon__5pj1k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"fontCreationView_container__1ZXJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__3kiaD\"};","function wrapText(ctx: CanvasRenderingContext2D, text: string, maxWidth: number): string[] {\n    return text\n        .split('\\n')\n        .map(paragraph => paragraph.split(' '))\n        .flatMap(words => {\n            const lines: string[][] = [[]]\n\n            words.forEach(word => {\n                const currentLine = lines[lines.length-1]\n                const width = ctx.measureText(`${currentLine.join(' ')} ${word}`).width\n\n                if (width < maxWidth) {\n                    currentLine.push(word)\n                } else {\n                    lines.push([word])\n                }\n            })\n\n            return lines.map(words => words.join(' '))\n        })\n}\n\nexport function createCanvas(width: number, height: number, color?: string): [HTMLCanvasElement, CanvasRenderingContext2D] {\n    const canvas = document.createElement('canvas')\n    canvas.width = width\n    canvas.height = height\n\n    const ctx = canvas.getContext('2d')\n\n    if (!ctx) {\n        throw new Error('Your browser doesn\\'t support 2d canvas context. Use a modern browser, please.')\n    }\n\n    if (color) {\n        ctx.fillStyle = color\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n    }\n\n    return [canvas, ctx]\n}\n\ntype DrawWrappedTextOptions = {\n    x: number,\n    y: number,\n    size: number,\n    maxWidth: number,\n    maxHeight?: number\n}\n\nexport function drawWrappedText(ctx: CanvasRenderingContext2D, text: string, options: DrawWrappedTextOptions): void {\n    const { x, y, size, maxWidth, maxHeight } = options\n    let trySize = size\n\n    ctx.font = `${trySize}px serif`\n    let lines = wrapText(ctx, text, maxWidth)\n\n    if (maxHeight) {\n        while (lines.length * trySize >= maxHeight) {\n            trySize --\n\n            ctx.font = `${trySize}px serif`\n            lines = wrapText(ctx, text, maxWidth)\n        }\n    }\n\n    lines.forEach((line, i) => ctx.fillText(line, x, y + i * trySize, maxWidth))\n}\n\nexport function convertToBlob(canvas: HTMLCanvasElement): Promise<Blob> {\n    return new Promise((resolve, reject) => {\n        canvas.toBlob(blob => !!blob ? resolve(blob) : reject())\n    })\n}\n","import { createCanvas } from \"../../utils/canvasHelpers\"\n\nexport function blobToCanvas(blob: Blob): Promise<[HTMLCanvasElement, CanvasRenderingContext2D]> {\n    return new Promise(resolve => {\n        const dataUrl = URL.createObjectURL(blob)\n        const image = document.createElement('img')\n\n        image.onload = () => {\n            const [canvas, ctx] = createCanvas(image.width, image.height)\n\n            ctx.drawImage(image, 0, 0)\n\n            image.remove()\n            URL.revokeObjectURL(dataUrl)\n\n            resolve([canvas, ctx])\n        }\n\n        image.src = dataUrl\n    })\n}\n","import { createCanvas } from '../../utils/canvasHelpers'\nimport { Slot } from '../template/types'\n\nexport interface SourceRect {\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    slot: Slot\n}\n\nexport interface PackedRect {\n    x: number,\n    y: number,\n    sourceRect: SourceRect\n}\n\ninterface PackedData {\n    packedRects: PackedRect[],\n    width: number,\n    height: number\n}\n\nfunction pack(rects: SourceRect[], width: number): PackedData {\n    const data: PackedData = {\n        packedRects: [],\n        width: 0,\n        height: 0\n    }\n    \n    let nextX = 0\n    let nextY = 0\n    let furthestSoFar = 0\n    let lowestSoFar = 0\n\n    data.packedRects = rects\n        .sort((a, b) => b.h - a.h)\n        .map(rect => {\n            if (nextX + rect.w > width) {\n                nextX = 0\n                nextY = lowestSoFar\n            }\n\n            if (nextX + rect.w > furthestSoFar) {\n                furthestSoFar = nextX + rect.w\n            }\n\n            if (nextY + rect.h > lowestSoFar) {\n                lowestSoFar = nextY + rect.h\n            }\n\n            const packed = {\n                x: nextX,\n                y: nextY,\n                sourceRect: rect\n            }\n\n            nextX += rect.w\n\n            return packed\n        })\n    \n    data.width = furthestSoFar\n    data.height = lowestSoFar\n\n    return data\n}\n\nexport function packFromSheet(source: HTMLCanvasElement, rects: SourceRect[]): [HTMLCanvasElement, PackedRect[]] {\n    const { width, height, packedRects } = pack(rects, source.width)\n    const [canvas, ctx] = createCanvas(width, height)\n\n    packedRects.forEach(({ x, y, sourceRect }) => {\n        const { w, h } = sourceRect\n        ctx.drawImage(source, sourceRect.x, sourceRect.y, w, h, x, y, w, h)\n    })\n\n    return [canvas, packedRects]\n}\n","import { CodePayload } from './types'\n\nexport function parseTemplateCode(code: string): CodePayload {\n    const json = atob(code)\n    const codePayload: CodePayload = JSON.parse(json)\n\n    if (codePayload.version !== 0) {\n        throw new Error(`Only templates version '0' are supported, instead got version '${codePayload.version}'`)\n    }\n\n    if (!Number.isInteger(codePayload.base)) {\n        throw new Error(`Property 'base' must be an integer, instead got: ${typeof codePayload.base} '${codePayload.base}'`)\n    }\n\n    if (!Array.isArray(codePayload.slots)) {\n        throw new Error(`Property 'slots' must be an array, instead got: ${codePayload.slots} '${codePayload.slots}'`)\n    }\n\n    const incorrectSlot = codePayload.slots.find(slot => !Array.isArray(slot) || slot.length !== 3 || slot.find(value => !Number.isInteger(value)))\n    if (incorrectSlot) {\n        throw new Error(`Each slot must be a three element array (integers only). Instead found: ${JSON.stringify(incorrectSlot)}`)\n    }\n\n    return codePayload\n}\n","import { drawWrappedText } from '../../utils/canvasHelpers'\nimport { Slot } from './types'\n\ntype DrawSlotOptions = {\n    x: number,\n    y: number,\n    w: number,\n    h: number,\n    base: number,\n    vertMargin: number\n}\n\nexport function drawSlot(ctx: CanvasRenderingContext2D, slot: Slot, options: DrawSlotOptions): void {\n    const { x, y, w, h, base, vertMargin } = options\n\n    ctx.strokeStyle = 'black'\n    ctx.strokeRect(x, y, w, h)\n\n    const charRectX = x + w / 2 - slot.width / 2\n    const charRectY = y + h / 2 - slot.height / 2\n\n    ctx.strokeStyle = 'green'\n    ctx.beginPath()\n    ctx.moveTo(x, charRectY + base)\n    ctx.lineTo(x + w, charRectY + base)\n    ctx.stroke()\n\n    ctx.strokeStyle = 'red'\n    ctx.clearRect(charRectX, charRectY, slot.width, slot.height)\n    ctx.strokeRect(charRectX, charRectY, slot.width, slot.height)\n\n    ctx.fillStyle = 'black'\n    ctx.font = `${vertMargin * 0.8}px serif`\n    ctx.textAlign = 'center'\n    ctx.fillText(slot.character, x + w / 2, y + h - vertMargin / 4, w)\n}\n\nexport function drawInfo(ctx: CanvasRenderingContext2D, x: number, y: number, w: number, h: number): void {\n    const info = `1) Draw characters inside the red boundaries*.\n\n2) Upload this file back to Calligro\n\n3) Paste the template code and you got yourself a font\n\n*Green lines signify the letter base.`\n\n    ctx.fillStyle = 'black'\n    ctx.textAlign = 'left'\n    drawWrappedText(ctx, info, {\n        x: x + w * 0.05,\n        y: y + h * 0.1,\n        maxWidth: w * 0.9,\n        maxHeight: h * 0.8,\n        size: h / 5\n    })\n}\n","export function memoize(_target: Object, _propertyKey: string, descriptor: PropertyDescriptor): void {\n    const targetFunction = descriptor.value ?? descriptor.get\n\n    if (!targetFunction || !(targetFunction instanceof Function)) {\n        throw Error('Memoize only supports non-setter functions.')\n    }\n\n    const descriptorProp = !!descriptor.value ? 'value' : 'get'\n    const cache = new Map<String, any>();\n\n    descriptor[descriptorProp] = function (...args: any[]) {\n        const key = JSON.stringify(args)\n        const cachedResult = cache.get(key)\n        const result = !!cachedResult ? cachedResult : targetFunction.apply(this, args)\n\n        cache.set(key, result)\n\n        return result\n    }\n}\n","import { convertToBlob, createCanvas } from '../../utils/canvasHelpers'\nimport { CodePayload, Slot } from './types'\nimport { drawInfo, drawSlot } from './slotDrawing'\nimport { memoize } from '../../utils/decorators'\n\nexport default class Template {\n    private readonly canvas: HTMLCanvasElement\n    private readonly ctx: CanvasRenderingContext2D\n\n    constructor(private readonly slots: Slot[], private readonly base: number) {\n        [this.canvas, this.ctx] = createCanvas(this.w * this.slotDim.w, this.h * this.slotDim.h, 'white')\n    }\n\n    @memoize\n    private get w(): number {\n        return Math.ceil(Math.sqrt(this.slots.length + 1))\n    }\n\n    @memoize\n    private get h(): number {\n        return Math.ceil(Math.sqrt(this.slots.length + 1))\n    }\n\n    @memoize\n    public get slotDim(): { w: number, h: number, hMargin: number } {\n        const maxW = Math.max.apply(null, this.slots.map(slot => slot.width))\n        const maxH = Math.max.apply(null, this.slots.map(slot => slot.height))\n\n        const slotW = maxW * 1.3\n        const slotH = maxH * 1.3\n        const vertMargin = (slotH - maxH) / 2\n\n        return { w: slotW, h: slotH, hMargin: vertMargin }\n    }\n\n    public getSlotPosition(index: number): { x: number, y: number } {\n        return {\n            x: (index % this.w) * this.slotDim.w,\n            y: Math.floor(index / this.w) * this.slotDim.h\n        }\n    }\n\n    @memoize\n    public generateImageBlob(): Promise<Blob> {\n        drawInfo(this.ctx, 0, 0, this.slotDim.w, this.slotDim.h)\n    \n        this.slots.forEach((slot, index) => {\n            const { x, y } = this.getSlotPosition(index + 1)\n\n            drawSlot(this.ctx, slot, {\n                x,\n                y,\n                w: this.slotDim.w,\n                h: this.slotDim.h,\n                base: this.base,\n                vertMargin: this.slotDim.hMargin\n            })\n        })\n\n        return convertToBlob(this.canvas)\n    }\n    \n    @memoize\n    public generateTemplateCode(): string {\n        const payload: CodePayload = {\n            version: 0,\n            slots: this.slots.map(slot => ([slot.character.charCodeAt(0), slot.width, slot.height])),\n            base: this.base\n        }\n\n        return btoa(JSON.stringify(payload))\n    }\n}\n","import { convertToBlob } from '../../utils/canvasHelpers';\nimport { blobToCanvas } from '../fs/image';\nimport { packFromSheet, SourceRect } from '../packing/imagePacking';\nimport { parseTemplateCode } from '../template/parse';\nimport Template from '../template/Template';\n\nexport interface FontSpec {\n    info: {\n        face: string\n        size: number\n        stretchH: number\n        aa: number\n        padding: {\n            up: number\n            right: number\n            down: number\n            left: number\n        }\n        spacing: {\n            horizontal: number\n            vertical: number\n        }\n        outline: number\n    }\n    common: {\n        lineHeight: number\n        base: number\n        scaleW: number\n        scaleH: number\n        pages: number\n    }\n    pages: {\n        id: number\n        file: string\n    }[]\n    chars: {\n        id: number\n        x: number\n        y: number\n        width: number\n        height: number\n        xoffset: number\n        yoffset: number\n        xadvance: number\n        page: number\n        chnl: 1 | 2 | 4 | 8 | 15\n    }[]\n}\n\nexport interface FontConfig {\n    horizontalSpacing: number\n    verticalSpacing: number\n    lineHeight: number\n}\n\nexport async function generateFont(templateImg: Blob, templateCode: string, fontConfig: FontConfig): Promise<[FontSpec, Blob[]]> {\n    const tempConfig = parseTemplateCode(templateCode)\n    const slots = tempConfig.slots.map(([ unicode, width, height ]) => ({ character: String.fromCharCode(unicode), width, height }))\n    const template = new Template(slots, tempConfig.base)\n\n    const [canvas] = await blobToCanvas(templateImg)\n\n    const sourceRects: SourceRect[] = slots.map((slot, index) => ({\n        slot,\n        x: template.getSlotPosition(index + 1).x + template.slotDim.w / 2 - (slot.width - 2) / 2,\n        y: template.getSlotPosition(index + 1).y + template.slotDim.h / 2 - (slot.height - 2) / 2,\n        w: slot.width - 2,\n        h: slot.height - 2\n    }))\n\n    const [packedTexture, packedRects] = packFromSheet(canvas, sourceRects)\n    const packedBlob = await convertToBlob(packedTexture)\n\n    const specification: FontSpec = {\n        info: {\n            face: 'calligro-custom',\n            size: 12,\n            stretchH: 100,\n            aa: 1,\n            padding: {\n                up: 0,\n                right: 0,\n                down: 0,\n                left: 0\n            },\n            spacing: {\n                horizontal: fontConfig.horizontalSpacing,\n                vertical: fontConfig.verticalSpacing\n            },\n            outline: 0\n        },\n        common: {\n            lineHeight: fontConfig.lineHeight,\n            base: tempConfig.base,\n            scaleW: canvas.width,\n            scaleH: canvas.height,\n            pages: 1\n        },\n        pages: [\n            {\n                id: 0,\n                file: 'calligro-page-0.png'\n            }\n        ],\n        chars: packedRects.map(rect => ({\n            id: rect.sourceRect.slot.character.charCodeAt(0),\n            x: rect.x,\n            y: rect.y,\n            width: rect.sourceRect.w,\n            height: rect.sourceRect.h,\n            xoffset: 0,\n            yoffset: 0,\n            xadvance: rect.sourceRect.w,\n            page: 0,\n            chnl: 15\n        }))\n    }\n\n    return [specification, [packedBlob]]\n}\n","import { FontSpec } from \"./Font\";\n\nfunction tag(name: string, properties: [string, string | number][]) {\n    const joinedProps = properties.map(([ prop, value ]) => `${prop}=${value.toString()}`).join(' ')\n    return `${name} ${joinedProps}`\n}\n\nexport function fontSpecToTxt(specification: FontSpec) {\n    const info = specification.info\n    const infoTag = tag('info', [\n        ['face', info.face],\n        ['size', info.size],\n        ['unicode', '1'],\n        ['stretchH', info.stretchH],\n        ['aa', info.stretchH],\n        ['padding', `${info.padding.up},${info.padding.right},${info.padding.down},${info.padding.left}`],\n        ['spacing', `${info.spacing.horizontal},${info.spacing.vertical}`]\n    ])\n\n    const common = specification.common\n    const commonTag = tag('common', [\n        ['lineHeight', common.lineHeight],\n        ['base', common.base],\n        ['scaleW', common.scaleW],\n        ['scaleH', common.scaleH],\n        ['pages', common.pages]\n    ])\n\n    const pageTags = specification.pages.map(page => tag('page', [\n        ['id', page.id],\n        ['file', page.file]\n    ]))\n\n    const charTags = specification.chars.map(char => tag('char', [\n        ['id', char.id],\n        ['x', char.x],\n        ['y', char.y],\n        ['width', char.width],\n        ['height', char.height],\n        ['xoffset', char.xoffset],\n        ['yoffset', char.yoffset],\n        ['xadvance', char.xadvance],\n        ['page', char.page],\n        ['chnl', char.chnl]\n    ]))\n\n    return [\n        infoTag,\n        commonTag,\n        ...pageTags,\n        ...charTags\n    ].join('\\n')\n}\n","import { downloadZip } from 'client-zip'\n\nfunction downloadBlob(name: string, blob: Blob): void {\n    const link = document.createElement('a')\n    link.href = URL.createObjectURL(blob)\n    link.download = name\n    link.click()\n\n    URL.revokeObjectURL(link.href)\n    link.remove()\n}\n\nexport interface ZippedFile {\n    name: string\n    input: string | Blob\n}\n\nexport async function downloadArchive(name: string, files: ZippedFile[]): Promise<void> {\n    const archive = downloadZip(files)\n    const blob = await archive.blob()\n\n    downloadBlob(`${name}.zip`, blob)\n}\n","import { downloadArchive, ZippedFile } from \"../fs/zip\";\n\nexport async function downloadBmf(fntFile: string, pages: Blob[]): Promise<void> {\n    const files: ZippedFile[] = [\n        {\n            name: 'calligro-font.fnt',\n            input: fntFile\n        },\n        ...pages.map((page, i) => ({\n            name: `calligro-page-${i}.png`,\n            input: page\n        }))\n    ]\n\n    return downloadArchive('calligro-font', files)\n}\n","import { bind } from 'helpful-decorators'\nimport React, { Component } from 'react'\nimport { generateFont } from '../../../generation/font/Font'\nimport { fontSpecToTxt } from '../../../generation/font/txtSaver'\nimport { downloadBmf } from '../../../generation/font/download'\nimport styles from './fontCreationView.module.scss'\n\ninterface FontCreationViewState {\n    generationAllowed: boolean\n    horizontalMargin: number\n    verticalMargin: number\n    lineHeight: number\n}\n\nclass FontCreationView extends Component<{}, FontCreationViewState> {\n    private templateCodeInput: React.RefObject<HTMLInputElement>\n    private templateInput: React.RefObject<HTMLInputElement>\n\n    constructor(props: {}) {\n        super(props)\n\n        this.state = {\n            generationAllowed: false,\n            horizontalMargin: 0,\n            verticalMargin: 0,\n            lineHeight: 0\n        }\n\n        this.templateCodeInput = React.createRef()\n        this.templateInput = React.createRef()\n    }\n\n\n    @bind\n    isInputsValid() {\n        const isInputsPresent = !!this.templateCodeInput.current?.files?.[0] && !!this.templateInput.current?.files?.[0]\n        let generationAllowed: boolean = false\n\n        if (isInputsPresent) {\n            const isCodeInputValid = this.templateCodeInput.current?.files?.[0].type === 'text/plain'\n            const isTemplateInputValid = this.templateInput.current?.files?.[0].type === 'image/png'\n    \n            generationAllowed = isTemplateInputValid && isCodeInputValid\n        }\n\n        this.setState({\n            generationAllowed: generationAllowed\n        })\n    }\n    \n    @bind\n    handleNumericalInput(event: React.ChangeEvent<HTMLInputElement>, name: 'horizontalMargin' | 'verticalMargin' | 'lineHeight') {\n        const value = parseInt(event.target.value, 10)\n\n        if (value >= 0) {\n            this.setState(prevState => ({\n                ...prevState,\n                [name]: value\n            }))\n        }\n    }\n\n    @bind\n    async downloadFont() {\n        const templateImg = this.templateInput.current?.files?.[0]\n        const templateCode = await this.templateCodeInput.current?.files?.[0].text()\n\n        if (!templateImg || !templateCode) {\n            return\n        }\n\n        const [fontSpec, pages] = await generateFont(templateImg, templateCode, {\n            horizontalSpacing: this.state.horizontalMargin,\n            verticalSpacing: this.state.verticalMargin,\n            lineHeight: this.state.lineHeight\n        })\n\n        const fntFile = fontSpecToTxt(fontSpec)\n\n        downloadBmf(fntFile, pages)\n    }\n\n    render() {\n        return(\n            <div className={styles.container}>\n                <label>code</label>\n                <input type='file' ref={this.templateCodeInput} onChange={this.isInputsValid} accept='.txt'/>\n\n                <label>template</label>\n                <input type='file' ref={this.templateInput} onChange={this.isInputsValid} accept='.png' />\n\n                <label>horizontal margin</label>\n                <input\n                    type='number'\n                    onChange={(event) => this.handleNumericalInput(event, 'horizontalMargin')}\n                    value={this.state.horizontalMargin}\n                />\n\n                <label>vertical margin</label>\n                <input\n                    type='number'\n                    onChange={(event) => this.handleNumericalInput(event, 'verticalMargin')}\n                    value={this.state.verticalMargin}\n                />\n\n                <label>line height</label>\n                <input\n                    type='number'\n                    onChange={(event) => this.handleNumericalInput(event, 'lineHeight')}\n                    value={this.state.lineHeight}\n                />\n\n                <button\n                    disabled={!this.state.generationAllowed}\n                    onClick={this.downloadFont}>\n                        generate font\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default FontCreationView\n","import React from 'react'\n\ninterface FaProps {\n    className?: string\n    icon: string\n}\n\nfunction Fa(props: FaProps) {\n    const className: string = props.className ?? ''\n\n    return (\n        <i className={`${props.icon} ${className}`}></i>\n    )\n}\n\nexport default Fa\n","import React from 'react'\nimport { WorkSlot } from '../../../generation/template/types'\nimport Fa from '../fa/Fa'\nimport styles from './generationCharacterList.module.scss'\n\ninterface GenerationCharacterListProps {\n    charSet: WorkSlot[]\n    handleDimensionChange: (event: React.ChangeEvent<HTMLInputElement>, dimension: 'width' | 'height', char: WorkSlot) => void\n    resetCharacterDimensions: (char: WorkSlot) => void\n    defaultWidth: number\n    defaultHeight: number\n}\n\nfunction GenerationCharacterList (props: GenerationCharacterListProps) {\n\n    const charList = props.charSet.map(char =>\n        <div key={char.character} className={styles.characterContainer}>\n            <p className={styles.character}>{char.character}</p>\n            <input\n                className={styles.input}\n                type='number'\n                value={char.width ?? props.defaultWidth}\n                onChange={(event) => props.handleDimensionChange(event, 'width', char)}\n            />\n            <Fa icon='fas fa-times' className={styles.times} />\n            <input\n                className={styles.input}\n                type='number'\n                value={char.height ?? props.defaultHeight}\n                onChange={(event) => props.handleDimensionChange(event, 'height', char)}\n            />\n\n            {\n                !!char.height || !!char.width\n                ? <span className={styles.buttonContainer}>\n                    <button onClick={() => props.resetCharacterDimensions(char)} className={styles.button}>\n                        <Fa icon='fas fa-times' className={styles.timesButton} />\n                    </button>\n                </span >\n                : null\n            }\n        </div>\n    )\n\n    return (\n        <div className={styles.container}>\n            {charList}\n        </div>\n    )\n}\n\nexport default GenerationCharacterList\n","import { downloadArchive, ZippedFile } from '../fs/zip'\nimport Template from './Template'\n\nexport async function downloadTemplate(template: Template): Promise<void> {\n    const files: ZippedFile[] = [\n        {\n            name: 'template.png',\n            input: await template.generateImageBlob()\n        },\n        {\n            name: 'template code.txt',\n            input: template.generateTemplateCode()\n        }\n    ]\n\n    return downloadArchive('calligro-template', files)\n}\n","import React, { Component } from 'react'\nimport { bind } from 'helpful-decorators'\nimport GenerationCharacterList from '../generationCharacterList/GenerationCharacterList'\nimport { WorkSlot, Slot } from '../../../generation/template/types'\nimport Template from '../../../generation/template/Template'\nimport { downloadTemplate } from '../../../generation/template/download'\nimport styles from './generationView.module.scss'\nimport Fa from '../fa/Fa'\nimport { Link } from 'react-router-dom'\n\ninterface GenerationViewState {\n    charSet: WorkSlot[]\n    defaultWidth: number\n    defaultHeight: number\n    base: number\n}\n\nconst defaultCharacters = 'AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz.?!,:'\n\nclass GenerationView extends Component<{}, GenerationViewState> {\n    constructor(props: {}) {\n        super(props)\n\n        this.state = this.setInitialState()\n    }\n\n    setInitialState(): GenerationViewState {\n        const storedData = window.localStorage.getItem('settings')\n        const parsedData: GenerationViewState = storedData ? JSON.parse(storedData) : null\n\n        return ({\n            charSet: parsedData?.charSet ?? this.createCharArray(),\n            defaultWidth: parsedData?.defaultWidth ?? 20,\n            defaultHeight: parsedData?.defaultHeight ?? 20,\n            base: parsedData?.base ?? 10\n        })\n    }\n\n    componentDidUpdate(prevProps: {}, prevState: GenerationViewState) {\n        if (prevState !== this.state) {\n            window.localStorage.setItem('settings', JSON.stringify(this.state))\n        }\n    }\n\n    createCharArray(): WorkSlot[] {\n        return Array.from(defaultCharacters, (character: string) => ({ character }))\n    }\n\n    @bind\n    handleCharSetInput(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        const newCharArray = event.target.value.split(\"\").filter(char => char !== \" \")\n        const isUniqueCharSet = new Set(newCharArray).size === newCharArray.length\n\n        event.preventDefault()\n\n        if (isUniqueCharSet) {\n            const newCharSet: WorkSlot[] = newCharArray.map(character => {\n                return this.state.charSet.find(oldChar => oldChar.character === character) ?? { character }\n            })\n\n            this.setState({\n                charSet: newCharSet\n            })\n        }\n    }\n\n    get slotArray(): Slot[] {\n        return this.state.charSet.map(workSlot => ({\n            character: workSlot.character,\n            width: workSlot.width ?? this.state.defaultWidth,\n            height: workSlot.height ?? this.state.defaultHeight\n        }))\n    }\n\n    get charString(): string {\n        return this.state.charSet.map(char => char.character).join(\"\")\n    }\n\n    @bind\n    handleDefaultValueChange(event: React.ChangeEvent<HTMLInputElement>, valueName: 'defaultWidth' | 'defaultHeight' | 'base') {\n        const newValue = parseInt(event.target.value, 10)\n        const isBaseValid = valueName === 'base' && newValue <= this.state.defaultHeight && newValue >= 0\n        const isDimensionPositive = valueName !== 'base' && newValue > 0\n\n        if (isBaseValid || isDimensionPositive) {\n            this.setState(prevState => ({\n                ...prevState,\n                [valueName]: newValue\n            }))\n        }\n    }\n  \n    @bind\n    handleDimensionChange(event: React.ChangeEvent<HTMLInputElement>, dimension: 'width' | 'height', char: WorkSlot) {\n        const newValue = parseInt(event.target.value, 10)\n\n        if (newValue > 0) {\n            const newCharSet: WorkSlot[] = this.state.charSet.map(character => character === char\n                ? {\n                    ...character,\n                    [dimension] : parseInt(event.target.value, 10)\n                }\n                : character\n            )\n\n            this.setState({\n                charSet: newCharSet\n            })\n        }\n    }\n\n    @bind\n    resetCharacterDimensions(char: WorkSlot) {\n        const newCharSet =  this.state.charSet.map(workSlot => char === workSlot ? { character: workSlot.character } : workSlot)\n\n        this.setState({\n            charSet: newCharSet\n        })\n    }\n\n    @bind\n    downloadTemplate() {\n        const template = new Template(this.slotArray, this.state.base)\n\n        downloadTemplate(template)\n    }\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <div className={styles.description}>\n                    <h2 className={styles.heading}>Generate bitmap fonts in the <a href='http://www.angelcode.com/products/bmfont/doc/file_format.html' className={styles.link}>BMFont</a> format.</h2>\n                    <p className={styles.paragraph}>Calligro lets you generate custom fonts from images created in graphics software like Gimp, Photoshop, Aseprite and others.</p>\n                    <p className={styles.paragraph}>\n                        If you’re looking to convert a truetype font into a BMFont, try tools like the\n                        original <a href='http://www.angelcode.com/products/bmfont/' className={styles.link}>BMFont</a> or <a href='https://github.com/libgdx/libgdx/wiki/Hiero' className={styles.link}>Hiero</a> instead.\n                    </p>\n                </div>\n\n                <div className={styles.characters}>\n                    <label className={styles.label}>\n                        Characters\n                        <Fa icon='fas fa-question' className={styles.questionMark} />\n                    </label>\n                    <textarea\n                        className={styles.charactersTextArea}\n                        onChange={this.handleCharSetInput}\n                        value={this.charString}\n                    />\n                </div>\n\n                <div className={styles.common}>\n                    <label className={styles.label}>Common</label>\n                    <div>\n                        <label className={styles.commonLabel}>Size</label>\n                        <input\n                            className={styles.commonInput}\n                            type='number'\n                            onChange={event => this.handleDefaultValueChange(event, 'defaultWidth')}\n                            value={this.state.defaultWidth}\n                        />\n                        <Fa icon='fas fa-times' className={styles.times} />\n                        <input\n                            className={styles.commonInput}\n                            type='number'\n                            onChange={event => this.handleDefaultValueChange(event, 'defaultHeight')}\n                            value={this.state.defaultHeight}\n                        />\n                        <Fa icon='fas fa-question' className={styles.questionMark} />\n                    </div>\n                    \n                    <div>\n                        <label className={styles.commonLabel}>Base</label>\n                        <input\n                            className={styles.commonInput}\n                            type='number'\n                            onChange={event => this.handleDefaultValueChange(event, 'base')}\n                            value={this.state.base}\n                        />\n                        <Fa icon='fas fa-question' className={styles.questionMark} />\n                    </div>\n\n                    <button onClick={this.downloadTemplate} className={styles.downloadButton}>download template</button>\n                </div>\n\n                <div className={styles.perCharacter}>\n                    <label className={styles.label}>Per character</label>\n                    <GenerationCharacterList\n                        charSet={this.state.charSet}\n                        defaultHeight={this.state.defaultHeight}\n                        defaultWidth={this.state.defaultWidth}\n                        handleDimensionChange={this.handleDimensionChange}\n                        resetCharacterDimensions={this.resetCharacterDimensions}\n                    />\n                </div>\n\n                <div className={styles.instructions}>\n                    <h2 className={styles.heading}>Step 1 - Create a template</h2>\n                    <ol className={styles.instructionList}>\n                        <li className={styles.instructionListItem}> Specify what characters you want included in the final font. </li>\n                        <li className={styles.instructionListItem}>Choose the character size and base.</li>\n                        <li className={styles.instructionListItem}>Optionally override the size per character if you want some to be smaller or bigger than the rest.</li>\n                        <li className={styles.instructionListItem}>Download the generated template. It’s a zip archive containing two files: png and txt. Open the png in your graphics editor of choice and draw characters inside the red boundaries.</li>\n                        <li className={styles.instructionListItem}>Go to <Link to='/step2' className={styles.link}>Step 2</Link> to upload the template and generate your font.</li>\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GenerationView\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styles from './navbar.module.scss'\n\nfunction Navbar() {\n    return (\n        <nav className={styles.container}>\n            <NavLink exact to='/' className={styles.navLinkLeft} activeClassName={styles.navLinkActive}>\n                <p className={styles.linkBig}>Step 1</p>\n                <p className={styles.linkSmall}>create template</p>\n            </NavLink>\n            <NavLink to='/step2' className={styles.navLinkRight} activeClassName={styles.navLinkActive}>\n                <p className={styles.linkBig}>Step 2</p>\n                <p className={styles.linkSmall}>generate your font</p>\n            </NavLink>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Navbar from '../navbar/Navbar'\nimport styles from './header.module.scss'\nimport GithubCorner from 'react-github-corner'\n\nfunction Header() {\n    return (\n        <div className={styles.container}>\n            <Navbar />\n            <GithubCorner href='https://github.com/Voycawojka/calligro' size='90' />\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport styles from './author.module.scss'\nimport Fa from '../fa/Fa'\n\ninterface Social {\n    icon: string\n    url: string\n}\n\ninterface AuthorProps {\n    name: string\n    socialLinks: Social[]\n}\n\nfunction Author(props: AuthorProps) {\n    const renderSocial = props.socialLinks.map(social =>\n        <a className={styles.socialLink} href={social.url} key={social.url}>\n            <Fa icon={social.icon} className={styles.icon} />\n        </a>\n    )\n\n    return (\n        <div className={styles.container}>\n            <h3 className={styles.name}>{props.name}</h3>\n            <div className={styles.socialContainer}>\n                {renderSocial}\n            </div>\n        </div>\n    )\n}\n\nexport default Author\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Author from '../author/Author'\nimport styles from './footer.module.scss'\n\nfunction Footer() {\n    return (\n        <footer className={styles.container}>\n            <Link to='/policy' className={`${styles.policy} ${styles.link}`}>Cookie policy</Link>\n            <div className={styles.authors}>\n                <Author\n                    name='Filip A. Kowalski'\n                    socialLinks={[\n                        {\n                            url: 'http://ideasalmanac.com',\n                            icon: 'fa fa-globe-africa'\n                        },\n                        {\n                            url: 'https://twitter.com/IdeasAlmanac',\n                            icon: 'fab fa-twitter'\n                        },\n                        {\n                            url: 'https://github.com/Voycawojka',\n                            icon: 'fab fa-github'\n                        }\n                    ]}\n                />\n                <Author\n                    name='Dominik Józefiak'\n                    socialLinks={[\n                        {\n                            url: 'https://github.com/domlj',\n                            icon: 'fab fa-github'\n                        }\n                    ]}\n                />\n            </div>\n            \n            <div className={styles.linkContainer}>\n                <a href='https://github.com/Voycawojka/calligro/issues' className={styles.link}>Found a bug?</a>\n                <a href='https://github.com/Voycawojka/calligro/issues' className={styles.link}>Have a feature request?</a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Policy() {\n    return (\n        <div>\n            <p>content</p>\n            <Link to='/' >back to menu</Link>\n        </div>\n    )\n}\n\nexport default Policy\n","import React from 'react'\nimport FontCreationView from './ui/generation/fontCreationView/FontCreationView'\nimport GenerationView from './ui/generation/generationView/GenerationView'\nimport { HashRouter, Route, Switch } from 'react-router-dom'\nimport Header from './ui/generation/header/Header'\nimport Footer from './ui/generation/footer/Footer'\nimport Policy from './ui/generation/policy/Policy'\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Switch>\n                <Route path='/policy'>\n                    <Policy />\n                </Route>\n\n                <Route>\n                    <Header/>\n\n                    <Route exact path='/'>\n                        <GenerationView />\n                    </Route>\n\n                    <Route exact path='/step2'>\n                        <FontCreationView />\n                    </Route>\n\n                    <Footer />\n                </Route>\n            </Switch>\n        </HashRouter>\n    )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}